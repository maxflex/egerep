{"version":3,"sources":["app.coffee","controllers/accounts.coffee","controllers/add-to-list.coffee","controllers/archives.coffee","controllers/attachment.coffee","controllers/calls.coffee","controllers/clients.coffee","controllers/contract.coffee","controllers/debt.coffee","controllers/empty.coffee","controllers/graph.coffee","controllers/login.coffee","controllers/logs.coffee","controllers/notifications.coffee","controllers/periods.coffee","controllers/requests.coffee","controllers/reviews.coffee","controllers/summary.coffee","controllers/tutors-select.coffee","controllers/tutors.coffee","controllers/_template.coffee","directives/comments.coffee","directives/email.coffee","directives/hightlight.coffee","directives/input-comment.coffee","directives/metro-list.coffee","directives/multi-select.coffee","directives/notifications.coffee","directives/pencil-input.coffee","directives/phones.coffee","directives/plural.coffee","directives/plus.coffee","directives/security-notificatoin.coffee","directives/select.coffee","directives/sms.coffee","directives/tutor-photo.coffee","directives/user-switch.coffee","directives/user.coffee","factory/factory.coffee","resources/resources.coffee","services/api.coffee","services/attachment.coffee","services/branch.coffee","services/phone.coffee","services/pusher.coffee","services/recommendation.coffee","services/svgmap.coffee","services/tutor.coffee","services/user.coffee"],"names":[],"mappings":"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B,EAAw0B,GAAx0B,EAA60B,GAA70B,CAHZ;MAIA,MAAA,EAAQ;QACI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,CADG,EACA,EADA,EACI,EADJ,EACQ,EADR,EACY,EADZ,EACgB,EADhB,EACoB,EADpB,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EACgD,EADhD,EACoD,EADpD,EACwD,EADxD,EAC4D,EAD5D,EACgE,EADhE,EACoE,EADpE,EACwE,EADxE,EAC4E,EAD5E,EACgF,EADhF,EACoF,EADpF,EACwF,EADxF,EAC4F,GAD5F,EACiG,GADjG,EACsG,GADtG,EAC2G,GAD3G,EACgH,GADhH,EACqH,GADrH,EAC0H,GAD1H,EAC+H,GAD/H,EACoI,GADpI,EACyI,GADzI,EAC8I,GAD9I,EACmJ,GADnJ,EACwJ,GADxJ,EAC6J,GAD7J,EACkK,GADlK,EACuK,GADvK,EAC4K,GAD5K,EACiL,GADjL,EACsL,GADtL,EAC2L,GAD3L,EACgM,GADhM,EACqM,GADrM,EAC0M,GAD1M,EAC+M,GAD/M,EACoN,GADpN,EACyN,GADzN,EAC8N,GAD9N,EACmO,GADnO,EACwO,GADxO,EAC6O,GAD7O,CAHd;SADJ,EAQI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,GADE,EACG,GADH,EACQ,GADR,EACa,GADb,CAHd;SARJ,EAeI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,YAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,GADE,EACG,GADH,EACQ,GADR,EACa,GADb,EACkB,GADlB,EACuB,GADvB,EAC4B,GAD5B,CAHd;SAfJ,EAsBI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,GADT,EACc,GADd,CAHd;SAtBJ,EA6BI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,YAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,EADjB,EACqB,GADrB,EAC0B,GAD1B,EAC+B,GAD/B,EACoC,GADpC,CAHd;SA7BJ,EAoCI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,aAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,GADtB,EAC2B,GAD3B,EACgC,GADhC,EACqC,GADrC,CAHd;SApCJ,EA2CI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,cAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,CAHd;SA3CJ,EAkDI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,SAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,CAHd;SAlDJ,EAyDI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,iBAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,GADb,EACkB,GADlB,CAHd;SAzDJ,EAgEI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,cAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,EADjB,EACqB,GADrB,EAC0B,GAD1B,EAC+B,GAD/B,EACoC,GADpC,CAHd;SAhEJ,EAuEI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,kBAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,GADF,EACO,GADP,EACY,GADZ,EACiB,GADjB,EACsB,GADtB,EAC2B,GAD3B,CAHd;SAvEJ,EA8EI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,EAC8B,GAD9B,EACmC,GADnC,CAHd;SA9EJ,EAqFI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,QAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,GADL,EACU,GADV,EACe,GADf,EACoB,GADpB,CAHd;SArFJ,EA4FI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,aAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,GADjB,EACsB,GADtB,CAHd;SA5FJ,EAmGI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,UAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,GADjB,EACsB,GADtB,EAC2B,GAD3B,EACgC,GADhC,EACqC,GADrC,EAC0C,GAD1C,EAC+C,GAD/C,CAHd;SAnGJ,EA0GI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,gBAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,GAD9B,EACmC,GADnC,EACwC,GADxC,EAC6C,GAD7C,EACkD,GADlD,EACuD,GADvD,CAHd;SA1GJ,EAiHI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,WAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,EAC8B,GAD9B,CAHd;SAjHJ,EAwHI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,WAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,GADN,EACW,GADX,CAHd;SAxHJ;OAJR;KADW;IAsIf,I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","file":"app.js","sourcesContent":["angular.module(\"Egerep\", ['ngSanitize', 'ngResource', 'ngMaterial', 'ngMap', 'ngAnimate', 'ui.sortable', 'ui.bootstrap', 'angular-ladda', 'mwl.calendar'])\r\n    .config [\r\n        '$compileProvider'\r\n        ($compileProvider) ->\r\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\r\n\t]\r\n    .filter 'cut', ->\r\n        (value, wordwise, max, nothing = '', tail = '…') ->\r\n            return nothing if !value or value is ''\r\n            max = parseInt(max, 10)\r\n            return value if !max\r\n            return value if value.length <= max\r\n            value = value.substr(0, max)\r\n            if wordwise\r\n                lastspace = value.lastIndexOf(' ')\r\n                if lastspace != -1\r\n                    #Also remove . and , so its gives a cleaner result.\r\n                    if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\r\n                        lastspace = lastspace - 1\r\n                    value = value.substr(0, lastspace)\r\n            value + tail\r\n    .filter 'hideZero', ->\r\n        (item) ->\r\n            if item > 0 then item else null\r\n    .run ($rootScope, $q, PusherService) ->\r\n        $rootScope.laroute = laroute\r\n\r\n        PusherService.bind 'IncomingRequest', (data) ->\r\n            request_count = $('#request-count')\r\n            request_counter = $('#request-counter')\r\n            animate_speed = 7000\r\n            request_counter.removeClass('text-success').removeClass('text-danger').css('opacity', 1)\r\n            if data.delete\r\n                request_count.text(parseInt(request_count.text()) - 1)\r\n                request_count.animate({'background-color': '#158E51'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\r\n                request_counter.text('-1').addClass('text-success').animate({opacity: 0}, animate_speed)\r\n            else\r\n                request_count.text(parseInt(request_count.text()) + 1)\r\n                request_count.animate({'background-color': '#A94442'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\r\n                request_counter.text('+1').addClass('text-danger').animate({opacity: 0}, animate_speed)\r\n\r\n        PusherService.bind 'AttachmentCountChanged', (data) ->\r\n            attachment_count   = $('#attachment-count')\r\n            attachment_counter = $('#attachment-counter')\r\n            animate_speed = 7000\r\n            attachment_counter.removeClass('text-success').removeClass('text-danger').css('opacity', 1)\r\n            if data.delete\r\n                attachment_count.text(parseInt(attachment_count.text()) - 1)\r\n                attachment_count.animate({'background-color': '#A94442'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\r\n                attachment_counter.text('-1').addClass('text-danger').animate({opacity: 0}, animate_speed)\r\n            else\r\n                attachment_count.text(parseInt(attachment_count.text()) + 1)\r\n                attachment_count.animate({'background-color': '#158E51'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\r\n                attachment_counter.text('+1').addClass('text-success').animate({opacity: 0}, animate_speed)\r\n\r\n        # отвечает за загрузку данных\r\n        $rootScope.dataLoaded = $q.defer()\r\n        # конец анимации front-end загрузки и rebind маск\r\n        $rootScope.frontendStop = (rebind_masks = true) ->\r\n            $rootScope.frontend_loading = false\r\n            $rootScope.dataLoaded.resolve(true)\r\n            rebindMasks() if rebind_masks\r\n\r\n        $rootScope.range = (min, max, step) ->\r\n          step = step or 1\r\n          input = []\r\n          i = min\r\n          while i <= max\r\n            input.push i\r\n            i += step\r\n          input\r\n\r\n          # skip_values – какие значения в enum пропускать\r\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\r\n          # recursion – функция была запущена рекурсивно (внизу)\r\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\r\n            # если установлено значение, которое пропускается для обычных пользователей,\r\n            # то запрещать его смену\r\n            return if not recursion and (parseInt(ngModel[status]) in skip_values or (isNaN(parseInt(ngModel[status])) and skip_values.indexOf(ngModel[status]) isnt -1)) and $rootScope.$$childHead.user.id not in allowed_user_ids\r\n\r\n            statuses = Object.keys(ngEnum)\r\n            status_id = statuses.indexOf ngModel[status].toString()\r\n            status_id++\r\n            status_id = 0 if status_id > (statuses.length - 1)\r\n            ngModel[status] = statuses[status_id]\r\n            # if in skip_values\r\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if ((isNaN(parseInt(ngModel[status])) and skip_values.indexOf(ngModel[status]) isnt -1) or status_id in skip_values) and $rootScope.$$childHead.user.id not in allowed_user_ids\r\n\r\n        # обновить + ждать ответа от сервера\r\n        # раньше я неправильно понимал алгоритм, поэтому без restricted_fields, freeze_restricted тоже можно было toggleить. при необходимости можно менять и переделать как $scope.enumToggles\r\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource, skip_values = [], restricted_fields = [], freeze_restricted = false) ->\r\n            return if ngModel[status] in restricted_fields and freeze_restricted #если запрешено менять значение\r\n\r\n            statuses = Object.keys(ngEnum)\r\n            status_id = statuses.indexOf ngModel[status].toString()\r\n\r\n            loop\r\n                status_id++\r\n                status_id = 0 if status_id > (statuses.length - 1)\r\n                value = if isNaN parseInt ngModel[status] then statuses[status_id] else status_id\r\n                unless value in skip_values or value in restricted_fields\r\n                    break\r\n\r\n            update_data = {id: ngModel.id}\r\n            update_data[status] = value\r\n\r\n            Resource.update update_data, ->\r\n                ngModel[status] = value\r\n\r\n        $rootScope.formatDateTime = (date) ->\r\n            moment(date).format \"DD.MM.YY в HH:mm\"\r\n\r\n        $rootScope.formatDate = (date, full_year = false) ->\r\n            return '' if not date\r\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\r\n\r\n        $rootScope.shortenYear = (date) ->\r\n            return '' if not date\r\n            # 11.12.2015 => 11.12.15\r\n            # 11-12-2016 => 11.12.16\r\n            date.replace /(\\d{2}[\\-\\.]{1}\\d{2}[\\-\\.]{1})\\d{2}(\\d{2})/, '$1$2'\r\n\r\n\r\n        $rootScope.formatTimestamp = (timestamp, full_year = false) ->\r\n            timestamp = +(timestamp + '000') if typeof timestamp is 'string'\r\n            return '' if not timestamp\r\n            moment(timestamp).format \"DD.MM.YY в HH:mm\" + (if full_year then \"YY\" else \"\")\r\n\r\n        $rootScope.dialog = (id) ->\r\n            $(\"##{id}\").modal 'show'\r\n            return\r\n\r\n        $rootScope.closeDialog = (id) ->\r\n            $(\"##{id}\").modal 'hide'\r\n            return\r\n\r\n        $rootScope.ajaxStart = ->\r\n            ajaxStart()\r\n            $rootScope.saving = true\r\n\r\n        $rootScope.ajaxEnd = ->\r\n            ajaxEnd()\r\n            $rootScope.saving = false\r\n\r\n        $rootScope.findById = (object, id) ->\r\n            _.findWhere(object, {id: parseInt(id)})\r\n\r\n        # prop2 – второй уровень вложенности\r\n        $rootScope.total = (array, prop, prop2 = false) ->\r\n            sum = 0\r\n            $.each array, (index, value) ->\r\n                v = value[prop]\r\n                v = v[prop2] if prop2\r\n                sum += v\r\n            sum\r\n\r\n        $rootScope.deny = (ngModel, prop) ->\r\n            ngModel[prop] = +(!ngModel[prop])\r\n\r\n        $rootScope.formatBytes = (bytes) ->\r\n          if bytes < 1024\r\n            bytes + ' Bytes'\r\n          else if bytes < 1048576\r\n            (bytes / 1024).toFixed(1) + ' KB'\r\n          else if bytes < 1073741824\r\n            (bytes / 1048576).toFixed(1) + ' MB'\r\n          else\r\n            (bytes / 1073741824).toFixed(1) + ' GB'\r\n","angular.module('Egerep')\r\n    .controller 'AccountsHiddenCtrl', ($scope, Grades, Attachment) ->\r\n        bindArguments($scope, arguments)\r\n        angular.element(document).ready ->\r\n            bindDraggable()\r\n\r\n        # draggable\r\n        bindDraggable = ->\r\n            $(\".client-draggable\").draggable\r\n                helper: 'clone'\r\n                revert: 'invalid'\r\n                appendTo: 'body'\r\n                activeClass: 'drag-active'\r\n                start: (event, ui) ->\r\n                    $(this).css \"visibility\", \"hidden\"\r\n                stop: (event, ui) ->\r\n                    $(this).css \"visibility\", \"visible\"\r\n\r\n            $(\".client-droppable\").droppable\r\n                tolerance: 'pointer'\r\n                hoverClass: 'client-droppable-hover'\r\n                drop: (event, ui) ->\r\n                    # ui.draggable.remove()\r\n                    client_id      = $(ui.draggable).data('id')\r\n                    client         = $scope.findById($scope.clients, client_id)\r\n                    if client.archive_state isnt 'possible'\r\n                        $scope.clients = removeById($scope.clients, client_id)\r\n\r\n                        Attachment.update\r\n                            id: client.attachment_id\r\n                            hide: 0\r\n\r\n                        $scope.visible_clients_count++\r\n                    $scope.$apply()\r\n    .controller 'AccountsCtrl', ($rootScope, $scope, $http, $timeout, Account, PaymentMethods, Archive, Grades, Attachment, AttachmentState, AttachmentStates, Weekdays, PhoneService, AttachmentVisibility, DebtTypes, YesNo, Tutor, ArchiveStates, Checked, PlannedAccount, UserService, LkPaymentTypes, Confirmed) ->\r\n        bindArguments($scope, arguments)\r\n        $scope.current_scope  = $scope\r\n        $scope.current_period = 0\r\n        $scope.all_displayed  = false\r\n\r\n        $scope.updateArchive = (field, set) ->\r\n            # просто update выдавал ошибку field doesnt exists\r\n            fillables = ['id', 'state', 'checked']\r\n            archive = {}\r\n            for fillable in fillables\r\n                 archive[fillable] = $scope.popup_attachment.archive[fillable]\r\n            $rootScope.toggleEnum(archive, field, set)\r\n            $scope.Archive.update archive\r\n            , (response)->\r\n                _.extendOwn($scope.popup_attachment.archive, archive)\r\n\r\n        angular.element(document).ready ->\r\n            $scope.loadPage()\r\n\r\n        # get index\r\n        $scope.getIndex = (a, b) ->\r\n            return b if a is 0\r\n            index = 0\r\n            $.each $scope.tutor.last_accounts, (i, account) ->\r\n                return if i >= a\r\n                index += $scope.getDates(i).length\r\n            index + b\r\n\r\n        $scope.loadPage = (type) ->\r\n            $rootScope.frontend_loading = true\r\n            $http.get \"api/accounts/#{$scope.tutor_id}\" + (if $scope.current_period then \"?date_limit=#{$scope.date_limit}\" else \"\")\r\n            .success (response) ->\r\n                    renderData(response)\r\n                    $scope.current_period++\r\n\r\n        renderData = (data) ->\r\n            # если у нового tutor last_accounts=null, то загрузили всё\r\n            if data.account is null\r\n                $scope.date_limit = $scope.first_attachment_date\r\n                $scope.all_displayed = true\r\n            else\r\n                if not $scope.current_period\r\n                    $scope.tutor = data\r\n                else\r\n                    $scope.tutor.last_accounts.unshift(data.account)\r\n                    $scope.date_limit = moment(data.account.date_end).subtract(7, 'days').format('YYYY-MM-DD')\r\n                    $scope.left       = data.left\r\n                    if data.accounts_in_week.length\r\n                        $scope.tutor.last_accounts = data.accounts_in_week.concat($scope.tutor.last_accounts)\r\n            $rootScope.frontend_loading = false\r\n            $('.accounts-table').stickyTableHeaders('destroy')\r\n            $timeout ->\r\n                $('.accounts-table').stickyTableHeaders()\r\n                bindDraggable()\r\n                $('.right-table-scroll').scroll ->\r\n                    $(window).trigger('resize.stickyTableHeaders')\r\n\r\n        getAccountStartDate = (index) ->\r\n            if index > 0\r\n                moment($scope.tutor.last_accounts[index - 1].date_end).add(1, 'days').toDate()\r\n            else\r\n                new Date $scope.date_limit\r\n\r\n        getAccountEndDate = (index) ->\r\n            if (index + 1) is $scope.tutor.last_accounts.length\r\n                ''\r\n            else\r\n                moment($scope.tutor.last_accounts[index + 1].date_end).subtract(1, 'days').toDate()\r\n\r\n        $scope.getDay = (date) ->\r\n            # Weekdays[0] is Monday; moment(date).day() = 0 is Sunday.\r\n            day = moment(date).day() - 1\r\n            day = 6 if day is -1\r\n            day\r\n\r\n        $scope.accountInfo = (client) ->\r\n            $scope.popup_attachment = null\r\n            $('#account-info').modal 'show'\r\n\r\n            $scope.selected_client = client\r\n\r\n            Attachment.get {id: client.attachment_id}, (response) ->\r\n                $scope.popup_attachment = response\r\n\r\n        $scope.changeDateDialog = (index) ->\r\n            $('#date-end-change').datepicker('destroy')\r\n            $('#date-end-change').datepicker\r\n                language\t: 'ru'\r\n                autoclose\t: true\r\n                orientation\t: 'bottom auto'\r\n                startDate   : getAccountStartDate(index)\r\n                endDate     : getAccountEndDate(index)\r\n\r\n            $scope.selected_account = $scope.tutor.last_accounts[index]\r\n            $scope.change_date_end = $scope.formatDate($scope.selected_account.date_end, true)\r\n            $scope.dialog 'change-account-date'\r\n\r\n        $scope.changeDate = ->\r\n            $scope.selected_account.date_end = convertDate($scope.change_date_end)\r\n            Account.update\r\n                id: $scope.selected_account.id\r\n                date_end: $scope.selected_account.date_end\r\n            # , (response) ->\r\n            #     $scope.selected_account = response\r\n            $scope.closeDialog 'change-account-date'\r\n\r\n        $scope.remove = (account) ->\r\n            bootbox.confirm 'Удалить встречу?', (result) ->\r\n                if result is true\r\n                    Account.delete {id: account.id}, ->\r\n                        $scope.tutor.last_accounts = removeById($scope.tutor.last_accounts, account.id)\r\n\r\n\r\n        $scope.save = ->\r\n            ajaxStart()\r\n            $.each $scope.tutor.last_accounts, (index, account) ->\r\n                Account.update account\r\n            ajaxEnd()\r\n\r\n        $scope.getFakeDates = ->\r\n            dates = []\r\n            current_date = moment().subtract(60, 'days').format('YYYY-MM-DD')\r\n            while current_date <= moment().format('YYYY-MM-DD')\r\n                dates.push current_date\r\n                current_date = moment(current_date).add(1, 'days').format('YYYY-MM-DD')\r\n            dates\r\n\r\n\r\n        $scope.getDates = (index) ->\r\n            dates = []\r\n            # если нулевой элемент, то отсчитываем от даты первой стыковки (самой ранней стыковки)\r\n            # иначе отсчитываем от даты конца предыдущего периода\r\n            if not index\r\n                current_date = $scope.date_limit\r\n            else\r\n                current_date = moment($scope.tutor.last_accounts[index - 1].date_end).add(1, 'days').format('YYYY-MM-DD')\r\n\r\n            while (current_date <= $scope.tutor.last_accounts[index].date_end)\r\n                dates.push current_date\r\n                current_date = moment(current_date).add(1, 'days').format('YYYY-MM-DD')\r\n            dates\r\n\r\n        # откуда можно выбирать дату в календаре\r\n        getCalendarStartDate = ->\r\n            if $scope.tutor.last_accounts.length > 0\r\n                date_end = $scope.tutor.last_accounts[$scope.tutor.last_accounts.length - 1].date_end\r\n                moment(date_end).add(1, 'days').toDate()\r\n            else\r\n                new Date $scope.date_limit\r\n\r\n        $scope.addAccountDialog = ->\r\n            $scope.new_account_date_end = ''\r\n            # @todo: узнать, как делается refresh\r\n            $('#date-end').datepicker('destroy')\r\n            $('#date-end').datepicker\r\n                language\t: 'ru'\r\n                startDate   : getCalendarStartDate()\r\n                autoclose\t: true\r\n                orientation\t: 'bottom auto'\r\n\r\n            $scope.dialog 'add-account'\r\n\r\n        $scope.addPlannedAccountDialog = ->\r\n            if not $scope.tutor.planned_account or (not 'is_planned' in $scope.tutor.planned_account or not $scope.tutor.planned_account.id)\r\n                $scope.tutor.planned_account = {is_planned: 0, payment_method: 0, user_id: '', date: ''}\r\n            else\r\n                _.extend $scope.tutor.planned_account, {is_planned:'1', tutor_id: $scope.tutor.id}\r\n\r\n            $('#pa-date').datepicker('destroy')\r\n            $('#pa-date').datepicker\r\n                language\t: 'ru'\r\n                autoclose\t: true\r\n                orientation\t: 'bottom auto'\r\n\r\n            $timeout ->\r\n                $scope.refreshSelects()\r\n            $('#add-planned-account').modal 'show'\r\n            return\r\n\r\n        validatePlannedAccount = ->\r\n            valid = true\r\n            if not (parseInt($scope.tutor.planned_account.is_planned) == 0)\r\n                if not $scope.tutor.planned_account.user_id > 0\r\n                    $('#pa-user .bootstrap-select').addClass 'has-error'\r\n                    valid = false\r\n                else\r\n                    $('#pa-user .bootstrap-select').removeClass 'has-error'\r\n                if not ($scope.tutor.planned_account.date and moment($scope.tutor.planned_account.date, 'DD.MM.YYYY').isValid())\r\n                    $('#pa-date').addClass 'has-error'\r\n                    valid = false\r\n                else\r\n                    $('#pa-date').removeClass 'has-error'\r\n            valid\r\n\r\n        $scope.addPlannedAccount = ->\r\n            return if not validatePlannedAccount()\r\n\r\n            $scope.tutor.planned_account['tutor_id'] = $scope.tutor.id\r\n            PlannedAccount.save $scope.tutor.planned_account, (response)->\r\n                $scope.tutor.planned_account.id = response.id\r\n                $('#add-planned-account').modal 'hide'\r\n                return\r\n\r\n        $scope.updatePlannedAccount  = ->\r\n            return if not validatePlannedAccount()\r\n\r\n            if +$scope.tutor.planned_account.is_planned\r\n                PlannedAccount.update\r\n                    id: $scope.tutor.planned_account.id\r\n                    data: $scope.tutor.planned_account\r\n            else\r\n                PlannedAccount.delete\r\n                    id: $scope.tutor.planned_account.id\r\n                , ->\r\n                    $scope.tutor.planned_account = null\r\n            $('#add-planned-account').modal 'hide'\r\n            return\r\n\r\n        $scope.refreshSelects = ->\r\n            $timeout ->\r\n                $('#add-planned-account .selectpicker option').each (index, el) ->\r\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\r\n                    $(el).data 'content', $(el).attr 'data-content'\r\n\r\n                $('#add-planned-account .selectpicker').selectpicker 'refresh'\r\n            , 100\r\n\r\n        $scope.addAccount = ->\r\n            Account.save\r\n                date_end: convertDate($scope.new_account_date_end)\r\n                tutor_id: $scope.tutor.id\r\n            , (new_account) ->\r\n                $scope.tutor.last_accounts.push(new_account)\r\n                $scope.closeDialog 'add-account'\r\n\r\n        getCommission = (val) ->\r\n            if val.indexOf('/') isnt -1\r\n                val = val.split('/')[1]\r\n                return if val then parseInt(val) else 0\r\n            else\r\n                return Math.round(parseInt(val) * .25)\r\n\r\n        # всего занятий\r\n        $scope.totalLessons = (account, client_id) ->\r\n            lessons_count = 0\r\n            $.each $scope.tutor.last_accounts, (index, account) ->\r\n                lessons_count += $scope.periodLessons(account, client_id)\r\n            lessons_count || null\r\n\r\n        # всего занятий в периоде\r\n        $scope.periodLessons = (account, client_id) ->\r\n            return null if not account.data[client_id]\r\n            lessons_count = 0\r\n            $.each account.data[client_id], (index, value) ->\r\n                lessons_count++ if value\r\n            lessons_count || null\r\n            # if account.data[client_id] then Object.keys(account.data[client_id]).length else 0\r\n\r\n        $scope.totalCommission = (account) ->\r\n            total_commission = 0\r\n            $.each account.data, (index, account_data) ->\r\n                $.each account_data, (index, val) ->\r\n                    total_commission += getCommission(val) if val isnt ''\r\n            total_commission\r\n\r\n\r\n\r\n        ## Управление кареткой ##\r\n\r\n        $scope.selectRow = (date) ->\r\n            $('.tr-' + date).addClass 'selected'\r\n            return\r\n        $scope.deselectRow = (date) ->\r\n            $('.tr-' + date).removeClass 'selected'\r\n            return\r\n\r\n\r\n        ###\r\n        * Перевести курсор, если элемент существует\r\n        ###\r\n\r\n        moveCursor = (x, y, direction) ->\r\n            # Определяем направление и изменяем координаты соответствующим образом\r\n            switch direction\r\n                when \"left\"     then x--\r\n                when \"right\"    then x++\r\n                when \"up\"       then y = moment(y).subtract('days', 1).format 'YYYY-MM-DD'\r\n                when \"down\"     then y = moment(y).add('days', 1).format 'YYYY-MM-DD'\r\n\r\n            # Если двигаемся в несуществующие поля\r\n            return if x < 0 or not $('#i-' + y + '-' + x).length\r\n\r\n            # Получаем новый элемент\r\n            el = $('#i-' + y + '-' + x)\r\n\r\n            # Если элемент существует, двигаемся туда\r\n            if el.length\r\n                $scope.caret = 0\r\n                el.focus()\r\n            else\r\n                moveCursor x, y, direction\r\n                # Если не получилось, пытаемся передвинуться еще раз (перепрыгнуть через несколько ячеек сразу)\r\n            return\r\n\r\n        $scope.caret = 0 # Позиция каретки\r\n        $scope.periodsCursor = (y, x, event, account_data, date) ->\r\n            # console.log y, x, event, $(\"#\" + y + \"-\" + x)\r\n            # Получаем начальный элемент (с которого возможно сдвинемся)\r\n            original_element = $(\"#i-#{y}-#{x}\")\r\n\r\n            # Если был нажат 0, то подхватываем значение поля сверху\r\n            if original_element.val() is \"0\" and original_element.val().length\r\n                while true\r\n                    d = moment(d or y).subtract('days', 1).format 'YYYY-MM-DD'\r\n                    new_element = $('#i-' + d + '-' + x)\r\n                    break if not new_element.length\r\n                    # Поверяем существует ли поле сверху\r\n                    if new_element.val()\r\n                        # Присваеваем текущему элементу значение сверху\r\n                        event.preventDefault()\r\n                        account_data[date] = new_element.val()\r\n                        break\r\n\r\n            # Если внутри цифр, то не прыгаем к следующему элементу\r\n            if original_element.caret() != $scope.caret\r\n                $scope.caret = original_element.caret()\r\n                return\r\n\r\n            switch event.which\r\n                # ВЛЕВО\r\n                when 37 then moveCursor(x, y, \"left\")\r\n                # ВВЕРХ\r\n                when 38 then moveCursor(x, y, \"up\")\r\n                # ВПРАВО\r\n                when 39 then moveCursor(x, y, \"right\")\r\n                # ВНИЗ\r\n                when 13, 40 then moveCursor(x, y, \"down\")\r\n\r\n\r\n        # draggable\r\n        bindDraggable = ->\r\n            $(\".client-draggable\").draggable\r\n                helper: 'clone'\r\n                revert: 'invalid'\r\n                appendTo: 'body'\r\n                activeClass: 'drag-active'\r\n                start: (event, ui) ->\r\n                    $(this).css \"visibility\", \"hidden\"\r\n                stop: (event, ui) ->\r\n                    $(this).css \"visibility\", \"visible\"\r\n\r\n            $(\".client-droppable\").droppable\r\n                tolerance: 'pointer'\r\n                hoverClass: 'client-droppable-hover'\r\n                drop: (event, ui) ->\r\n                    # ui.draggable.remove()\r\n                    client_id      = $(ui.draggable).data('id')\r\n                    client         = $scope.findById($scope.clients, client_id)\r\n                    if client.archive_state isnt 'possible'\r\n                        $scope.clients = removeById($scope.clients, client_id)\r\n\r\n                        ajaxStart()\r\n                        Attachment.update\r\n                            id: client.attachment_id\r\n                            hide: hideValue()\r\n                        , ->\r\n                            ajaxEnd()\r\n\r\n                        updateClientCount()\r\n                    $scope.$apply()\r\n\r\n        # почему так? потому что раньше было AccountsCtrl/HiddenAccountsCtrl, а теперь AccountsCtrl отвечает за оба страницы.\r\n        # @todo наверно надо будет переделать, чтоб нормально было все.\r\n        hideValue = ->\r\n            if $scope.page is 'hidden' then 0 else 1\r\n\r\n        updateClientCount = ->\r\n            if $scope.page is 'hidden'\r\n                $scope.visible_clients_count++\r\n            else\r\n                $scope.hidden_clients_count++\r\n\r\n        $scope.checkBeforeRun = (check, callback, param) ->\r\n            if check\r\n                confirm_hash = 'cbcb58ac2e496207586df2854b17995f';\r\n                bootbox.prompt {\r\n                    title: \"Введите пароль\",\r\n                    className: \"modal-password\",\r\n                    callback: (result) =>\r\n                        if result isnt null\r\n                            if md5(result) is confirm_hash\r\n                                callback(param)\r\n                                return true\r\n                            else\r\n                                $('.bootbox-form').addClass('has-error').children().first().focus()\r\n                                $('.bootbox-input-text').on 'keydown', ->\r\n                                    $(this).parent().removeClass 'has-error'\r\n                                return false\r\n                    ,\r\n                    buttons: {\r\n                        confirm: {\r\n                            label: \"Подтвердить\"\r\n                        },\r\n                        cancel: {\r\n                            className: \"display-none\"\r\n                        },\r\n                    }\r\n                    onEscape: true\r\n                }\r\n                return\r\n            else\r\n                callback(param)\r\n\r\n        $scope.toggleConfirmed = (account) ->\r\n            $rootScope.toggleEnumServer account, 'confirmed', Confirmed, Account\r\n\r\n        $scope.hasConfirmedAccount = ->\r\n            return _.where($scope.tutor.last_accounts, {confirmed: 1}).length","angular.module 'Egerep'\r\n    .controller 'AddToList', ($scope, Genders, Grades, Subjects, TutorStates, Destinations, TutorService, PhoneService, RequestList) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        # transparent marker opacity\r\n        TRANSPARENT_MARKER = 0.3\r\n\r\n        # differentiate single & double click\r\n        clicks = 0\r\n\r\n        # marker clusterer\r\n        markerClusterer = undefined\r\n\r\n        # mode: 'map' | 'list'\r\n        $scope.mode = 'map'\r\n\r\n        # loading map\r\n        $scope.loading = false\r\n\r\n        angular.element(document).ready ->\r\n            $scope.list = new RequestList($scope.list)\r\n            $('.map-tutor-list').droppable()\r\n\r\n        $scope.getHours = (minutes) ->\r\n            Math.floor(minutes / 60)\r\n\r\n        $scope.getMinutes = (minutes) ->\r\n            minutes % 60\r\n\r\n        $scope.find = ->\r\n            $scope.loading = true\r\n            TutorService.getFiltered {search: $scope.search, client_marker: $scope.client.markers[0]}\r\n                .then (response) ->\r\n                    $scope.tutors = response.data\r\n                    showTutorsOnMap()\r\n                    findIntersectingMetros()\r\n                    repaintChosen()\r\n                    $scope.loading = false\r\n\r\n        # determine whether tutor had already been added\r\n        $scope.added = (tutor_id) ->\r\n            tutor_id in $scope.list.tutor_ids.map(Number)\r\n\r\n        # rebind draggable\r\n        rebindDraggable = ->\r\n            $('.temporary-tutor').draggable\r\n                containment: 'window'\r\n                revert: (valid) ->\r\n                    return true if valid\r\n                    $scope.tutor_list = removeById($scope.tutor_list, $scope.dragging_tutor.id)\r\n                    $scope.$apply()\r\n\r\n        # remember dragging tutor\r\n        $scope.startDragging = (tutor) ->\r\n            $scope.dragging_tutor = tutor\r\n\r\n        showTutorsOnMap = ->\r\n            unsetAllMarkers()\r\n            $scope.marker_id = 1\r\n\r\n            # временный список репетиторов\r\n            $scope.tutor_list = []\r\n\r\n            $scope.markers = []\r\n            $scope.tutors.forEach (tutor) ->\r\n                tutor.markers.forEach (marker) ->\r\n                    # Создаем маркер\r\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\r\n                    new_marker.metros = marker.metros\r\n                    new_marker.tutor = tutor\r\n\r\n                    # Добавляем маркер на карту\r\n                    new_marker.setMap($scope.map)\r\n\r\n                    # Добавляем ивент удаления маркера\r\n                    bindTutorMarkerEvents(new_marker)\r\n                    $scope.markers.push new_marker\r\n            # @todo: consider using Marker Clusterer\r\n            markerClusterer = new MarkerClusterer $scope.map, $scope.markers,\r\n                gridSize: 10\r\n                # maxZoom: 12\r\n                imagePath: 'img/maps/clusterer/m'\r\n\r\n        showClientOnMap = ->\r\n            $scope.client.markers.forEach (marker) ->\r\n                # Создаем маркер\r\n                new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, 'white')\r\n                new_marker.metros = marker.metros\r\n                new_marker.setMap($scope.map)\r\n\r\n        unsetAllMarkers = ->\r\n            # unset markers\r\n            if $scope.markers isnt undefined\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.setMap null\r\n            # unset clusterer\r\n            if markerClusterer isnt undefined\r\n                markerClusterer.clearMarkers()\r\n\r\n        findIntersectingMetros = ->\r\n            if $scope.search.destination is 'r_k'\r\n                # find intersecting markers\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.intersecting = false\r\n                    $scope.client.markers.forEach (client_marker) ->\r\n                        client_marker.metros.forEach (client_metro) ->\r\n                            if client_metro.station_id.toString() in marker.tutor.svg_map\r\n                                marker.intersecting = true\r\n                                marker.tutor.intersecting = true\r\n                                return\r\n                # paint non-intersecting with half opacity\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.setOpacity(TRANSPARENT_MARKER) if not marker.intersecting\r\n\r\n        # получить репетиторов, которые выезжают на ближайшую станцию метро клиента\r\n        $scope.intersectingTutors = ->\r\n            _.where($scope.tutors, { intersecting: true })\r\n\r\n        # получить репетиторов, которые НЕ доезжают до ближайшей станции\r\n        $scope.notIntersectingTutors = ->\r\n            _.filter $scope.tutors, (tutor) ->\r\n                _.isUndefined(tutor.intersecting)\r\n\r\n\r\n        bindTutorMarkerEvents = (marker) ->\r\n            # double click custom handler with delay\r\n            google.maps.event.addListener marker, 'click', (event) ->\r\n                clicks++\r\n                if clicks is 1\r\n                    setTimeout ->\r\n                        if clicks is 1\r\n                            # single click\r\n                            if marker.tutor in $scope.tutor_list\r\n                                $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\r\n                            else\r\n                                $scope.hovered_tutor = null\r\n                                $scope.tutor_list.push marker.tutor\r\n                            $scope.$apply()\r\n                            rebindDraggable()\r\n                        else\r\n                            # double click\r\n                            $scope.addOrRemove(marker.tutor.id)\r\n                        clicks = 0\r\n                    , 250\r\n\r\n            google.maps.event.addListener marker, 'dblclick', (event) ->\r\n                clicks++\r\n\r\n            google.maps.event.addListener marker, 'mouseover', (event) ->\r\n                return if marker.tutor in $scope.tutor_list\r\n                $scope.hovered_tutor = marker.tutor\r\n                $scope.$apply()\r\n\r\n            google.maps.event.addListener marker, 'mouseout', (event) ->\r\n                $scope.hovered_tutor = null\r\n                $scope.$apply()\r\n\r\n        # add or remove tutor from list\r\n        $scope.addOrRemove = (tutor_id) ->\r\n            tutor_id = parseInt(tutor_id)\r\n            if tutor_id in $scope.list.tutor_ids.map(Number)\r\n                $scope.list.tutor_ids = _.without($scope.list.tutor_ids.map(Number), tutor_id)\r\n            else\r\n                $scope.list.tutor_ids.push(tutor_id)\r\n            repaintChosen()\r\n            $scope.list.$update()\r\n\r\n        repaintChosen = ->\r\n            $scope.markers.forEach (marker) ->\r\n                if marker.tutor.id in $scope.list.tutor_ids.map(Number) and not marker.chosen\r\n                    marker.chosen = true\r\n                    marker.setOpacity(1)\r\n                    marker.setIcon ICON_BLUE\r\n                if marker.tutor.id not in $scope.list.tutor_ids.map(Number) and marker.chosen\r\n                    marker.chosen = false\r\n                    marker.setOpacity if marker.intersecting then 1 else TRANSPARENT_MARKER\r\n                    marker.setIcon getMarkerType(marker.type)\r\n\r\n\r\n        $scope.$on 'mapInitialized', (event, map) ->\r\n            # Запоминаем карту после инициалицации\r\n            $scope.gmap = map\r\n\r\n            # generate recommended search bounds\r\n            INIT_COORDS =\r\n                lat: 55.7387\r\n                lng: 37.6032\r\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\r\n            $scope.geocoder = new (google.maps.Geocoder)\r\n\r\n            # Зум и центр карты по умолчанию\r\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n            $scope.gmap.setZoom 11\r\n\r\n            showClientOnMap()\r\n            $scope.tutors = $scope.list.tutors\r\n            showTutorsOnMap()\r\n            repaintChosen()\r\n","angular\r\n.module 'Egerep'\r\n.factory 'Archives', ($resource) ->\r\n\t$resource 'api/archives/:id', {},\r\n\t\tupdate:\r\n\t\t\tmethod: 'PUT'\r\n.controller 'ArchivesIndex', ($rootScope, $scope, $timeout, $http, AttachmentService, UserService, PhoneService, Subjects, Grades, Presence, YesNo, AttachmentVisibility, AttachmentErrors, ArchiveStates, Checked) ->\r\n\tbindArguments($scope, arguments)\r\n\t$rootScope.frontend_loading = true\r\n\r\n\trefreshCounts = ->\r\n\t\t$timeout ->\r\n\t\t\t$('.selectpicker option').each (index, el) ->\r\n\t\t\t\t$(el).data 'subtext', $(el).attr 'data-subtext'\r\n\t\t\t\t$(el).data 'content', $(el).attr 'data-content'\r\n\t\t\t$('.selectpicker').selectpicker 'refresh'\r\n\t\t, 100\r\n\t$scope.keyFilter = (event) ->\r\n\t\t$scope.filter() if event.keyCode is 13\r\n        \r\n\t$scope.filter = ->\r\n\t\t$.cookie('archives', JSON.stringify($scope.search), { expires: 365, path: '/' });\r\n\t\t$scope.current_page = 1\r\n\t\t$scope.pageChanged()\r\n\r\n\t$scope.changeState = (state_id) ->\r\n\t\t$rootScope.frontend_loading = true\r\n\t\t$scope.archives = []\r\n\t\t$scope.current_page = 1\r\n\t\tloadArchives $scope.current_page\r\n\t\twindow.history.pushState(state_id, '', 'archives/' + state_id.toLowerCase());\r\n\r\n\t$timeout ->\r\n\t\t$scope.search = if $.cookie('archives') then JSON.parse($.cookie('archives')) else {}\r\n\t\tloadArchives $scope.page\r\n\t\t$scope.current_page = $scope.page\r\n\r\n\t$scope.pageChanged = ->\r\n\t\t$rootScope.frontend_loading = true\r\n\t\t$rootScope.archives = []\r\n\t\tloadArchives $scope.current_page\r\n\t\tpaginate('archives', $scope.current_page)\r\n\r\n\tloadArchives = (page) ->\r\n\t\tparams = '?page=' + page\r\n\r\n\t\t$http.get \"api/archives#{ params }\"\r\n\t\t.then (response) ->\r\n\t\t\t$scope.data = response.data.data\r\n\t\t\t$scope.archives = response.data.data.data\r\n\t\t\t$scope.counts = response.data.counts\r\n\t\t\t$rootScope.frontend_loading = false\r\n\t\t\trefreshCounts()\r\n","angular\r\n    .module 'Egerep'\r\n    .factory 'Attachment', ($resource) ->\r\n        $resource 'api/attachments/:id', {},\r\n            update:\r\n                method: 'PUT'\r\n    .controller 'AttachmentsStats', ($scope, $rootScope, $http, $timeout, Months, UserService) ->\r\n        $scope.getYears = ->\r\n            count = 4\r\n            i = 0\r\n            years = []\r\n            while i < count\r\n                years.push moment().subtract('year', i).format('YYYY')\r\n                i++\r\n            years\r\n\r\n        $scope.getUsersByYear = (year) ->\r\n            _.chain($scope.data).where({year: parseInt(year)}).pluck('user_id').uniq().value()\r\n\r\n        $scope.getDays = ->\r\n            _.range(1, 32)\r\n\r\n        $scope.dayExtremum = (day, year, val, mode) ->\r\n            return false if not val\r\n\r\n            condition = {year: parseInt(year)}\r\n            condition.day = parseInt(day) if day isnt null\r\n\r\n            data = _.where $scope.data, condition\r\n\r\n            max = -999\r\n            min = 999\r\n\r\n            data.forEach (d) ->\r\n                max = d.count if d.count > max\r\n                min = d.count if d.count < min\r\n\r\n            extremum = if mode is 'max' then max else min\r\n            console.log(extremum, val, year) if day is null\r\n            val == extremum\r\n\r\n        $scope.totalExtremum = (year, val) ->\r\n            return false if not val\r\n\r\n            user_ids = $scope.getUsersByYear(year)\r\n            return false if not user_ids.length\r\n\r\n            max = -9999\r\n\r\n            user_ids.forEach (user_id) ->\r\n                v = $scope.getUserTotal(year, user_id)\r\n                max = v if v > max\r\n\r\n            val == max\r\n\r\n        $scope.getUserTotal = (year, user_id) ->\r\n            data = _.where $scope.data,\r\n                year: parseInt(year)\r\n                user_id: parseInt(user_id)\r\n            sum = 0\r\n            data.forEach (d) ->\r\n                sum += d.count\r\n            sum or ''\r\n\r\n        $scope.getDayTotal = (year, day = null) ->\r\n            condition = {year: parseInt(year)}\r\n            condition.day = parseInt(day) if day isnt null\r\n            data = _.where $scope.data, condition\r\n            sum = 0\r\n            data.forEach (d) ->\r\n                sum += d.count\r\n            sum or ''\r\n\r\n        $scope.getValue = (day, year, user_id) ->\r\n            d = _.find scope.data,\r\n                day: parseInt(day)\r\n                year: parseInt(year)\r\n                user_id: parseInt(user_id)\r\n            if d isnt undefined then d.count else ''\r\n\r\n        $scope.$watch 'month', (newVal, oldVal) ->\r\n            $rootScope.frontend_loading = true\r\n            $http.post 'api/attachments/stats', {month: newVal}\r\n            .then (response) ->\r\n                $rootScope.frontend_loading = false\r\n                $scope.data = response.data\r\n        bindArguments($scope, arguments)\r\n    .controller 'AttachmentsIndex', ($rootScope, $scope, $timeout, $http, AttachmentStates, AttachmentService, UserService, PhoneService, Subjects, Grades, Presence, YesNo, AttachmentVisibility, AttachmentErrors) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.recalcAttachmentErrors = ->\r\n            $scope.attachment_errors_updating = true\r\n            $http.post 'api/command/model-errors', {model: 'attachments'}\r\n\r\n        refreshCounts = ->\r\n            $timeout ->\r\n                $('.selectpicker option').each (index, el) ->\r\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\r\n                    $(el).data 'content', $(el).attr 'data-content'\r\n                $('.selectpicker').selectpicker 'refresh'\r\n\r\n                $('.attachment-filters button').css 'background', 'none'\r\n                $('.attachment-filters select > option[value!=\"\"]:selected').parent('select').siblings('button').css('background', '#dceee5')\r\n            , 100\r\n\r\n        $scope.filter = ->\r\n            $.cookie(\"attachments\", JSON.stringify($scope.search), { expires: 365, path: '/' });\r\n            $scope.current_page = 1\r\n            $scope.pageChanged()\r\n\r\n        $scope.changeState = (state_id) ->\r\n            $rootScope.frontend_loading = true\r\n            $scope.attachments = []\r\n            $scope.current_page = 1\r\n            loadAttachments($scope.current_page)\r\n            window.history.pushState(state_id, '', 'attachments/' + state_id.toLowerCase());\r\n\r\n        $timeout ->\r\n            $scope.search = if $.cookie(\"attachments\") then JSON.parse($.cookie(\"attachments\")) else {}\r\n            loadAttachments $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        $scope.pageChanged = ->\r\n            $rootScope.frontend_loading = true\r\n            $rootScope.attachments = []\r\n            loadAttachments $scope.current_page\r\n            paginate('attachments', $scope.current_page)\r\n\r\n        loadAttachments = (page) ->\r\n            params = '?page=' + page\r\n\r\n            $http.get \"api/attachments#{ params }\"\r\n            .then (response) ->\r\n                $scope.data = response.data.data\r\n                $scope.attachments = response.data.data.data\r\n                $scope.counts = response.data.counts\r\n                $rootScope.frontend_loading = false\r\n                refreshCounts()\r\n    .controller 'AttachmentsNew', ($rootScope, $scope, $timeout, $http, AttachmentStates, AttachmentService, UserService, PhoneService, Subjects, Grades, Presence, YesNo, AttachmentVisibility, AttachmentErrors) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        # track comment loading.\r\n        $rootScope.loaded_comments = 0\r\n        $scope.$watch () ->\r\n            console.log $rootScope.loaded_comments\r\n            $rootScope.loaded_comments\r\n        , (val) ->\r\n            console.log val\r\n            $rootScope.frontend_loading = false if $scope.attachments and $scope.attachments.length == val\r\n        # /track comment loading.\r\n\r\n        $scope.daysAgo = (date) ->\r\n            now = moment(Date.now())\r\n            date = moment(new Date(date).getTime())\r\n            now.diff(date, 'days')\r\n\r\n        $timeout ->\r\n            load $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        $scope.pageChanged = ->\r\n            $rootScope.frontend_loading = true\r\n            $rootScope.loaded_comments = 0\r\n            load $scope.current_page\r\n            paginate('attachments/new', $scope.current_page)\r\n\r\n        load = (page) ->\r\n            params = '?page=' + page\r\n\r\n            $http.get \"api/attachments/new#{ params }\"\r\n            .then (response) ->\r\n                console.log response\r\n                $scope.counts = response.data.counts\r\n                $scope.data = response.data\r\n                $scope.attachments = response.data.data\r\n                $rootScope.frontend_loading = false if not $scope.attachments.length\r\n","angular\r\n.module 'Egerep'\r\n#\r\n#   LIST CONTROLLER\r\n#\r\n.controller \"CallsMissed\", ($scope, $http, PhoneService) ->\r\n\tbindArguments($scope, arguments)\r\n\r\n\t$scope.deleteCall = (call) ->\r\n\t\tajaxStart()\r\n\t\t$http.delete \"calls/\" + call.entry_id, {}\r\n\t\t.then (response) ->\r\n\t\t\tajaxEnd()\r\n\t\t\t$scope.calls = _.without $scope.calls, call","angular\r\n    .module 'Egerep'\r\n\r\n\r\n\r\n    #\r\n    #   LIST CONTROLLER\r\n    #\r\n    .controller \"ClientsIndex\", ($scope, $rootScope, $timeout, $http, Client, RequestStates, Request) ->\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.pageChanged = ->\r\n            load $scope.current_page\r\n            paginate('clients', $scope.current_page)\r\n\r\n        load = (page) ->\r\n            $rootScope.frontend_loading = true\r\n            params = '?page=' + page\r\n            params += \"&global_search=#{ $scope.global_search }\" if $scope.global_search\r\n\r\n            # update repetitors\r\n            # @todo: why ugly params? maybe use $http.post instead?\r\n            $http.get \"api/clients#{ params }\"\r\n                .then (response) ->\r\n                    $rootScope.frontendStop()\r\n                    $scope.data = response.data\r\n                    $scope.clients = $scope.data.data\r\n\r\n        $timeout ->\r\n            load $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n    #\r\n    #   ADD/EDIT CONTROLLER\r\n    #\r\n    .controller \"ClientsForm\", ($scope, $rootScope, $timeout, $interval, $http, Client, Request, RequestList, User, RequestStates, Subjects, Grades, Attachment, ReviewStates, ArchiveStates, AttachmentStates, ReviewScores, Archive, Review, ApiService, UserService, RecommendationService, AttachmentService, AttachmentVisibility, Marker, YesNo, Checked) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.is_dragging_teacher = false\r\n        $scope.sortableOptions =\r\n            tolerance: 'pointer'\r\n            activeClass: 'drag-active'\r\n            helper: 'clone'\r\n            appendTo: 'body'\r\n            # drag: (event, ui) ->\r\n            #     ui.helper.offset(ui.position)\r\n            start: (e, ui) ->\r\n                $scope.is_dragging_teacher = true\r\n                $scope.$apply()\r\n            stop: (e, ui) ->\r\n                $scope.is_dragging_teacher = false\r\n                $scope.$apply()\r\n                saveSelectedList()\r\n\r\n        # Save everything\r\n        $scope.edit = ->\r\n            filterMarkers()\r\n            $scope.ajaxStart()\r\n            $scope.client.$update()\r\n                .then ->\r\n                    $scope.ajaxEnd()\r\n\r\n        # Save everything\r\n        $scope.save = ->\r\n            filterMarkers()\r\n            $scope.ajaxStart()\r\n            $scope.Client.save $scope.client, (response)->\r\n                window.location = \"requests/#{response.id}/edit\"\r\n\r\n        bindDroppable = ->\r\n            $timeout ->\r\n                $('.teacher-remove-droppable').droppable\r\n                    tolerance: 'pointer'\r\n                    hoverClass: 'drop-hover'\r\n                    drop: (e, ui) ->\r\n                        tutor_id = $(ui.draggable).data 'id'\r\n                        $timeout ->\r\n                            $scope.selected_list.tutor_ids = _.without($scope.selected_list.tutor_ids, tutor_id.toString())\r\n                            saveSelectedList()\r\n\r\n        # get teacher\r\n        $timeout ->\r\n            $scope.users = User.query()\r\n\r\n            $http.get 'api/tutors/list'\r\n                .success (tutors) ->\r\n                    $scope.tutors = tutors\r\n\r\n            # $rootScope.frontendStop() - 2 раза потому что Client.get загружает клиента асинхронно. если сделать общим\r\n            # рендер телефонных номеров может сломаться, т. к. она сработает как только frontendStopped.\r\n            if $scope.id > 0\r\n                $scope.client = Client.get {id: $scope.id}, (client) ->\r\n                    $scope.selected_request = if $scope.request_id then _.findWhere(client.requests, {id: $scope.request_id}) else client.requests[0]\r\n                    $scope.parseHash()\r\n                    sp 'list-subjects', 'выберите предмет'\r\n                    $rootScope.frontendStop()\r\n            else\r\n                $scope.client = $scope.new_client\r\n                $scope.client.requests = [$scope.new_request]\r\n                $scope.selected_request = $scope.client.requests[0]\r\n                $rootScope.frontendStop()\r\n\r\n        saveSelectedList = ->\r\n            # tutor_ids = []\r\n            # $.each $scope.selected_list.tutors, (index, tutor) ->\r\n            #     tutor_ids.push tutor.id\r\n            # $scope.selected_list.tutor_ids = tutor_ids\r\n            RequestList.update $scope.selected_list\r\n\r\n        $scope.getTutorList = ->\r\n            tutors = []\r\n            if $scope.selected_list\r\n                $.each $scope.selected_list.tutor_ids, (index, tutor_id) ->\r\n                    tutors.push findById($scope.selected_list.tutors, tutor_id)\r\n                tutors\r\n\r\n        # Если в ссылке указан хэш, то это #id_списка#id_стыковки\r\n        $scope.parseHash = ->\r\n            values = window.location.hash.split('#')\r\n            values.shift()\r\n            if values[0]\r\n                $scope.selected_list = findById($scope.selected_request.lists, values[0])\r\n            if values[1] and $scope.selected_list\r\n                $scope.selected_attachment = findById($scope.selected_list.attachments, values[1])\r\n\r\n        $scope.toggleArchive = ->\r\n            if $scope.selected_attachment.archive\r\n                Archive.delete $scope.selected_attachment.archive, ->\r\n                    delete $scope.selected_attachment.archive\r\n            else\r\n                Archive.save\r\n                    attachment_id: $scope.selected_attachment.id\r\n                , (response) ->\r\n                    $scope.selected_attachment.archive = response\r\n\r\n        $scope.toggleReview = ->\r\n            if $scope.selected_attachment.review\r\n                Review.delete $scope.selected_attachment.review, ->\r\n                    delete $scope.selected_attachment.review\r\n            else\r\n                Review.save\r\n                    attachment_id: $scope.selected_attachment.id\r\n                , (response) ->\r\n                    $scope.selected_attachment.review = response\r\n\r\n        $scope.attachmentExists = (tutor_id) ->\r\n            attachment_exists = false\r\n            $.each $scope.client.requests, (index, request) ->\r\n                return if attachment_exists\r\n                $.each request.lists, (index, list) ->\r\n                    $.each list.attachments, (index, attachment) ->\r\n                        attachment_exists = true if parseInt(attachment.tutor_id) is parseInt(tutor_id)\r\n            attachment_exists\r\n\r\n        $scope.selectAttachment = (attachment) ->\r\n            $scope.selected_attachment = attachment\r\n\r\n        $scope.addList = ->\r\n            $scope.dialog('add-subject')\r\n\r\n        $scope.setList = (list) ->\r\n            $scope.selected_list = list\r\n            $scope.showListMap() if $scope.list_map\r\n            delete $scope.selected_attachment\r\n\r\n        $scope.listExists = (subject_id) ->\r\n            _.findWhere($scope.selected_request.lists, {subject_id: parseInt(subject_id)}) isnt undefined\r\n\r\n        $scope.selectRequest = (request) ->\r\n            $scope.selected_request = request\r\n            delete $scope.selected_list\r\n\r\n        $scope.addListSubject = ->\r\n            RequestList.save\r\n                request_id: $scope.selected_request.id\r\n                subjects: $scope.list_subjects\r\n            , (data) ->\r\n                $scope.selected_request.lists.push data\r\n                $scope.selected_list = data\r\n\r\n            delete $scope.list_subjects\r\n            spRefresh 'list-subjects'\r\n            $('#add-subject').modal 'hide'\r\n            return\r\n\r\n        $scope.addListTutor = ->\r\n            $scope.selected_list.tutor_ids.push $scope.list_tutor_id\r\n            RequestList.update\r\n                id: $scope.selected_list.id\r\n                tutor_ids: $scope.selected_list.tutor_ids\r\n            , ->\r\n            # $scope.client.lists[$scope.selected_list_id].push $scope.list_tutor_id\r\n                delete $scope.list_tutor_id\r\n                $('#add-tutor').modal 'hide'\r\n\r\n        $scope.newAttachment = (tutor_id) ->\r\n            ajaxStart()\r\n            Attachment.save\r\n                grade: $scope.client.grade\r\n                tutor_id: tutor_id\r\n                subjects: $scope.selected_list.subjects\r\n                request_list_id: $scope.selected_list.id\r\n                client_id: $scope.client.id\r\n            , (new_attachment) ->\r\n                ajaxEnd()\r\n                if new_attachment.id\r\n                    $scope.selected_attachment = new_attachment\r\n                    $scope.selected_list.attachments.push new_attachment\r\n\r\n        $scope.addRequest = ->\r\n            new_request = new Request\r\n                client_id: $scope.id\r\n\r\n            ajaxStart()\r\n            new_request.$save()\r\n                .then (data) ->\r\n                    ajaxEnd()\r\n                    $scope.client.requests.push(data)\r\n                    $scope.selected_request = data\r\n                    unsetSelected(false, true, true)\r\n\r\n        $scope.removeRequest = ->\r\n            bootbox.confirm 'Вы уверены, что хотите удалить заявку?', (response) ->\r\n                if response is true\r\n                    Request.delete {id: $scope.selected_request.id}, ->\r\n                        $scope.client.requests = removeById $scope.client.requests, $scope.selected_request.id\r\n                        unsetSelected(true, true, true)\r\n\r\n        $scope.transferRequest = ->\r\n            $('#transfer-request').modal 'show'\r\n\r\n        $scope.transferRequestGo = ->\r\n            $('#transfer-request').modal 'hide'\r\n            ajaxStart()\r\n            $http.post \"api/requests/transfer/#{$scope.selected_request.id}\",\r\n                client_id: $scope.transfer_client_id\r\n            .then (response) ->\r\n                ajaxEnd()\r\n                console.log response\r\n                if response.data isnt '' then location.reload() else bootbox.alert('Клиент не существует')\r\n\r\n        # Снять выбор с выбранной комбинации\r\n        unsetSelected = (request = false, list = false, attachment = false) ->\r\n            $scope.selected_request = null if request\r\n            $scope.selected_list = null if list\r\n            $scope.selected_attachment = null if attachment\r\n\r\n        $scope.removeList = ->\r\n            bootbox.confirm 'Вы уверены, что хотите удалить список?', (response) ->\r\n                if response is true\r\n                    RequestList.delete {id: $scope.selected_list.id}, ->\r\n                        $scope.selected_request.lists = removeById $scope.selected_request.lists, $scope.selected_list.id\r\n                        delete $scope.selected_list\r\n                        unsetSelected(false, true, true)\r\n\r\n        $scope.removeAttachment = ->\r\n            bootbox.confirm 'Вы уверены, что хотите удалить стыковку?', (response) ->\r\n                if response is true\r\n                    Attachment.delete {id: $scope.selected_attachment.id}, ->\r\n                        $scope.selected_list.attachments = removeById $scope.selected_list.attachments, $scope.selected_attachment.id\r\n                        delete $scope.selected_attachment\r\n                        unsetSelected(false, false, true)\r\n\r\n        # parse textarea for tutor IDS\r\n        $scope.$watch 'selected_request.comment', (newVal, oldVal) ->\r\n            return if newVal is undefined and oldVal is undefined\r\n            newVal = oldVal if newVal is undefined\r\n            $scope.request_tutor_ids = []\r\n            matches = newVal.match /Репетитор [\\d]+/gi\r\n            $.each matches, (index, match) ->\r\n                tutor_id = match.match /[\\d]+/gi\r\n                $scope.request_tutor_ids.push parseInt(tutor_id)\r\n\r\n        # refresh selectpicker on $selected_attachment update\r\n        $scope.$watch 'selected_attachment', (newVal, oldVal) ->\r\n            return if newVal is undefined\r\n            sp 'attachment-subjects', 'выберите предмет' if oldVal is undefined\r\n            spRefresh 'attachment-subjects' if oldVal isnt undefined\r\n            rebindMasks()\r\n\r\n        $scope.$watch 'selected_list', (newVal, oldVal) ->\r\n            bindDroppable() if oldVal is undefined and newVal isnt undefined\r\n\r\n\r\n        #\r\n        # ПОСЛЕ ЗАГРУЗКИ КАРТЫ\r\n        #\r\n        $scope.marker_id = 1\r\n        $scope.map_number = 0\r\n\r\n        filterMarkers = ->\r\n            new_markers = []\r\n            $.each $scope.client.markers, (index, marker) ->\r\n                new_markers.push _.pick(marker, 'lat', 'lng', 'type', 'metros', 'server_id')\r\n            $scope.client.markers = new_markers\r\n\r\n\r\n        $scope.$on 'mapInitialized', (event, map) ->\r\n            map.number = $scope.map_number\r\n            if $scope.map_number is 0\r\n                # Запоминаем карту после инициалицации\r\n                $scope.gmap = map\r\n                # Добавляем существующие метки\r\n                $scope.loadMarkers()\r\n                # generate recommended search bounds\r\n                INIT_COORDS =\r\n                    lat: 55.7387\r\n                    lng: 37.6032\r\n                $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\r\n                $scope.geocoder = new (google.maps.Geocoder)\r\n                # События добавления меток\r\n                google.maps.event.addListener map, 'click', (event) ->\r\n                    $scope.gmapAddMarker event\r\n            else\r\n                # Запоминаем карту после инициалицации\r\n                $scope.gmap2 = map\r\n\r\n                # Зум и центр карты по умолчанию\r\n                $scope.gmap2.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n                $scope.gmap2.setZoom 11\r\n            $scope.map_number++\r\n\r\n        # Показать карту\r\n        $scope.showMap = ->\r\n            $('#gmap-modal').modal 'show'\r\n            # Показываем карту\r\n            google.maps.event.trigger $scope.gmap, 'resize'\r\n\r\n            # Зум и центр карты по умолчанию\r\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n            $scope.gmap.setZoom 11\r\n\r\n            # Обнуляем значение поиска\r\n            $('#map-search').val ''\r\n\r\n            # Удаляем все маркеры поиска\r\n            if $scope.search_markers and $scope.search_markers.length\r\n                $.each $scope.search_markers, (i, marker) ->\r\n                    marker.setMap null\r\n                $scope.search_markers = []\r\n\r\n            # Если уже есть добавленные маркеры\r\n            if $scope.client.markers.length\r\n                # отображать только метки с выбранным типом\r\n                bounds = new (google.maps.LatLngBounds)\r\n                # есть отображаемые маркеры\r\n                markers_count = 0\r\n                # отображаем маркеры по одному\r\n                $.each $scope.client.markers, (index, marker) ->\r\n                    markers_count++\r\n                    # отображаемые маркеры есть\r\n                    # marker.setVisible true\r\n                    bounds.extend marker.position\r\n                # если отображаемые маркеры есть, делаем зум на них\r\n                if markers_count > 0\r\n                    $scope.gmap.fitBounds bounds\r\n                    $scope.gmap.panToBounds bounds\r\n                    $scope.gmap.setZoom 11\r\n\r\n        $scope.gmapAddMarker = (event) ->\r\n            # Создаем маркер\r\n            # var marker = newMarker($scope.marker_id++, $scope.marker_type, event.latLng)\r\n            marker = newMarker($scope.marker_id++, event.latLng, $scope.gmap)\r\n\r\n            # Добавляем маркер в маркеры\r\n            $scope.client.markers.push(marker)\r\n\r\n            # Добавляем маркер на карту\r\n            marker.setMap($scope.gmap)\r\n\r\n            # Ищем ближайшие станции метро к маркеру\r\n            ApiService.metro 'closest',\r\n                lat: marker.lat\r\n                lng: marker.lng\r\n            .then (response) ->\r\n                marker.metros = response.data\r\n\r\n            # Добавляем ивент удаления маркера\r\n            $scope.bindMarkerDelete(marker)\r\n            $scope.bindMarkerChangeType(marker)\r\n\r\n        # Добавляем ивент удаления маркера\r\n        $scope.bindMarkerDelete = (marker) ->\r\n            google.maps.event.addListener marker, 'dblclick', (event) ->\r\n                t = this\r\n                # удаляем маркер с карты\r\n                t.setMap null\r\n                # удаляем маркер из коллекции\r\n                $.each $scope.client.markers, (index, m) ->\r\n                    if m isnt undefined and t.id == m.id\r\n                        # удаляем маркер с сервера, если нужно\r\n                        if m.server_id isnt undefined\r\n                            ajaxStart()\r\n                            Marker.delete {id: m.server_id}\r\n                            , ->\r\n                                ajaxEnd()\r\n                        $scope.client.markers.splice index, 1\r\n\r\n        $scope.bindMarkerChangeType = (marker) ->\r\n            google.maps.event.addListener marker, 'click', (event) ->\r\n                if @type == 'green'\r\n                    @type = 'red'\r\n                    @setIcon ICON_RED\r\n                else if @type == 'red'\r\n                    @type = 'blue'\r\n                    @setIcon ICON_BLUE\r\n                else\r\n                    @type = 'green'\r\n                    @setIcon ICON_GREEN\r\n                if marker.server_id isnt undefined\r\n                    ajaxStart()\r\n                    Marker.update {id: marker.server_id, type: @type}\r\n                    , ->\r\n                        ajaxEnd()\r\n\r\n        # Поиск по карте\r\n        $scope.searchMap = (address) ->\r\n            $scope.geocoder.geocode {\r\n                address: address + ', московская область'\r\n                bounds: $scope.RECOM_BOUNDS\r\n                componentRestrictions:\r\n                    country: 'RU'\r\n                    administrativeArea: 'Moscow'\r\n            }, (results, status) ->\r\n                if status == google.maps.GeocoderStatus.OK\r\n                    # максимальное кол-во результатов\r\n                    max_results = 3\r\n                    # масштаб поиска\r\n                    search_result_bounds = new (google.maps.LatLngBounds)\r\n                    $.each results, (i, result) ->\r\n                        return if i >= max_results\r\n\r\n                        search_result_bounds.extend result.geometry.location\r\n                        # границы карты в зависимости от поставленных меток\r\n                        search_marker = new (google.maps.Marker)(\r\n                            map: $scope.gmap\r\n                            position: result.geometry.location\r\n                            icon: ICON_SEARCH)\r\n\r\n                        google.maps.event.addListener search_marker, 'click', (event) ->\r\n                            @setMap null\r\n                            $scope.gmapAddMarker event\r\n                        $scope.search_markers = initIfNotSet($scope.search_markers)\r\n                        $scope.search_markers.push search_marker\r\n\r\n                    # если отображаемые маркеры есть, делаем зум на них\r\n                    if results.length > 0\r\n                        $scope.gmap.fitBounds search_result_bounds\r\n                        $scope.gmap.panToBounds search_result_bounds\r\n                        if results.length == 1\r\n                            $scope.gmap.setZoom 12\r\n                    else\r\n                        $('#map-search').addClass('has-error').focus()\r\n\r\n        # Запуск поиска по карте\r\n        $scope.gmapsSearch = ($event) ->\r\n            if $event.keyCode == 13 or $event.type == 'click'\r\n                # prevent empty\r\n                if $('#map-search').val() == ''\r\n                    $('#map-search').addClass('has-error').focus()\r\n                else\r\n                    $('#map-search').removeClass 'has-error'\r\n                $scope.searchMap $('#map-search').val()\r\n\r\n        # Загрузить метки\r\n        $scope.loadMarkers = ->\r\n            $rootScope.dataLoaded.promise.then ->\r\n                markers = []\r\n                $.each $scope.client.markers, (index, marker) ->\r\n                    # Создаем маркер\r\n                    # @todo: сделать так, чтобы type и metros и еще дургие можно было передавать массивом в последнем параметре\r\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.gmap, marker.type, marker.id)\r\n                    new_marker.metros = marker.metros\r\n\r\n                    # Добавляем маркер на карту\r\n                    new_marker.setMap($scope.gmap)\r\n                    console.log 'adding marker', $scope.gmap\r\n\r\n                    # Добавляем ивент удаления маркера\r\n                    $scope.bindMarkerDelete(new_marker)\r\n                    $scope.bindMarkerChangeType(new_marker)\r\n                    markers.push new_marker\r\n                $scope.client.markers = markers\r\n\r\n        # Сохранить метки\r\n        $scope.saveMarkers = ->\r\n            $('#gmap-modal').modal 'hide'\r\n\r\n\r\n\r\n\r\n\r\n        #\r\n        # КАРТА СПИСКА\r\n        #\r\n        $scope.listMap = ->\r\n            $scope.list_map = not $scope.list_map\r\n            $scope.showListMap()\r\n\r\n        # determine whether tutor had already been added\r\n        $scope.added = (tutor_id) ->\r\n            tutor_id in $scope.tutor_ids.map(Number)\r\n\r\n        # rebind draggable\r\n        rebindDraggable = ->\r\n            $('.temporary-tutor').draggable\r\n                containment: 'window'\r\n                revert: (valid) ->\r\n                    return true if valid\r\n                    $scope.tutor_list   = removeById($scope.tutor_list, $scope.dragging_tutor.id)\r\n                    $scope.tutor_ids    = _.without($scope.tutor_ids.map(Number), $scope.dragging_tutor.id)\r\n                    $scope.$apply()\r\n                    repaintChosen()\r\n\r\n        # remember dragging tutor\r\n        $scope.startDragging = (tutor) ->\r\n            $scope.dragging_tutor = tutor\r\n\r\n        showTutorsOnMap = ->\r\n            unsetAllMarkers()\r\n            $scope.marker_id2 = 1\r\n            # временный список репетиторов\r\n            $scope.tutor_list = []\r\n            # отображать только метки с выбранным типом\r\n            bounds = new (google.maps.LatLngBounds)\r\n            # есть отображаемые маркеры\r\n            markers_count = 0\r\n            $scope.markers2 = []\r\n\r\n            # Показываем карту\r\n            google.maps.event.trigger $scope.gmap2, 'resize'\r\n\r\n            # Зум и центр карты по умолчанию\r\n            $scope.gmap2.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n            $scope.gmap2.setZoom 11\r\n\r\n            # $.each $scope.client.markers, (marker) ->\r\n            #     markers_count++\r\n            #     bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\r\n\r\n            $scope.client.markers.forEach (marker) ->\r\n                markers_count++\r\n                bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\r\n\r\n            $scope.selected_list.tutors.forEach (tutor) ->\r\n                tutor.markers.forEach (marker) ->\r\n                    markers_count++\r\n                    bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\r\n\r\n                    # Создаем маркер\r\n                    new_marker = newMarker($scope.marker_id2++, new google.maps.LatLng(marker.lat, marker.lng), $scope.gmap2, marker.type)\r\n                    new_marker.metros = marker.metros\r\n                    new_marker.tutor = tutor\r\n\r\n                    # Добавляем маркер на карту\r\n                    new_marker.setMap($scope.gmap2)\r\n\r\n                    # Добавляем ивент удаления маркера\r\n                    bindTutorMarkerEvents(new_marker)\r\n                    $scope.markers2.push new_marker\r\n\r\n            # если отображаемые маркеры есть, делаем зум на них\r\n            if markers_count > 0\r\n                $scope.gmap2.fitBounds bounds\r\n                $scope.gmap2.panToBounds bounds\r\n                $scope.gmap2.setZoom 10\r\n\r\n            $scope.gmap2.panBy(150, 0)\r\n\r\n        showClientOnMap = ->\r\n            $scope.client.markers.forEach (marker) ->\r\n                # Создаем маркер\r\n                new_marker = newMarker($scope.marker_id2++, new google.maps.LatLng(marker.lat, marker.lng), $scope.gmap2, 'white')\r\n                new_marker.metros = marker.metros\r\n                new_marker.setMap($scope.gmap2)\r\n\r\n        unsetAllMarkers = ->\r\n            # unset markers\r\n            if $scope.markers2 isnt undefined\r\n                $scope.markers2.forEach (marker) ->\r\n                    marker.setMap null\r\n\r\n        bindTutorMarkerEvents = (marker) ->\r\n            # double click custom handler with delay\r\n            google.maps.event.addListener marker, 'click', (event) ->\r\n                # single click\r\n                if marker.tutor in $scope.tutor_list\r\n                    $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\r\n                else\r\n                    $scope.hovered_tutor = null\r\n                    $scope.tutor_list.push marker.tutor\r\n                $scope.addOrRemove(marker.tutor.id)\r\n                $scope.$apply()\r\n                rebindDraggable()\r\n\r\n            google.maps.event.addListener marker, 'mouseover', (event) ->\r\n                return if marker.tutor in $scope.tutor_list\r\n                $scope.hovered_tutor = marker.tutor\r\n                $scope.$apply()\r\n\r\n            google.maps.event.addListener marker, 'mouseout', (event) ->\r\n                $scope.hovered_tutor = null\r\n                $scope.$apply()\r\n\r\n        # add or remove tutor from list\r\n        $scope.addOrRemove = (tutor_id) ->\r\n            tutor_id = parseInt(tutor_id)\r\n            $scope.tutor_ids = [] if $scope.tutor_ids is undefined\r\n            if tutor_id in $scope.tutor_ids.map(Number)\r\n                $scope.tutor_ids = _.without($scope.tutor_ids.map(Number), tutor_id)\r\n            else\r\n                $scope.tutor_ids.push(tutor_id)\r\n            repaintChosen()\r\n\r\n        repaintChosen = ->\r\n            $scope.markers2.forEach (marker) ->\r\n                if marker.tutor.id in $scope.tutor_ids.map(Number) and not marker.chosen\r\n                    marker.chosen = true\r\n                    marker.setIcon ICON_BLUE\r\n                if marker.tutor.id not in $scope.tutor_ids.map(Number) and marker.chosen\r\n                    marker.chosen = false\r\n                    marker.setIcon getMarkerType(marker.type)\r\n\r\n        $scope.showListMap = ->\r\n            $timeout ->\r\n                showTutorsOnMap()\r\n                showClientOnMap()\r\n","angular\r\n.module 'Egerep'\r\n.controller 'ContractIndex', ($scope, $http, UserService) ->\r\n\tbindArguments($scope, arguments)\r\n\r\n.controller 'ContractEdit', ($scope, $http, $timeout, UserService) ->\r\n\tbindArguments($scope, arguments)\r\n\r\n\t$scope.save = ->\r\n\t\tajaxStart()\r\n\t\t$scope.saving = true\r\n\t\t$scope.contract_html = $scope.editor.getValue()\r\n\t\t$http.post \"contract\",\r\n\t\t\tcontract_html: $scope.contract_html\r\n\t\t\tcontract_date: $scope.contract_date\r\n\t\t.then (response) ->\r\n\t\t\tajaxEnd()\r\n\t\t\t$scope.saving = false\r\n\r\n\tangular.element(document).ready ->\r\n\t\t$timeout ->\r\n\t\t\t$scope.editor = ace.edit 'editor'\r\n\t\t\t$scope.editor.getSession().setMode 'ace/mode/html'\r\n\t\t, 300\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'DebtMap', ($scope, $timeout, TutorService, Tutor, Subjects, YesNo) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        # transparent marker opacity\r\n        TRANSPARENT_MARKER = 0.3\r\n\r\n        # differentiate single & double click\r\n        clicks = 0\r\n\r\n        # marker clusterer\r\n        markerClusterer = undefined\r\n\r\n        # mode: 'map' | 'list'\r\n        $scope.mode = 'map'\r\n\r\n        # loading map\r\n        $scope.loading = false\r\n\r\n        # search params\r\n        $scope.search = {}\r\n\r\n        $scope.tutor_ids = []\r\n\r\n        $scope.sortType     = 'debt_calc'\r\n        $scope.sortReverse  = false\r\n\r\n        $scope.$watch 'mode', (newVal, oldVal) ->\r\n            if newVal is 'debtor' and $scope.debtors is undefined\r\n                TutorService.getDebtors().then (response) ->\r\n                    $scope.debtors = response.data\r\n\r\n        $scope.totalLastDebt = ->\r\n            sum = 0\r\n            tutors = if $scope.mode == 'list' then $scope.tutors else $scope.debtors\r\n            $.each tutors, (index, tutor) ->\r\n                if tutor.last_account_info isnt null\r\n                    debt = tutor.last_account_info.debt\r\n                    sum += if tutor.last_account_info.debt_type then +debt else -debt\r\n            {\r\n                debt_type: if sum < 0 then 0 else 1\r\n                debt: Math.abs(sum)\r\n            }\r\n\r\n        $scope.blurComment = (tutor) ->\r\n            tutor.is_being_commented = false\r\n            tutor.debt_comment = tutor.old_debt_comment\r\n\r\n        $scope.focusComment = (tutor) ->\r\n            tutor.is_being_commented = true\r\n            tutor.old_debt_comment = tutor.debt_comment\r\n\r\n        $scope.startComment = (tutor) ->\r\n            tutor.is_being_commented = true\r\n            tutor.old_debt_comment = tutor.debt_comment\r\n            $timeout ->\r\n                $(\"#list-comment-#{tutor.id}\").focus()\r\n\r\n        $scope.saveComment =  (event, tutor) ->\r\n            if event.keyCode is 13\r\n                Tutor.update\r\n                    id: tutor.id\r\n                    debt_comment: tutor.debt_comment\r\n                , (response) ->\r\n                    tutor.old_debt_comment = tutor.debt_comment\r\n                    $(event.target).blur()\r\n\r\n        angular.element(document).ready ->\r\n            $('.map-tutor-list').droppable()\r\n\r\n        $scope.find = ->\r\n            $scope.loading = true\r\n            TutorService.getDebtMap {search: $scope.search}\r\n                .then (response) ->\r\n                    $scope.tutors = response.data\r\n                    angular.forEach $scope.tutors, (tutor) ->\r\n                        if tutor.last_account_info\r\n                            tutor.last_debt = if tutor.last_account_info.debt_type then tutor.last_account_info.debt else -tutor.last_account_info.debt\r\n                        else\r\n                            tutor.last_debt = 0\r\n                    showTutorsOnMap()\r\n                    $scope.loading = false\r\n\r\n        # determine whether tutor had already been added\r\n        $scope.added = (tutor_id) ->\r\n            tutor_id in $scope.tutor_ids\r\n\r\n        # rebind draggable\r\n        rebindDraggable = ->\r\n            $('.temporary-tutor').draggable\r\n                containment: 'window'\r\n                revert: (valid) ->\r\n                    return true if valid\r\n                    $scope.tutor_list   = removeById($scope.tutor_list, $scope.dragging_tutor.id)\r\n                    $scope.tutor_ids    = _.without($scope.tutor_ids, $scope.dragging_tutor.id)\r\n                    $scope.$apply()\r\n                    repaintChosen()\r\n\r\n        # remember dragging tutor\r\n        $scope.startDragging = (tutor) ->\r\n            $scope.dragging_tutor = tutor\r\n\r\n        showTutorsOnMap = ->\r\n            unsetAllMarkers()\r\n            $scope.marker_id = 1\r\n\r\n            # временный список репетиторов\r\n            $scope.tutor_list = []\r\n\r\n            $scope.markers = []\r\n            $scope.tutors.forEach (tutor) ->\r\n                tutor.markers.forEach (marker) ->\r\n                    # Создаем маркер\r\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\r\n                    new_marker.metros = marker.metros\r\n                    new_marker.tutor = tutor\r\n\r\n                    # Добавляем маркер на карту\r\n                    new_marker.setMap($scope.map)\r\n\r\n                    # Добавляем ивент удаления маркера\r\n                    bindTutorMarkerEvents(new_marker)\r\n                    $scope.markers.push new_marker\r\n            # @todo: consider using Marker Clusterer\r\n            markerClusterer = new MarkerClusterer $scope.map, $scope.markers,\r\n                gridSize: 10\r\n                # maxZoom: 12\r\n                imagePath: 'img/maps/clusterer/m'\r\n\r\n        showClientOnMap = ->\r\n            $scope.client.markers.forEach (marker) ->\r\n                # Создаем маркер\r\n                new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, 'white')\r\n                new_marker.metros = marker.metros\r\n                new_marker.setMap($scope.map)\r\n\r\n        unsetAllMarkers = ->\r\n            # unset markers\r\n            if $scope.markers isnt undefined\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.setMap null\r\n            # unset clusterer\r\n            if markerClusterer isnt undefined\r\n                markerClusterer.clearMarkers()\r\n\r\n        findIntersectingMetros = ->\r\n            if $scope.search.destination is 'r_k'\r\n                # find intersecting markers\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.intersecting = false\r\n                    $scope.client.markers.forEach (client_marker) ->\r\n                        client_marker.metros.forEach (client_metro) ->\r\n                            if client_metro.station_id.toString() in marker.tutor.svg_map\r\n                                marker.intersecting = true\r\n                                marker.tutor.intersecting = true\r\n                                return\r\n                # paint non-intersecting with half opacity\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.setOpacity(TRANSPARENT_MARKER) if not marker.intersecting\r\n\r\n        # получить репетиторов, которые выезжают на ближайшую станцию метро клиента\r\n        $scope.intersectingTutors = ->\r\n            _.where($scope.tutors, { intersecting: true })\r\n\r\n        # получить репетиторов, которые НЕ доезжают до ближайшей станции\r\n        $scope.notIntersectingTutors = ->\r\n            _.filter $scope.tutors, (tutor) ->\r\n                _.isUndefined(tutor.intersecting)\r\n\r\n\r\n        bindTutorMarkerEvents = (marker) ->\r\n            # double click custom handler with delay\r\n            google.maps.event.addListener marker, 'click', (event) ->\r\n                # single click\r\n                if marker.tutor in $scope.tutor_list\r\n                    $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\r\n                else\r\n                    $scope.hovered_tutor = null\r\n                    $scope.tutor_list.push marker.tutor\r\n                $scope.addOrRemove(marker.tutor.id)\r\n                $scope.$apply()\r\n                rebindDraggable()\r\n\r\n            google.maps.event.addListener marker, 'mouseover', (event) ->\r\n                return if marker.tutor in $scope.tutor_list\r\n                $scope.hovered_tutor = marker.tutor\r\n                $scope.$apply()\r\n\r\n            google.maps.event.addListener marker, 'mouseout', (event) ->\r\n                $scope.hovered_tutor = null\r\n                $scope.$apply()\r\n\r\n        # add or remove tutor from list\r\n        $scope.addOrRemove = (tutor_id) ->\r\n            tutor_id = parseInt(tutor_id)\r\n            if tutor_id in $scope.tutor_ids\r\n                $scope.tutor_ids = _.without($scope.tutor_ids, tutor_id)\r\n            else\r\n                $scope.tutor_ids.push(tutor_id)\r\n            repaintChosen()\r\n\r\n        repaintChosen = ->\r\n            $scope.markers.forEach (marker) ->\r\n                if marker.tutor.id in $scope.tutor_ids and not marker.chosen\r\n                    marker.chosen = true\r\n                    marker.setIcon ICON_BLUE\r\n                if marker.tutor.id not in $scope.tutor_ids and marker.chosen\r\n                    marker.chosen = false\r\n                    marker.setIcon getMarkerType(marker.type)\r\n\r\n\r\n        $scope.$on 'mapInitialized', (event, map) ->\r\n            # Запоминаем карту после инициалицации\r\n            $scope.gmap = map\r\n\r\n            # generate recommended search bounds\r\n            INIT_COORDS =\r\n                lat: 55.7387\r\n                lng: 37.6032\r\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\r\n            $scope.geocoder = new (google.maps.Geocoder)\r\n\r\n            # Зум и центр карты по умолчанию\r\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n            $scope.gmap.setZoom 11\r\n","angular.module('Egerep')\r\n    .controller 'EmptyCtrl', ->\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'GraphController', ($scope, $timeout, $http, $rootScope, SvgMap) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        $scope.map_loaded = false\r\n\r\n        angular.element(document).ready ->\r\n            $timeout ->\r\n                SvgMap.show()\r\n\r\n                SvgMap.el().find('#stations > g > g').each (index, el) ->\r\n                    $(el).on 'mouseenter', ->\r\n                        $scope.hovered_station_id = parseInt($(@).attr('id').replace(/[^\\d]/g, ''))\r\n                        $scope.$apply()\r\n                    $(el).on 'mouseleave', ->\r\n                        $scope.hovered_station_id = undefined\r\n                        $scope.$apply()\r\n\r\n                SvgMap.map.options.clickCallback = (id) ->\r\n                    if SvgMap.map.getSelected().length > 2\r\n                        SvgMap.map.deselectAll()\r\n                        SvgMap.map.select id\r\n                    $scope.selected = SvgMap.map.getSelected()\r\n\r\n                $scope.map_loaded = true\r\n            , 500\r\n\r\n        $scope.$watch 'selected', (newVal, oldVal) ->\r\n            return if newVal is undefined\r\n            if newVal.length is 2\r\n                $scope.new_distance = getDistance(newVal[0], newVal[1])\r\n\r\n        $scope.$watch 'hovered_station_id', (newVal, oldVal) ->\r\n            if newVal isnt undefined\r\n                found_distances = _.filter $scope.distances, (distance) ->\r\n                    distance.from is newVal or distance.to is newVal\r\n\r\n                # 1. objects in js are copied by ref\r\n                # 2. _.clone - shallow copy\r\n                $scope.found_distances = _.map found_distances, _.clone\r\n\r\n                angular.forEach $scope.found_distances, (distance) ->\r\n                     if distance.from isnt newVal\r\n                         from_buffer = distance.from\r\n                         distance.from = newVal\r\n                         distance.to = from_buffer\r\n\r\n\r\n        $scope.save = ->\r\n            from = $scope.selected[0]\r\n            to = $scope.selected[1]\r\n            $rootScope.ajaxStart()\r\n            $http.post 'graph/save',\r\n                from: from\r\n                to: to\r\n                distance: $scope.new_distance\r\n            .then ->\r\n                distance = getDistanceObject(from, to)\r\n                if distance is undefined\r\n                    $scope.distances.push\r\n                        from: from\r\n                        to: to\r\n                        distance: $scope.new_distance\r\n                else\r\n                    distance.distance = $scope.new_distance\r\n                $rootScope.ajaxEnd()\r\n\r\n\r\n        $scope.delete = ->\r\n            from = Math.min($scope.selected[0], $scope.selected[1])\r\n            to = Math.max($scope.selected[0], $scope.selected[1])\r\n\r\n            $rootScope.ajaxStart()\r\n            $http.post 'graph/delete',\r\n                from: from\r\n                to: to\r\n            .then ->\r\n                $rootScope.ajaxEnd()\r\n                $scope.distances = _.without($scope.distances, _.findWhere($scope.distances, {from: from, to: to}))\r\n                $scope.selected = []\r\n                SvgMap.map.deselectAll()\r\n\r\n        getDistance = (from, to) ->\r\n            distance = getDistanceObject(from, to)\r\n            if distance is undefined then undefined else distance.distance\r\n\r\n        getDistanceObject = (from, to) ->\r\n            from = Math.min(from, to)\r\n            to = Math.max(from, to)\r\n            _.find($scope.distances, {from: from, to: to})\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'LoginCtrl', ($scope, $http) ->\r\n        angular.element(document).ready ->\r\n            $scope.l = Ladda.create(document.querySelector('#login-submit'))\r\n\r\n        $scope.checkFields = ->\r\n            $scope.l.start()\r\n            ajaxStart()\r\n            $scope.in_process = true\r\n            $http.post 'login',\r\n                login: $scope.login\r\n                password: $scope.password\r\n            .then (response) ->\r\n                if response.data is true\r\n                    location.reload()\r\n                else\r\n                    $scope.in_process = false\r\n                    ajaxEnd()\r\n                    $scope.l.stop()\r\n                    notifyError \"Неправильная пара логин-пароль\"","angular\r\n    .module 'Egerep'\r\n    .controller 'LogsIndex', ($rootScope, $scope, $timeout, $http, UserService, LogTypes, LogColumns) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.toJson = (data)->\r\n            JSON.parse(data)\r\n\r\n        $scope.refreshCounts = ->\r\n            $timeout ->\r\n                $('.selectpicker option').each (index, el) ->\r\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\r\n                    $(el).data 'content', $(el).attr 'data-content'\r\n                $('.selectpicker').selectpicker 'refresh'\r\n            , 100\r\n\r\n        $scope.filter = ->\r\n            $.cookie(\"logs\", JSON.stringify($scope.search), { expires: 365, path: '/' });\r\n            $scope.current_page = 1\r\n            $scope.pageChanged()\r\n\r\n        $scope.keyFilter = (event) ->\r\n            $scope.filter() if event.keyCode is 13\r\n\r\n        $timeout ->\r\n            $scope.search = if $.cookie(\"logs\") then JSON.parse($.cookie(\"logs\")) else {}\r\n            load $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        $scope.pageChanged = ->\r\n            $rootScope.frontend_loading = true\r\n            load $scope.current_page\r\n            paginate('logs', $scope.current_page)\r\n\r\n        load = (page) ->\r\n            params = '?page=' + page\r\n\r\n            $http.get \"api/logs#{ params }\"\r\n            .then (response) ->\r\n                console.log response\r\n                $scope.counts = response.data.counts\r\n                $scope.data = response.data.data\r\n                $scope.logs = response.data.data.data\r\n                $rootScope.frontend_loading = false\r\n                $scope.refreshCounts()\r\n","angular\r\n.module 'Egerep'\r\n.controller 'NotificationsIndex', ($rootScope, $scope, $timeout, $http, AttachmentStates, AttachmentService, UserService, Notify) ->\r\n\tbindArguments($scope, arguments)\r\n\t$rootScope.frontend_loading = true\r\n\r\n\t$scope.addDays = (date, days) ->\r\n\t\tmoment(date).add({day : days})\r\n\r\n\t$scope.pastDate = (date) ->\r\n\t\tif date and (Date.now() - new Date(date)) >= 0 then true else false\r\n\r\n\trefreshCounts = ->\r\n\t\t$timeout ->\r\n\t\t\t$('.selectpicker option').each (index, el) ->\r\n\t\t\t\t$(el).data 'subtext', $(el).attr 'data-subtext'\r\n\t\t\t\t$(el).data 'content', $(el).attr 'data-content'\r\n\t\t\t$('.selectpicker').selectpicker 'refresh'\r\n\t\t, 100\r\n\r\n\t$scope.filter = ->\r\n\t\t$.cookie(\"notifications\", JSON.stringify($scope.search), { expires: 365, path: '/' });\r\n\t\t$scope.current_page = 1\r\n\t\t$scope.pageChanged()\r\n\r\n\t$scope.changeState = (state_id) ->\r\n\t\t$rootScope.frontend_loading = true\r\n\t\t$scope.attachments = []\r\n\t\t$scope.current_page = 1\r\n\t\tloadAttachments($scope.current_page)\r\n\t\twindow.history.pushState(state_id, '', 'notifications/' + state_id.toLowerCase())\r\n\r\n\t$scope.needsCall = (attachment) ->\r\n\t\treturn false if AttachmentService.getState(attachment) isnt 'new'\r\n\t\ttoday = moment().format(\"YYYY-MM-DD\")\r\n\t\tif attachment.notification_id\r\n\t\t\tattachment.notification_approved is 0 and attachment.notification_date <= today\r\n\t\telse\r\n \t\t\t$scope.addDays(attachment.original_date, 2).format('YYYY-MM-DD') <= today\r\n\r\n\r\n\t$timeout ->\r\n\t\t$scope.search = if $.cookie(\"notifications\") then JSON.parse($.cookie(\"notifications\")) else {}\r\n\t\tloadAttachments $scope.page\r\n\t\t$scope.current_page = $scope.page\r\n\r\n\t$scope.pageChanged = ->\r\n\t\t$rootScope.frontend_loading = true\r\n\t\t$rootScope.attachments = []\r\n\t\tloadAttachments $scope.current_page\r\n\t\tpaginate('notifications', $scope.current_page)\r\n\r\n\tloadAttachments = (page) ->\r\n\t\tparams = '?page=' + page\r\n\r\n\t\t$http.get \"api/notifications/get#{ params }\"\r\n\t\t.then (response) ->\r\n\t\t\t$scope.data = response.data.data\r\n\t\t\t$scope.attachments = response.data.data.data\r\n\t\t\t$scope.counts = response.data.counts\r\n\t\t\t$rootScope.frontend_loading = false\r\n\t\t\trefreshCounts()\r\n","angular\r\n    .module 'Egerep'\r\n\r\n    .controller 'PeriodsIndex', ($scope, $timeout, $rootScope, $http, PaymentMethods, DebtTypes, LkPaymentTypes, UserService) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        $timeout ->\r\n            load $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        getPrefix = ->\r\n            prefix = if $scope.type is 'total' then '' else \"/#{$scope.type}\"\r\n\r\n        getCommission = (val) ->\r\n            if val.indexOf('/') isnt -1\r\n                val = val.split('/')[1]\r\n                return if val then parseInt(val) else 0\r\n            else\r\n                return Math.round(parseInt(val) * .25)\r\n\r\n        $scope.totalCommission = (account) ->\r\n            total_commission = 0\r\n            $.each account.data, (index, account_data) ->\r\n                $.each account_data, (index, val) ->\r\n                    total_commission += getCommission(val) if val isnt ''\r\n            total_commission\r\n\r\n        $scope.pageChanged = ->\r\n            ajaxStart()\r\n            load $scope.current_page\r\n            paginate 'periods' + getPrefix(), $scope.current_page\r\n\r\n        load = (page) ->\r\n            params = getPrefix()\r\n            params += '?page=' + page\r\n\r\n            $http.get \"api/periods#{ params }\"\r\n            .then (response) ->\r\n                ajaxEnd()\r\n                $rootScope.frontendStop()\r\n                $scope.data = response.data\r\n                $scope.periods = $scope.data.data\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'RequestsIndex', ($rootScope, $scope, $timeout, $http, Request, RequestStates, Comment, PhoneService, UserService, Grades, Subjects, PusherService) ->\r\n        bindArguments($scope, arguments)\r\n        _.extend RequestStates, { all : 'все' }\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.user_id = localStorage.getItem('requests_index_user_id')\r\n\r\n        PusherService.bind 'RequestUserChanged', (data) ->\r\n            if request = findById($scope.requests, data.request_id)\r\n                request.user_id = data.new_user_id\r\n                $scope.$apply()\r\n\r\n        $scope.howLongAgo = (created_at) ->\r\n            now = moment(Date.now())\r\n            created_at = moment(new Date(created_at).getTime())\r\n            days = now.diff(created_at, 'days')\r\n            hours = now.diff(created_at, 'hours') - (days * 24)\r\n            {days: days, hours: hours}\r\n\r\n        $scope.changeList = (state_id) ->\r\n            $scope.chosen_state_id = state_id\r\n            $scope.current_page = 1\r\n            $rootScope.loaded_comments = 0\r\n            $rootScope.frontend_loading = true\r\n\r\n            ajaxStart()\r\n            loadRequests 1\r\n            ajaxEnd()\r\n\r\n            window.history.pushState('requests/' + state_id.toLowerCase(), '', 'requests/' + state_id.toLowerCase());\r\n\r\n        extendRequestStates = ->\r\n            $scope.RequestStatesForTabLabel = angular.copy $scope.RequestStates\r\n            _.extend $scope.RequestStatesForTabLabel, { all : 'все' }\r\n\r\n        $timeout ->\r\n            extendRequestStates()\r\n            loadRequests $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        $scope.pageChanged = ->\r\n            $rootScope.frontend_loading = true\r\n            $rootScope.loaded_comments = 0\r\n            loadRequests $scope.current_page\r\n            paginate('requests/' + $scope.chosen_state_id, $scope.current_page)\r\n\r\n        loadRequests = (page) ->\r\n            $scope.chosen_state_id = 'all' if not $scope.chosen_state_id\r\n\r\n            params = '?page=' + page\r\n            params += '&state=' + $scope.chosen_state_id\r\n            params += \"&user_id=#{ $scope.user_id }\" if $scope.user_id isnt ''\r\n\r\n\r\n            $http.get \"api/requests#{ params }\"\r\n            .then (response) ->\r\n                $scope.data = response.data\r\n                $scope.requests = $scope.data.data\r\n\r\n                # сортировка станций маркеров по близоcти\r\n                $scope.requests.forEach (request) ->\r\n                    request.client.markers.forEach (marker) ->\r\n                        marker.metros = _.sortBy marker.metros, (s) ->\r\n                            s.minutes\r\n\r\n                $rootScope.frontend_loading = false\r\n\r\n            $http.post \"api/requests/counts\",\r\n                state: $scope.chosen_state_id\r\n                user_id: $scope.user_id\r\n            .then (response) ->\r\n                $scope.request_state_counts = response.data.request_state_counts\r\n                $scope.user_counts          = response.data.user_counts\r\n                console.log 'counts updated'\r\n                $timeout ->\r\n                    $('#change-state option, #change-user option').each (index, el) ->\r\n                        $(el).data 'subtext', $(el).attr 'data-subtext'\r\n                        $(el).data 'content', $(el).attr 'data-content'\r\n                    $('#change-state, #change-user').selectpicker 'refresh'\r\n\r\n        $scope.hasBannedUsers = ->\r\n            _.filter(UserService.getBannedUsers(), (u) ->\r\n                $scope.user_counts and $scope.user_counts[u.id] isnt undefined and $scope.user_counts[u.id] > 0\r\n            ).length\r\n\r\n        $scope.changeState = ->\r\n            localStorage.setItem('requests_index_state', $scope.state)\r\n            $scope.changeList($scope.state)\r\n\r\n        $scope.changeUser = ->\r\n            localStorage.setItem('requests_index_user_id', $scope.user_id)\r\n            $scope.changeList($scope.chosen_state_id)\r\n            # $scope.changeList($scope.state)\r\n\r\n        # $scope.bannedUsersHaveRequests = ->\r\n        #     banned_users_have_requests = false\r\n        #     UserService.getBannedUsers().forEach (user) ->\r\n        #         if $scope.user_counts[user.id]\r\n        #             banned_users_have_requests = true\r\n        #             return\r\n        #     banned_users_have_requests\r\n\r\n        # @todo использовать $rootScope.toggleEnumServer\r\n        $scope.toggleState = (request) ->\r\n            request_cpy = angular.copy request\r\n            $rootScope.toggleEnum request_cpy, 'state', RequestStates\r\n\r\n            $scope.Request.update\r\n                id: request_cpy.id\r\n                state: request_cpy.state\r\n            , (response) ->\r\n                $rootScope.toggleEnum request, 'state', RequestStates\r\n    .controller 'RequestsForm', ($scope) ->\r\n        console.log 'here'\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'ReviewsIndex', ($rootScope, $scope, $timeout, $http, Existance, ReviewStates, Presence, ReviewScores, UserService, ReviewErrors) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.recalcReviewErrors = ->\r\n            $scope.review_errors_updating = true\r\n            $http.post 'api/command/model-errors', {model: 'reviews'}\r\n\r\n        refreshCounts = ->\r\n            $timeout ->\r\n                $('.selectpicker option').each (index, el) ->\r\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\r\n                    $(el).data 'content', $(el).attr 'data-content'\r\n                $('.selectpicker').selectpicker 'refresh'\r\n            , 100\r\n\r\n        $scope.filter = ->\r\n            $.cookie(\"reviews\", JSON.stringify($scope.search), { expires: 365, path: '/' });\r\n            $scope.current_page = 1\r\n            $scope.pageChanged()\r\n\r\n        $timeout ->\r\n            $scope.search = if $.cookie(\"reviews\") then JSON.parse($.cookie(\"reviews\")) else {}\r\n            load $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        $scope.pageChanged = ->\r\n            $rootScope.frontend_loading = true\r\n            load $scope.current_page\r\n            paginate('reviews', $scope.current_page)\r\n\r\n        load = (page) ->\r\n            params = '?page=' + page\r\n\r\n            $http.get \"api/reviews#{ params }\"\r\n            .then (response) ->\r\n                console.log response\r\n                $scope.counts = response.data.counts\r\n                $scope.data = response.data.data\r\n                $scope.attachments = response.data.data.data\r\n                $rootScope.frontend_loading = false\r\n                refreshCounts()\r\n","angular\r\n    .module 'Egerep'\r\n    .controller 'SummaryUsers', ($scope, $rootScope, $timeout, $http, UserService, RequestStates) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        $timeout ->\r\n            $('#change-user').selectpicker 'refresh'\r\n        , 500\r\n\r\n        $scope.update = ->\r\n            $rootScope.frontend_loading = true\r\n            $http.post 'api/summary/users', $scope.search\r\n            .then (response) ->\r\n                $rootScope.frontend_loading = false\r\n                $scope.stats = response.data\r\n\r\n        $scope.monthYear = (date) ->\r\n            date = date.split(\".\")\r\n            date = date.reverse()\r\n            date = date.join(\"-\")\r\n            moment(date).format('MMMM YYYY')\r\n\r\n    .controller 'SummaryIndex', ($rootScope, $scope, $http, $timeout, PaymentMethods) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n        $scope.debt_updating = false\r\n\r\n        $scope.getSum = (summary) ->\r\n            (parseInt(summary.sum) or 0) + (parseInt(summary.debt_sum) or 0)\r\n\r\n        $scope.updateDebt = ->\r\n            $scope.debt_updating = true\r\n            $http.post 'api/command/recalc-debt'\r\n                .then (response) ->\r\n                    $scope.debt_updating = false\r\n                    $scope.debt_updated = response.data.debt_updated\r\n                    $scope.total_debt   = response.data.total_debt\r\n\r\n        $timeout ->\r\n            loadSummary $scope.page\r\n            $scope.current_page = $scope.page\r\n\r\n        getPrefix = ->\r\n            prefix = if $scope.type is 'total' then '' else \"/#{$scope.type}\"\r\n\r\n        $scope.pageChanged = ->\r\n            ajaxStart()\r\n            loadSummary $scope.current_page\r\n            paginate 'summary' + getPrefix() + '/' + $scope.filter, $scope.current_page\r\n\r\n        loadSummary = (page) ->\r\n            params  = getPrefix()\r\n            params += '?page='   + page\r\n            params += '&filter=' + $scope.filter\r\n            $http.post \"api/summary#{ params }\"\r\n            .then (response) ->\r\n                ajaxEnd()\r\n                $rootScope.frontendStop()\r\n                $scope.summaries = response.data\r\n","angular.module 'Egerep'\r\n    .controller 'TutorsSelect', ($scope, Genders, Grades, Subjects, TutorStates, Destinations, TutorService, PhoneService, RequestList, YesNo, Tutor) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        # transparent marker opacity\r\n        TRANSPARENT_MARKER = 0.3\r\n\r\n        # differentiate single & double click\r\n        clicks = 0\r\n\r\n        # marker clusterer\r\n        markerClusterer = undefined\r\n\r\n        # mode: 'map' | 'list'\r\n        $scope.mode = 'map'\r\n\r\n        # loading map\r\n        $scope.loading = false\r\n\r\n        $scope.tutors = []\r\n        $scope.list_tutor_ids = []\r\n\r\n        angular.element(document).ready ->\r\n            $scope.list = new RequestList($scope.list)\r\n            $('.map-tutor-list').droppable()\r\n\r\n        $scope.blurComment = (tutor) ->\r\n            tutor.is_being_commented = false\r\n            tutor.ready_to_work = tutor.old_ready_to_work\r\n\r\n        $scope.focusComment = (tutor) ->\r\n            tutor.is_being_commented = true\r\n            tutor.old_ready_to_work = tutor.ready_to_work\r\n\r\n        $scope.startComment = (tutor) ->\r\n            tutor.is_being_commented = true\r\n            tutor.old_ready_to_work = tutor.ready_to_work\r\n            $timeout ->\r\n                $(\"#list-comment-#{tutor.id}\").focus()\r\n\r\n        $scope.saveComment =  (event, tutor) ->\r\n            if event.keyCode is 13\r\n                Tutor.update\r\n                    id: tutor.id\r\n                    ready_to_work: tutor.ready_to_work\r\n                , (response) ->\r\n                    tutor.old_ready_to_work = tutor.ready_to_work\r\n                    $(event.target).blur()\r\n\r\n        $scope.getHours = (minutes) ->\r\n            Math.floor(minutes / 60)\r\n\r\n        $scope.getMinutes = (minutes) ->\r\n            minutes % 60\r\n\r\n        $scope.find = ->\r\n            $scope.loading = true\r\n            TutorService.select {search: $scope.search}\r\n                .then (response) ->\r\n                    $scope.tutors = response.data\r\n                    showTutorsOnMap()\r\n                    repaintChosen()\r\n                    $scope.loading = false\r\n\r\n        # determine whether tutor had already been added\r\n        $scope.added = (tutor_id) ->\r\n            tutor_id in $scope.list_tutor_ids.map(Number)\r\n\r\n        # rebind draggable\r\n        rebindDraggable = ->\r\n            $('.temporary-tutor').draggable\r\n                containment: 'window'\r\n                revert: (valid) ->\r\n                    return true if valid\r\n                    $scope.tutor_list = removeById($scope.tutor_list, $scope.dragging_tutor.id)\r\n                    $scope.$apply()\r\n\r\n        # remember dragging tutor\r\n        $scope.startDragging = (tutor) ->\r\n            $scope.dragging_tutor = tutor\r\n\r\n        showTutorsOnMap = ->\r\n            unsetAllMarkers()\r\n            $scope.marker_id = 1\r\n\r\n            # временный список репетиторов\r\n            $scope.tutor_list = []\r\n\r\n            $scope.markers = []\r\n            $scope.tutors.forEach (tutor) ->\r\n                if tutor.markers isnt undefined\r\n                    tutor.markers.forEach (marker) ->\r\n                        # Создаем маркер\r\n                        new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\r\n                        new_marker.metros = marker.metros\r\n                        new_marker.tutor = tutor\r\n\r\n                        # Добавляем маркер на карту\r\n                        new_marker.setMap($scope.map)\r\n\r\n                        # Добавляем ивент удаления маркера\r\n                        bindTutorMarkerEvents(new_marker)\r\n                        $scope.markers.push new_marker\r\n            # @todo: consider using Marker Clusterer\r\n            markerClusterer = new MarkerClusterer $scope.map, $scope.markers,\r\n                gridSize: 10\r\n                # maxZoom: 12\r\n                imagePath: 'img/maps/clusterer/m'\r\n\r\n        unsetAllMarkers = ->\r\n            # unset markers\r\n            if $scope.markers isnt undefined\r\n                $scope.markers.forEach (marker) ->\r\n                    marker.setMap null\r\n            # unset clusterer\r\n            if markerClusterer isnt undefined\r\n                markerClusterer.clearMarkers()\r\n\r\n        bindTutorMarkerEvents = (marker) ->\r\n            # double click custom handler with delay\r\n            google.maps.event.addListener marker, 'click', (event) ->\r\n                clicks++\r\n                if clicks is 1\r\n                    setTimeout ->\r\n                        if clicks is 1\r\n                            # single click\r\n                            if marker.tutor in $scope.tutor_list\r\n                                $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\r\n                            else\r\n                                $scope.hovered_tutor = null\r\n                                $scope.tutor_list.push marker.tutor\r\n                            $scope.$apply()\r\n                            rebindDraggable()\r\n                        else\r\n                            # double click\r\n                            $scope.addOrRemove(marker.tutor.id)\r\n                        clicks = 0\r\n                    , 250\r\n\r\n            google.maps.event.addListener marker, 'dblclick', (event) ->\r\n                clicks++\r\n\r\n            google.maps.event.addListener marker, 'mouseover', (event) ->\r\n                return if marker.tutor in $scope.tutor_list\r\n                $scope.hovered_tutor = marker.tutor\r\n                $scope.$apply()\r\n\r\n            google.maps.event.addListener marker, 'mouseout', (event) ->\r\n                $scope.hovered_tutor = null\r\n                $scope.$apply()\r\n\r\n        # add or remove tutor from list\r\n        $scope.addOrRemove = (tutor_id) ->\r\n            tutor_id = parseInt(tutor_id)\r\n            if tutor_id in $scope.list_tutor_ids.map(Number)\r\n                $scope.list_tutor_ids = _.without($scope.list_tutor_ids.map(Number), tutor_id)\r\n            else\r\n                $scope.list_tutor_ids.push(tutor_id)\r\n            repaintChosen()\r\n            $scope.list.$update()\r\n\r\n        repaintChosen = ->\r\n            $scope.markers.forEach (marker) ->\r\n                if marker.tutor.id in $scope.list_tutor_ids.map(Number) and not marker.chosen\r\n                    marker.chosen = true\r\n                    marker.setOpacity(1)\r\n                    marker.setIcon ICON_BLUE\r\n                if marker.tutor.id not in $scope.list_tutor_ids.map(Number) and marker.chosen\r\n                    marker.chosen = false\r\n                    marker.setIcon getMarkerType(marker.type)\r\n\r\n\r\n        $scope.$on 'mapInitialized', (event, map) ->\r\n            # Запоминаем карту после инициалицации\r\n            $scope.gmap = map\r\n\r\n            # generate recommended search bounds\r\n            INIT_COORDS =\r\n                lat: 55.7387\r\n                lng: 37.6032\r\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\r\n            $scope.geocoder = new (google.maps.Geocoder)\r\n\r\n            # Зум и центр карты по умолчанию\r\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n            $scope.gmap.setZoom 11\r\n","angular\r\n    .module 'Egerep'\r\n\r\n    #\r\n    #   LIST CONTROLLER\r\n    #\r\n    .controller \"TutorsIndex\", ($scope, $rootScope, $timeout, $http, Tutor, TutorStates, UserService, PusherService, TutorPublishedStates, TutorErrors, PhoneFields) ->\r\n        bindArguments($scope, arguments)\r\n        $rootScope.frontend_loading = true\r\n\r\n        $scope.recalcTutorErrors = ->\r\n            $scope.tutor_errors_updating = true\r\n            $http.post 'api/command/model-errors', {model: 'tutors'}\r\n\r\n        $scope.state            = localStorage.getItem('tutors_index_state')\r\n        $scope.user_id          = localStorage.getItem('tutors_index_user_id')\r\n        $scope.published_state  = localStorage.getItem('tutors_index_published_state')\r\n        $scope.errors_state     = localStorage.getItem('tutors_index_errors_state')\r\n\r\n        PusherService.bind 'ResponsibleUserChanged', (data) ->\r\n            if tutor = findById($scope.tutors, data.tutor_id)\r\n                tutor.responsible_user_id = data.responsible_user_id\r\n                $scope.$apply()\r\n\r\n        $scope.duplicateClick = (phone) ->\r\n            $scope.global_search = phone\r\n            $timeout ->\r\n                $('#global-search').submit()\r\n\r\n        $scope.yearDifference = (year) ->\r\n            moment().format(\"YYYY\") - year\r\n\r\n        $scope.changeState = ->\r\n            localStorage.setItem('tutors_index_state', $scope.state)\r\n            loadTutors($scope.current_page)\r\n\r\n        $scope.changeUser = ->\r\n            localStorage.setItem('tutors_index_user_id', $scope.user_id)\r\n            loadTutors($scope.current_page)\r\n\r\n        $scope.changePublishedSate = ->\r\n            localStorage.setItem 'tutors_index_published_state', $scope.published_state\r\n            loadTutors $scope.current_page\r\n\r\n        $scope.changeErrorsState = ->\r\n            localStorage.setItem 'tutors_index_errors_state', $scope.errors_state\r\n            loadTutors $scope.current_page\r\n\r\n        $timeout ->\r\n            loadTutors($scope.page)\r\n            $scope.current_page = $scope.page\r\n\r\n        $scope.pageChanged = ->\r\n            loadTutors($scope.current_page)\r\n            paginate('tutors', $scope.current_page)\r\n\r\n        loadTutors = (page) ->\r\n            $rootScope.frontend_loading = true\r\n            params = '?page=' + page\r\n            params += \"&global_search=#{ $scope.global_search }\" if $scope.global_search\r\n            params += \"&state=#{ $scope.state }\" if $scope.state isnt null and $scope.state isnt ''\r\n            params += \"&user_id=#{ $scope.user_id }\" if $scope.user_id\r\n            params += \"&published_state=#{ $scope.published_state }\" if $scope.published_state isnt null and $scope.published_state isnt ''\r\n            params += \"&errors_state=#{ $scope.errors_state }\" if $scope.errors_state isnt null and $scope.errors_state isnt ''\r\n\r\n            # update repetitors\r\n            # @todo: why ugly params? maybe use $http.post instead?\r\n            $http.get \"api/tutors#{ params }\"\r\n                .then (response) ->\r\n                    $rootScope.frontendStop()\r\n                    $scope.data = response.data\r\n                    $scope.tutors = $scope.data.data\r\n\r\n            # update counts\r\n            $http.post \"api/tutors/counts\",\r\n                state:           $scope.state\r\n                user_id:         $scope.user_id\r\n                published_state: $scope.published_state\r\n                errors_state:    $scope.errors_state\r\n            .then (response) ->\r\n                $scope.state_counts     = response.data.state_counts\r\n                $scope.user_counts      = response.data.user_counts\r\n                $scope.published_counts = response.data.published_counts\r\n                $scope.errors_counts    = response.data.errors_counts\r\n                $timeout ->\r\n                    # потому что data кэшируется\r\n                    # @todo: add issue at github\r\n                    # @link: https://github.com/silviomoreto/bootstrap-select/issues/293\r\n                    $('#change-state option, #change-user option, #change-published option, #change-errors option').each (index, el) ->\r\n                        $(el).data 'subtext', $(el).attr 'data-subtext'\r\n                        $(el).data 'content', $(el).attr 'data-content'\r\n\r\n                    $('#change-state, #change-user, #change-published, #change-errors').selectpicker 'refresh'\r\n                    $rootScope.frontend_loading = false\r\n\r\n        $scope.blurComment = (tutor) ->\r\n            tutor.is_being_commented = false\r\n            tutor.list_comment = tutor.old_list_comment\r\n\r\n        $scope.focusComment = (tutor) ->\r\n            tutor.is_being_commented = true\r\n            tutor.old_list_comment = tutor.list_comment\r\n\r\n        $scope.startComment = (tutor) ->\r\n            tutor.is_being_commented = true\r\n            tutor.old_list_comment = tutor.list_comment\r\n            $timeout ->\r\n                $(\"#list-comment-#{tutor.id}\").focus()\r\n\r\n        $scope.saveComment =  (event, tutor) ->\r\n            if event.keyCode is 13\r\n                Tutor.update\r\n                    id: tutor.id\r\n                    list_comment: tutor.list_comment\r\n                , (response) ->\r\n                    tutor.old_list_comment = tutor.list_comment\r\n                    $(event.target).blur()\r\n\r\n    #\r\n    #   ADD/EDIT CONTROLLER\r\n    #\r\n    .controller \"TutorsForm\", ($scope, $rootScope, $timeout, Tutor, SvgMap, Subjects, Grades, ApiService, TutorStates, Genders, Workplaces, Branches, BranchService, TutorService, $http, Marker) ->\r\n        bindArguments($scope, arguments)\r\n\r\n        $rootScope.frontend_loading = true\r\n        $scope.form_changed = false\r\n\r\n        # страница полностью загружена (включая все изменения маркеров)\r\n        $scope.fully_loaded = false\r\n\r\n        $scope.mergeTutor = ->\r\n            $('#merge-tutor').modal 'show'\r\n\r\n        $scope.mergeTutorGo = ->\r\n            $('#merge-tutor').modal 'hide'\r\n            $http.post \"api/tutors/merge\",\r\n                tutor_id: $scope.tutor.id\r\n                new_tutor_id: $scope.new_tutor_id\r\n            .then (response) ->\r\n                if response.data is 'false'\r\n                    bootbox.alert 'Существуют задублированные клиенты'\r\n                else\r\n                    bootbox.alert 'Информация перенесена'\r\n\r\n        $scope.deleteTutor = ->\r\n            bootbox.confirm 'Вы уверены, что хотите удалить преподавателя?', (result) ->\r\n                if result is true\r\n                    ajaxStart()\r\n                    $scope.tutor.$delete ->\r\n                        history.back()\r\n\r\n        # разбить \"1 класс, 2 класс, 3 класс\" на \"1-3 классы\"\r\n        $scope.shortenGrades = ->\r\n            a = $scope.tutor.grades\r\n            return if a.length < 1\r\n            limit = a.length - 1\r\n            combo_end = -1\r\n            pairs = []\r\n            i = 0\r\n            while i <= limit\r\n                combo_start = parseInt(a[i])\r\n\r\n                if combo_start > 11\r\n                    i++\r\n                    combo_end = -1\r\n                    pairs.push Grades[combo_start]\r\n                    continue\r\n\r\n                if combo_start <= combo_end\r\n                    i++\r\n                    continue\r\n\r\n                j = i\r\n                while j <= limit\r\n                    combo_end = parseInt(a[j])\r\n                    # если уже начинает искать по студентам\r\n                    break if combo_end >= 11\r\n                    break if parseInt(a[j + 1]) - combo_end > 1\r\n                    j++\r\n                if combo_start != combo_end\r\n                    pairs.push combo_start + '–' + combo_end + ' классы'\r\n                else\r\n                    pairs.push combo_start + ' класс'\r\n                i++\r\n            $timeout ->\r\n                $('#sp-tutor-grades').parent().find('.filter-option').html pairs.join ', '\r\n            return\r\n\r\n        $scope.deletePhoto = ->\r\n            bootbox.confirm 'Удалить фото преподавателя?', (result) ->\r\n                if result is true\r\n                    $scope.tutor.$deletePhoto ->\r\n                        $scope.tutor.has_photo_cropped = false\r\n                        $scope.tutor.has_photo_original = false\r\n\r\n        $scope.saveCropped = ->\r\n            $('#photo-edit').cropper('getCroppedCanvas').toBlob (blob) ->\r\n                formData = new FormData\r\n                formData.append 'croppedImage', blob\r\n                formData.append 'tutor_id', $scope.tutor.id\r\n                ajaxStart()\r\n                $.ajax 'upload/cropped',\r\n                    method: 'POST'\r\n                    data: formData\r\n                    processData: false\r\n                    contentType: false\r\n                    dataType: 'json'\r\n                    success: (response) ->\r\n                        ajaxEnd()\r\n                        $scope.tutor.has_photo_cropped = true\r\n                        $scope.photo_cropped_size = response\r\n                        $scope.picture_version++\r\n                        $scope.$apply()\r\n                        $scope.closeDialog('change-photo')\r\n\r\n        bindCropper = ->\r\n            $('#photo-edit').cropper 'destroy'\r\n            $('#photo-edit').cropper\r\n                aspectRatio: 4 / 5\r\n                # minContainerHeight: 700\r\n                # minContainerWidth: 700\r\n                # minCropBoxWidth: 240\r\n                # minCropBoxHeight: 300\r\n                preview: '.img-preview'\r\n                viewMode: 1\r\n                zoomable: false\r\n                zoomOnWheel: false\r\n                crop: (e) ->\r\n                    width   = $('#photo-edit').cropper('getCroppedCanvas').width\r\n                    quality = Math.round(width / 240 * 100)\r\n                    $scope.quality = if quality > 100 then 100 else quality\r\n                    $scope.$apply()\r\n                built: ->\r\n                    $scope.cropper_built = true\r\n                    $scope.$apply()\r\n\r\n\r\n        $scope.picture_version = 1;\r\n        bindFileUpload = ->\r\n        \t# загрузка файла договора\r\n        \t$('#fileupload').fileupload\r\n        \t\tformData:\r\n        \t\t\ttutor_id: $scope.tutor.id\r\n        \t\tmaxFileSize: 10000000, # 10 MB\r\n        \t\t# начало загрузки\r\n        \t\tsend: ->\r\n        \t\t\tNProgress.configure({ showSpinner: true })\r\n        \t\t,\r\n        \t\t# во время загрузки\r\n        \t\tprogress: (e, data) ->\r\n        \t\t    NProgress.set(data.loaded / data.total)\r\n        \t\t,\r\n        \t\t# всегда по окончании загрузки (неважно, ошибка или успех)\r\n        \t\talways: ->\r\n        \t\t    NProgress.configure({ showSpinner: false })\r\n        \t\t    ajaxEnd()\r\n        \t\t,\r\n        \t\tdone: (i, response) ->\r\n                    $scope.tutor.photo_extension     = response.result.extension\r\n                    $scope.tutor.photo_original_size = response.result.size\r\n                    $scope.tutor.photo_cropped_size  = 0\r\n                    $scope.tutor.has_photo_original  = true\r\n                    $scope.tutor.has_photo_cropped   = false\r\n                    $scope.picture_version++\r\n                    $scope.$apply()\r\n                    bindCropper()\r\n        \t\t,\r\n\r\n        # show photo editor\r\n        $scope.showPhotoEditor = ->\r\n            $scope.dialog('change-photo')\r\n            $scope.cropper_built = false\r\n            bindCropper()\r\n\r\n        $scope.toggleBanned = ->\r\n            $scope.tutor.banned = +(!$scope.tutor.banned)\r\n\r\n\r\n        # get tutor\r\n        $timeout ->\r\n            if $scope.id > 0\r\n                $scope.tutor = Tutor.get {id: $scope.id}, ->\r\n                    $timeout ->\r\n                        # bindCropper()\r\n                        bindFileUpload()\r\n                    , 1000\r\n                    $scope.original_tutor = angular.copy $scope.tutor\r\n                    $rootScope.frontendStop()\r\n            else\r\n                #set default values of tutor for create page\r\n                $scope.tutor = TutorService.default_tutor\r\n\r\n                # закомментировал нижнюю строчку, потому что при добавлении анкеты функционала\r\n                # с disable кнопки сохранить быть не должно. там одна кнопка \"добавить\", при нажатии\r\n                # на которую выполняется редирект\r\n                # @todo: проверить работоспособность создания репетитора без original_tutor\r\n                # $scope.tutor = $scope.original_tutor = TutorService.defaultTutor\r\n                $rootScope.frontendStop()\r\n\r\n        # @todo: ЗАМЕНИТЬ НА ДИРЕКТИВУ <ng-select> (уже сделано, но глючная. надо доделать)\r\n        # refresh selectpicker on update\r\n        $scope.$watch 'tutor.subjects', (newVal, oldVal) ->\r\n            return if newVal is undefined\r\n            sp 'tutor-subjects', 'предмет', '+' if oldVal is undefined\r\n            spRefresh 'tutor-subjects' if oldVal isnt undefined\r\n\r\n        # refresh selectpicker on update\r\n        $scope.$watch 'tutor.grades', (newVal, oldVal) ->\r\n            return if newVal is undefined\r\n            if oldVal is undefined\r\n                sp 'tutor-grades', 'классы'\r\n                $timeout ->\r\n                    $scope.shortenGrades()\r\n                , 50\r\n            else\r\n                $timeout ->\r\n                    $scope.shortenGrades()\r\n            # spRefresh 'tutor-grades' if oldVal isnt undefined\r\n\r\n        $scope.$watch 'tutor.branches', (newVal, oldVal) ->\r\n            return if newVal is undefined\r\n            sp 'tutor-branches', 'филиалы', ' ' if oldVal is undefined\r\n            spRefresh 'tutor-branches' if oldVal isnt undefined\r\n\r\n        # только после загрузки маркеров биндим отслеживание кнопки сохранить\r\n        $scope.$watchCollection 'tutor', (newVal, oldVal) ->\r\n            $scope.form_changed = true if $scope.fully_loaded\r\n\r\n        $scope.$watch 'tutor.in_egecentr', (newVal, oldVal) ->\r\n            if newVal and !$scope.tutor.login and $scope.tutor.first_name and $scope.tutor.last_name and $scope.tutor.middle_name\r\n                $scope.tutor.login = TutorService.generateLogin($scope.tutor)\r\n                $scope.tutor.password = TutorService.generatePassword()\r\n\r\n        $scope.svgSave = ->\r\n            $scope.tutor.svg_map = SvgMap.save()\r\n\r\n        $scope.yearDifference = (year) ->\r\n            moment().format(\"YYYY\") - year\r\n\r\n        $scope.add = ->\r\n            $scope.saving = true\r\n            Tutor.save $scope.tutor, (tutor) ->\r\n                window.location = \"tutors/#{tutor.id}/edit\"\r\n\r\n        $scope.edit = ->\r\n            ajaxStart()\r\n            $scope.saving = true\r\n            filterMarkers()\r\n\r\n            $scope.tutor.$update()\r\n                .then (response) ->\r\n                    $scope.saving = false\r\n                    $scope.form_changed = false\r\n                    ajaxEnd()\r\n\r\n\r\n\r\n\r\n        #\r\n        # ПОСЛЕ ЗАГРУЗКИ КАРТЫ\r\n        #\r\n        $scope.marker_id = 1\r\n\r\n        filterMarkers = ->\r\n            new_markers = []\r\n            $.each $scope.tutor.markers, (index, marker) ->\r\n                new_markers.push _.pick(marker, 'lat', 'lng', 'type', 'metros', 'server_id')\r\n            $scope.tutor.markers = new_markers\r\n\r\n        $scope.$on 'mapInitialized', (event, map) ->\r\n            # Запоминаем карту после инициалицации\r\n            $scope.gmap = map\r\n            # Добавляем существующие метки\r\n            $scope.loadMarkers()\r\n            # generate recommended search bounds\r\n            INIT_COORDS =\r\n                lat: 55.7387\r\n                lng: 37.6032\r\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\r\n            $scope.geocoder = new (google.maps.Geocoder)\r\n            # События добавления меток\r\n            google.maps.event.addListener map, 'click', (event) ->\r\n                $scope.gmapAddMarker event\r\n\r\n        # Показать карту\r\n        $scope.showMap = ->\r\n            $('#gmap-modal').modal 'show'\r\n            # Показываем карту\r\n            google.maps.event.trigger $scope.gmap, 'resize'\r\n\r\n            # Зум и центр карты по умолчанию\r\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\r\n            $scope.gmap.setZoom 11\r\n\r\n            # Обнуляем значение поиска\r\n            $('#map-search').val ''\r\n\r\n            # Удаляем все маркеры поиска\r\n            if $scope.search_markers and $scope.search_markers.length\r\n                $.each $scope.search_markers, (i, marker) ->\r\n                    marker.setMap null\r\n                $scope.search_markers = []\r\n\r\n            # Если уже есть добавленные маркеры\r\n            if $scope.tutor.markers.length\r\n                # отображать только метки с выбранным типом\r\n                bounds = new (google.maps.LatLngBounds)\r\n                # есть отображаемые маркеры\r\n                markers_count = 0\r\n                # отображаем маркеры по одному\r\n                $.each $scope.tutor.markers, (index, marker) ->\r\n                    markers_count++\r\n                    # отображаемые маркеры есть\r\n                    # marker.setVisible true\r\n                    bounds.extend marker.position\r\n                # если отображаемые маркеры есть, делаем зум на них\r\n                if markers_count > 0\r\n                    $scope.gmap.fitBounds bounds\r\n                    $scope.gmap.panToBounds bounds\r\n                    $scope.gmap.setZoom 11\r\n\r\n        $scope.gmapAddMarker = (event) ->\r\n            # Создаем маркер\r\n            # var marker = newMarker($scope.marker_id++, $scope.marker_type, event.latLng)\r\n            marker = newMarker($scope.marker_id++, event.latLng, $scope.map)\r\n\r\n            # Добавляем маркер в маркеры\r\n            $scope.tutor.markers.push(marker)\r\n\r\n            # Добавляем маркер на карту\r\n            marker.setMap($scope.gmap)\r\n\r\n            # Ищем ближайшие станции метро к маркеру\r\n            ApiService.metro 'closest',\r\n                lat: marker.lat\r\n                lng: marker.lng\r\n            .then (response) ->\r\n                marker.metros = response.data\r\n\r\n            # Добавляем ивент удаления маркера\r\n            $scope.bindMarkerDelete(marker)\r\n            $scope.bindMarkerChangeType(marker)\r\n\r\n        # Добавляем ивент удаления маркера\r\n        $scope.bindMarkerDelete = (marker) ->\r\n            google.maps.event.addListener marker, 'dblclick', (event) ->\r\n                t = this\r\n                # удаляем маркер с карты\r\n                t.setMap null\r\n                # удаляем маркер из коллекции\r\n                $.each $scope.tutor.markers, (index, m) ->\r\n                    console.log 'id', t.id, m.id\r\n                    if m isnt undefined and t.id == m.id\r\n                        # удаляем маркер с сервера, если нужно\r\n                        if m.server_id isnt undefined\r\n                            Marker.delete {id: m.server_id}\r\n                            , ->\r\n                                $scope.tutor.markers.splice index, 1\r\n                        else\r\n                            $scope.tutor.markers.splice index, 1\r\n\r\n        $scope.bindMarkerChangeType = (marker) ->\r\n            google.maps.event.addListener marker, 'click', (event) ->\r\n                if @type == 'green'\r\n                    @type = 'red'\r\n                    icon_to_set = ICON_RED\r\n                else\r\n                    @type = 'green'\r\n                    icon_to_set = ICON_GREEN\r\n                gmap = this\r\n                if marker.server_id isnt undefined\r\n                    Marker.update {id: marker.server_id, type: @type}\r\n                    , ->\r\n                        gmap.setIcon icon_to_set\r\n                else\r\n                    gmap.setIcon icon_to_set\r\n\r\n        # Поиск по карте\r\n        $scope.searchMap = (address) ->\r\n            $scope.geocoder.geocode {\r\n                address: address + ', московская область'\r\n                bounds: $scope.RECOM_BOUNDS\r\n                componentRestrictions:\r\n                    country: 'RU'\r\n                    administrativeArea: 'Moscow'\r\n            }, (results, status) ->\r\n                if status == google.maps.GeocoderStatus.OK\r\n                    # максимальное кол-во результатов\r\n                    max_results = 3\r\n                    # масштаб поиска\r\n                    search_result_bounds = new (google.maps.LatLngBounds)\r\n                    $.each results, (i, result) ->\r\n                        return if i >= max_results\r\n\r\n                        search_result_bounds.extend result.geometry.location\r\n                        # границы карты в зависимости от поставленных меток\r\n                        search_marker = new (google.maps.Marker)(\r\n                            map: $scope.map\r\n                            position: result.geometry.location\r\n                            icon: ICON_SEARCH)\r\n\r\n                        google.maps.event.addListener search_marker, 'click', (event) ->\r\n                            @setMap null\r\n                            $scope.gmapAddMarker event\r\n                        $scope.search_markers = initIfNotSet($scope.search_markers)\r\n                        $scope.search_markers.push search_marker\r\n\r\n                    # если отображаемые маркеры есть, делаем зум на них\r\n                    if results.length > 0\r\n                        $scope.gmap.fitBounds search_result_bounds\r\n                        $scope.gmap.panToBounds search_result_bounds\r\n                        if results.length == 1\r\n                            $scope.gmap.setZoom 12\r\n                    else\r\n                        $('#map-search').addClass('has-error').focus()\r\n\r\n        # Запуск поиска по карте\r\n        $scope.gmapsSearch = ($event) ->\r\n            if $event.keyCode == 13 or $event.type == 'click'\r\n                # prevent empty\r\n                if $('#map-search').val() == ''\r\n                    $('#map-search').addClass('has-error').focus()\r\n                else\r\n                    $('#map-search').removeClass 'has-error'\r\n                $scope.searchMap $('#map-search').val()\r\n\r\n        # Загрузить метки\r\n        $scope.loadMarkers = ->\r\n            $rootScope.dataLoaded.promise.then ->\r\n                markers = []\r\n                $.each $scope.tutor.markers, (index, marker) ->\r\n                    # Создаем маркер\r\n                    # @todo: сделать так, чтобы type и metros и еще дургие можно было передавать массивом в последнем параметре\r\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type, marker.id)\r\n                    new_marker.metros = marker.metros\r\n\r\n                    # Добавляем маркер на карту\r\n                    new_marker.setMap($scope.map)\r\n\r\n                    # Добавляем ивент удаления маркера\r\n                    $scope.bindMarkerDelete(new_marker)\r\n                    $scope.bindMarkerChangeType(new_marker)\r\n                    markers.push new_marker\r\n                $scope.tutor.markers = markers\r\n                $timeout ->\r\n                    $scope.fully_loaded = true\r\n\r\n        # Сохранить метки\r\n        $scope.saveMarkers = ->\r\n            $scope.form_changed = true\r\n            $('#gmap-modal').modal 'hide'\r\n","angular\r\n    .module 'Egerep'\r\n\r\n    .factory 'Model', ($resource) ->\r\n        $resource 'api/models/:id', {},\r\n            update:\r\n                method: 'PUT'\r\n\r\n\r\n\r\n    #\r\n    #   LIST CONTROLLER\r\n    #\r\n    .controller \"ModelsIndex\", ($scope, $timeout, Model) ->\r\n        $scope.models = Model.query()\r\n\r\n\r\n\r\n    #\r\n    #   ADD/EDIT CONTROLLER\r\n    #\r\n    .controller \"ModelsForm\", ($scope, $timeout, $interval, Model) ->\r\n        # get teacher\r\n        $timeout ->\r\n            $scope.model = Model.get {id: $scope.id} if $scope.id > 0\r\n","angular.module('Egerep').directive 'comments', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/comments'\r\n    scope:\r\n        user: '='\r\n        entityId: '='\r\n        trackLoading: '='\r\n        entityType: '@'\r\n    controller: ($rootScope, $scope, $timeout, Comment, UserService) ->\r\n        $scope.UserService = UserService\r\n        $scope.show_max = 4                 # сколько комментов показывать в свернутом режиме\r\n        $scope.show_all_comments = false    # показать все комментарии?\r\n        $scope.is_dragging = false          # комментарий перетаскивается\r\n\r\n        bindDraggableAll = ->\r\n            $timeout ->\r\n                $scope.getComments().forEach (comment) ->\r\n                    bindDraggable(comment.id)\r\n\r\n        bindDraggable = (comment_id) ->\r\n            $(\"#comment-#{comment_id}\").draggable\r\n                revert: 'invalid'\r\n                activeClass: 'drag-active'\r\n                start: (e, ui) ->\r\n                    $scope.is_dragging = true\r\n                    $scope.$apply()\r\n                stop: (e, ui) ->\r\n                    $scope.is_dragging = false\r\n                    $scope.$apply()\r\n\r\n            $(\"#comment-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\r\n                tolerance: 'pointer'\r\n                hoverClass: 'hovered'\r\n                drop: (e, ui) ->\r\n                    $scope.remove($(ui.draggable).data('comment-id'))\r\n\r\n        $scope.showAllComments = ->\r\n            $scope.show_all_comments = true\r\n            bindDraggableAll()\r\n            focusModal()\r\n\r\n        $scope.getComments = ->\r\n            if ($scope.show_all_comments or $scope.comments.length <= $scope.show_max) then $scope.comments else _.last($scope.comments, $scope.show_max - 1)\r\n\r\n        # перезагружаем комменты, если меняется entity_id\r\n        $scope.$watch 'entityId', (newVal, oldVal) ->\r\n            $scope.comments = Comment.query\r\n                entity_type: $scope.entityType\r\n                entity_id: newVal\r\n            , ->\r\n                $rootScope.loaded_comments++ if $scope.trackLoading\r\n                bindDraggableAll()\r\n\r\n        $scope.formatDateTime = (date) ->\r\n            moment(date).format \"DD.MM.YY в HH:mm\"\r\n\r\n        $scope.startCommenting = (event) ->\r\n            $scope.start_commenting = true\r\n            $timeout ->\r\n                $(event.target).parent().find('input').focus()\r\n\r\n        $scope.endCommenting = ->\r\n            $scope.comment = ''\r\n            $scope.start_commenting = false\r\n\r\n        $scope.remove = (comment_id) ->\r\n            _.find($scope.comments, {id: comment_id}).$remove()\r\n            $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment_id}))\r\n            bindDraggableAll()\r\n\r\n        $scope.edit = (comment, event) ->\r\n            old_text    = comment.comment\r\n            element     = $(event.target)\r\n\r\n            element.unbind('keydown').unbind('blur')\r\n\r\n            element.attr('contenteditable', 'true').focus()\r\n                .on 'keydown', (e) ->\r\n                    console.log old_text\r\n                    if e.keyCode is 13\r\n                        $(@).removeAttr('contenteditable').blur()\r\n                        comment.comment = $(@).text()\r\n                        comment.$update()\r\n                    if e.keyCode is 27\r\n                        $(@).blur()\r\n\r\n                .on 'blur', (e) ->\r\n                    if element.attr 'contenteditable'\r\n                        console.log old_text\r\n                        element.removeAttr('contenteditable').html old_text\r\n            return\r\n            # setEndOfContenteditable(event.target)\r\n\r\n        $scope.submitComment = (event) ->\r\n            if event.keyCode is 13\r\n                new_comment = new Comment\r\n                    comment: $scope.comment\r\n                    user_id: $scope.user.id\r\n                    entity_id: $scope.entityId\r\n                    entity_type: $scope.entityType\r\n                new_comment.$save()\r\n                    .then (response)->\r\n                        console.log response\r\n                        new_comment.user = $scope.user\r\n                        new_comment.id = response.id\r\n                        $scope.comments.push new_comment\r\n                        $timeout ->\r\n                            bindDraggable(new_comment.id)\r\n                $scope.endCommenting()\r\n                focusModal();\r\n\r\n            if event.keyCode is 27\r\n                $(event.target).blur()\r\n\r\n        focusModal = ->\r\n            # @custom\r\n            # после сохранения коммента фокус устновим на .modul:visible если оно есть,\r\n            # иначе фокус теряется и с модуля и с инпута, и ESC не обрабатывается\r\n                        $('.modal:visible').focus() if $('.modal:visible').length\r\n                        return\r\n            # /@custom","angular.module('Egerep').directive 'email', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/email'\r\n    scope:\r\n        entity: '='\r\n    controller: ($scope) ->\r\n        $scope.send = ->\r\n            $('#email-modal').modal 'show'\r\n    # controller: ($scope, $timeout, Email) ->\r\n    #     # массовая отправка?\r\n    #     $scope.mass = false\r\n    #\r\n    #     # подсчитать СМС\r\n    #     $scope.smsCount = ->\r\n    #         SmsCounter.count($scope.message || '').messages\r\n    #\r\n    #     # отправить\r\n    #     $scope.send = ->\r\n    #         if $scope.message\r\n    #             sms = new Sms\r\n    #                 message: $scope.message\r\n    #                 to: $scope.number\r\n    #                 mass: $scope.mass\r\n    #             sms.$save()\r\n    #\r\n    #     # подгружаем историю, если номер телефона меняется\r\n    #     $scope.$watch 'number', (newVal, oldVal) ->\r\n    #         console.log $scope.$parent.formatDateTime($scope.created_at)\r\n    #         $scope.history = Sms.query({number: newVal}) if newVal\r\n","angular.module('Egerep')\r\n    .directive 'ngHighlight', ->\r\n        restrict: 'A'\r\n        scope:\r\n            ngModel: '='\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            # бомже-вариант\r\n            if $($element).prop('tagName') is 'INPUT'\r\n                $($element).on 'keyup', ->\r\n                    refreshInput @\r\n                $timeout ->\r\n                    refreshInput $element\r\n                , 500\r\n\r\n            if $($element).prop('tagName') is 'SELECT'\r\n                $($element).on 'change', ->\r\n                    refreshSelect @\r\n                $timeout ->\r\n                    refreshSelect $element\r\n                , 500\r\n\r\n            refreshInput = (el) ->\r\n                if $(el).val()\r\n                    $(el).parent().find('input, span').addClass('is-selected')\r\n                else\r\n                    $(el).parent().find('input, span').removeClass('is-selected')\r\n\r\n            refreshSelect = (el) ->\r\n                $(el).parent().find('button').removeClass 'is-selected'\r\n                $(el).parent().find('select > option[value!=\"\"]:selected').parent('select').siblings('button').addClass 'is-selected'\r\n\r\n\r\n            # @todo: узнать, почему не запускается $watch на пустое значение\r\n            # $scope.$watch 'ngModel', (newVal, oldVal) ->\r\n            #     if newVal\r\n            #         $($element).css('background', '#dceee5')\r\n            # , true\r\n","angular.module('Egerep').directive 'inputComment', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/input-comment'\r\n    scope:\r\n        entity: '='\r\n        commentField: '@'\r\n    controller: ($scope, $timeout) ->\r\n        $scope.is_being_commented = false\r\n\r\n        $scope.blurComment = ->\r\n            $scope.is_being_commented = false\r\n\r\n        $scope.focusComment = ->\r\n            $scope.is_being_commented = true\r\n\r\n        $scope.startComment = (event) ->\r\n            $scope.is_being_commented = true\r\n            $timeout ->\r\n                $(event.target).parent().children('input').focus()\r\n\r\n        $scope.endComment =  (event) ->\r\n            if event.keyCode is 13\r\n                $(event.target).blur()\r\n                return\r\n","angular.module('Egerep').directive 'metroList', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/metro-list'\r\n    scope:\r\n        markers: '='\r\n    controller: ($scope, $element, $attrs) ->\r\n        $scope.inline = $attrs.hasOwnProperty('inline')\r\n        $scope.one_station = $attrs.hasOwnProperty('oneStation')\r\n\r\n        $scope.short = (title) ->\r\n            title.slice(0,3).toUpperCase()\r\n\r\n        $scope.minutes = (minutes) ->\r\n            Math.round minutes\r\n","angular.module 'Egerep'\r\n    .directive 'ngMulti', ->\r\n        restrict: 'E'\r\n        replace: true\r\n        scope:\r\n            object: '='\r\n            model: '='\r\n            noneText: '@'\r\n        templateUrl: 'directives/ngmulti'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            $scope.highlight = $attrs.hasOwnProperty('highlight')\r\n            $timeout ->\r\n                $($element).selectpicker\r\n                    noneSelectedText: $scope.noneText\r\n\r\n            if $scope.highlight then $scope.$watch 'model', (newVal, oldVal) ->\r\n                if newVal\r\n                    $timeout ->\r\n                        $($element).parent().find('button').removeClass 'is-selected'\r\n                        $($element).parent().find('select > option[value!=\"\"]:selected').parent('select').siblings('button').addClass 'is-selected'\r\n","angular.module('Egerep').directive 'notifications', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/notifications'\r\n    scope:\r\n        user: '='\r\n        entityId: '='\r\n        trackLoading: '='\r\n        entityType: '@'\r\n    controller: ($rootScope, $scope, $timeout, Notification, Notify) ->\r\n        $scope.show_max = 4                         # сколько комментов показывать в свернутом режиме\r\n        $scope.show_all_notifications = false       # показать все напоминания?\r\n        $scope.is_dragging = false                  # комментарий перетаскивается\r\n        $scope.Notification = Notification\r\n        $scope.Notify = Notify\r\n\r\n        bindDraggableAndMask = (notification_id) ->\r\n            element = $(\"#notification-#{notification_id}\")\r\n            element.draggable\r\n                revert: 'invalid'\r\n                activeClass: 'drag-active'\r\n                start: (e, ui) ->\r\n                    $scope.is_dragging = true\r\n                    $scope.$apply()\r\n                stop: (e, ui) ->\r\n                    $scope.is_dragging = false\r\n                    $scope.$apply()\r\n            element.find('.notification-date-add').mask 'd9.y9.y9', {clearIfNotMatch: true}\r\n\r\n        $timeout ->\r\n            $scope.notifications.forEach (notification) ->\r\n                bindDraggableAndMask(notification.id)\r\n            $(\"#notification-delete-#{$scope.entityType}-#{$scope.entityId}\").droppable\r\n                tolerance: 'pointer'\r\n                hoverClass: 'hovered'\r\n                drop: (e, ui) ->\r\n                    $scope.remove($(ui.draggable).data('notification-id'))\r\n        , 2000\r\n\r\n        $scope.showAllNotifications = ->\r\n            $scope.show_all_notifications = true\r\n            $timeout ->\r\n                $scope.notifications.forEach (notification) ->\r\n                    bindDraggableAndMask(notification.id)\r\n\r\n        $scope.getNotifications = ->\r\n            if ($scope.show_all_notifications or $scope.notifications.length <= $scope.show_max) then $scope.notifications else _.last($scope.notifications, $scope.show_max - 1)\r\n\r\n        # передобавляет contenteditable, хотя он есть всегда\r\n        $scope.hack = (event) ->\r\n            $(event.target).attr('contenteditable', true).focus()\r\n            return\r\n\r\n        $scope.toggle = (notification) ->\r\n            $rootScope.toggleEnumServer(notification, 'approved', Notify, Notification)\r\n\r\n        # перезагружаем комменты, если меняется entity_id\r\n        $scope.$watch 'entityId', (newVal, oldVal) ->\r\n            $scope.notifications = Notification.query\r\n                entity_type: $scope.entityType\r\n                entity_id: newVal\r\n            , ->\r\n                $rootScope.loaded_notifications++ if $scope.trackLoading\r\n\r\n        $scope.formatDateTime = (date) ->\r\n            moment(date).format \"DD.MM.YY в HH:mm\"\r\n\r\n        $scope.startNotificationing = (event) ->\r\n            $scope.start_notificationing = true\r\n            $timeout ->\r\n                $(event.target).parents('div').first().find('div').focus()\r\n                $(event.target).parents('div').first().find('input').mask 'd9.y9.y9', {clearIfNotMatch: true}\r\n\r\n        $scope.endNotificationing = (comment_element, date_element)->\r\n            comment_element.html('')\r\n            date_element.val('')\r\n            $scope.start_notificationing = false\r\n\r\n        $scope.remove = (notification_id) ->\r\n            _.find($scope.notifications, {id: notification_id}).$remove()\r\n            $scope.notifications = _.without($scope.notifications, _.findWhere($scope.notifications, {id: notification_id}))\r\n\r\n        saveEdit = (notification, event) ->\r\n            event.preventDefault()\r\n            parent          = $(event.target).parents('div').first()\r\n            comment_element = parent.find('div').last()\r\n            date_element    = parent.find('input')\r\n            comment         = comment_element.text()\r\n            date            = date_element.val()\r\n\r\n            if date is '' or date.match /_/\r\n                console.log 'no date', date, date_element\r\n                date_element.blur().focus()\r\n                return\r\n            if comment is ''\r\n                console.log 'no comment', comment, comment_element\r\n                comment_element.focus()\r\n                return\r\n\r\n            Notification.update {id: notification.id},\r\n                comment: comment\r\n                date: date\r\n\r\n        $scope.editNotification = (notification, event) ->\r\n            handleDateKeycodes event\r\n\r\n            if event.keyCode is 13\r\n                event.preventDefault()\r\n                $(event.target).blur()\r\n                window.getSelection().removeAllRanges()\r\n                saveEdit(notification, event)\r\n            if event.keyCode is 27\r\n                window.getSelection().removeAllRanges()\r\n                $(event.target).blur()\r\n\r\n        notificate = (event) ->\r\n            parent          = $(event.target).parents('div').first()\r\n            comment_element = parent.find('div').last()\r\n            date_element    = parent.find('input')\r\n            comment         = comment_element.text()\r\n            date            = date_element.val()\r\n\r\n            if date is '' or date.match /_/\r\n                date_element.blur().focus()\r\n                return\r\n            if comment is ''\r\n                comment_element.focus()\r\n                return\r\n            new_notification = new Notification\r\n                comment: comment\r\n                user_id: $scope.user.id\r\n                entity_id: $scope.entityId\r\n                date: date\r\n                entity_type: $scope.entityType\r\n            new_notification.$save()\r\n                .then (response)->\r\n                    console.log response\r\n                    new_notification.user = $scope.user\r\n                    new_notification.id = response.id\r\n                    new_notification.approved = 0\r\n                    $scope.notifications.push new_notification\r\n                    $timeout ->\r\n                        bindDraggableAndMask(new_notification.id)\r\n            $scope.endNotificationing(comment_element, date_element)\r\n\r\n\r\n        handleDateKeycodes = (event) ->\r\n            return if $(event.target).prop('tagName') is 'DIV'\r\n            if event.keyCode in [38, 40]\r\n                event.preventDefault()\r\n                date_node = $(event.target).parents('div').first().find('input')\r\n                date = date_node.val()\r\n                if date.match /_/\r\n                    date_node.val $rootScope.formatDate moment()\r\n                else\r\n                    add_days = if event.keyCode == 38 then 1 else -1\r\n                    new_date = $rootScope.formatDate moment('20' + convertDate date).add {day : add_days} # '20' чтобы  16 => 2016\r\n                    date_node.val new_date\r\n\r\n        $scope.submitNotification = (event) ->\r\n            handleDateKeycodes event\r\n\r\n            if event.keyCode is 13\r\n                event.preventDefault()\r\n                notificate(event)\r\n            if event.keyCode is 27\r\n                window.getSelection().removeAllRanges()\r\n                $(event.target).blur()\r\n\r\n        $scope.defaultNotification = ->\r\n            new_notification = new Notification\r\n                comment: 'стандартное напоминание'\r\n                user_id: $scope.user.id\r\n                entity_id: $scope.entityId\r\n                entity_type: $scope.entityType\r\n                approved: 1\r\n                date: moment(convertDate($scope.$parent.selected_attachment.date)).add(2, 'days').format('DD.MM.YY')\r\n            new_notification.$save()\r\n                .then (response)->\r\n                    new_notification.user = $scope.user\r\n                    new_notification.id = response.id\r\n                    new_notification.approved = 1\r\n                    $scope.notifications.push new_notification\r\n                    $timeout ->\r\n                        bindDraggableAndMask(new_notification.id)\r\n","angular.module('Egerep').directive 'pencilInput', ->\r\n    restrict: 'E'\r\n    replace: true\r\n    templateUrl: 'directives/pencil-input'\r\n    scope:\r\n        model: '='\r\n    controller: ($scope, $timeout, $element, $controller) ->\r\n        $scope.is_being_commented = false\r\n\r\n        $scope.blurComment = ->\r\n            $scope.is_being_commented = false\r\n\r\n        $scope.focusComment = ->\r\n            $scope.is_being_commented = true\r\n\r\n        $scope.startComment = (event) ->\r\n            $scope.is_being_commented = true\r\n            $timeout ->\r\n                $(event.target).parent().children('div').focus()\r\n\r\n        $scope.watchEnter = (event) ->\r\n            if event.keyCode in [13, 27]\r\n                # @todo: надо изменить\r\n                if event.keyCode is 13\r\n                    $scope.model = $(event.target).parent().children('div').text()\r\n                    \r\n                $(event.target).parent().children('div').text($scope.model)\r\n                event.preventDefault()\r\n                $(event.target).blur()\r\n            return\r\n","angular.module('Egerep').directive 'phones', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/phones'\r\n    scope:\r\n        entity: '='\r\n    controller: ($scope, $timeout, $rootScope, PhoneService, UserService) ->\r\n        $scope.PhoneService = PhoneService\r\n        $scope.UserService  = UserService\r\n\r\n        console.log $scope.entityType\r\n\r\n        # level depth\r\n        $rootScope.dataLoaded.promise.then (data) ->\r\n            $scope.level = if $scope.entity.phones and $scope.entity.phones.length then $scope.entity.phones.length else 1\r\n\r\n        $scope.nextLevel = ->\r\n            $scope.level++\r\n\r\n        $scope.phoneMaskControl = (event) ->\r\n            el = $(event.target)\r\n            # grabs string phone_2 from object model.phone2\r\n            # so it can be accessible by key\r\n            phone_id = el.attr('ng-model').split('.')[1]\r\n            $scope.entity[phone_id] = $(event.target).val()\r\n\r\n        $scope.isFull = (number) ->\r\n            return false if number is undefined or number is \"\"\r\n            !number.match(/_/)\r\n\r\n        # отправить смс\r\n        $scope.sms = (number) ->\r\n            $('#sms-modal').modal 'show'\r\n            $rootScope.sms_number = number\r\n\r\n        # информация по api\r\n        $scope.info = (number) ->\r\n            $scope.api_number = number\r\n            $scope.mango_info = null\r\n            $('#api-phone-info').modal 'show'\r\n            PhoneService.info(number).then (response) ->\r\n                console.log response.data\r\n                $scope.mango_info = response.data\r\n\r\n        $scope.formatDateTime = (date) ->\r\n            moment(date).format \"DD.MM.YY в HH:mm\"\r\n\r\n        $scope.time = (seconds) ->\r\n            moment(0).seconds(seconds).format(\"mm:ss\")\r\n\r\n        $scope.getNumberTitle = (number) ->\r\n            console.log number, $scope.api_number\r\n            return 'текущий номер' if number is PhoneService.clean($scope.api_number)\r\n            number\r\n\r\n        recodringLink = (recording_id) ->\r\n            api_key   = 'goea67jyo7i63nf4xdtjn59npnfcee5l'\r\n            api_salt  = 't9mp7vdltmhn0nhnq0x4vwha9ncdr8pa'\r\n            timestamp = moment().add(5, 'minute').unix()\r\n\r\n            sha256 = new jsSHA('SHA-256', 'TEXT')\r\n            sha256.update(api_key + timestamp + recording_id + api_salt)\r\n            sign = sha256.getHash('HEX')\r\n\r\n            return \"https://app.mango-office.ru/vpbx/queries/recording/link/#{recording_id}/play/#{api_key}/#{timestamp}/#{sign}\"\r\n\r\n        $scope.play = (recording_id) ->\r\n            $scope.audio.pause() if $scope.audio\r\n            $scope.audio = new Audio recodringLink(recording_id)\r\n            $scope.audio.play()\r\n            $scope.is_playing = recording_id\r\n\r\n        $scope.isPlaying = (recording_id) ->\r\n            $scope.is_playing is recording_id\r\n\r\n        $scope.stop = (recording_id) ->\r\n            $scope.is_playing = null\r\n            $scope.audio.pause()\r\n","angular.module 'Egerep'\r\n    .directive 'plural', ->\r\n        restrict: 'E'\r\n        scope:\r\n            count:      '='      # кол-во\r\n            type:       '@'      # тип plural age | student | ...\r\n            noneText:   '@'      # текст, если кол-во равно нулю\r\n            additional: '='      # кол-во\r\n        templateUrl: 'directives/plural'\r\n        controller: ($scope, $element, $attrs, $timeout) ->\r\n            $scope.textOnly = $attrs.hasOwnProperty('textOnly')\r\n            $scope.hideZero = $attrs.hasOwnProperty('hideZero')\r\n\r\n            $scope.when =\r\n                'age': ['год', 'года', 'лет']\r\n                'student': ['ученик', 'ученика', 'учеников']\r\n                'minute': ['минуту', 'минуты', 'минут']\r\n                'hour': ['час', 'часа', 'часов']\r\n                'day': ['день', 'дня', 'дней']\r\n                'meeting': ['встреча', 'встречи', 'встреч']\r\n                'score': ['балл', 'балла', 'баллов']\r\n                'rubbles': ['рубль', 'рубля', 'рублей']\r\n                'lesson': ['занятие', 'занятия', 'занятий']\r\n                'client': ['клиент', 'клиента', 'клиентов']\r\n                'mark': ['оценки', 'оценок', 'оценок']\r\n                'request': ['заявка', 'заявки', 'заявок']\r\n","angular.module 'Egerep'\r\n    .directive 'plus', ->\r\n        restrict: 'E'\r\n        scope:\r\n            previous: '='\r\n            count: '='\r\n        templateUrl: 'directives/plus'\r\n","angular.module 'Egerep'\r\n    .directive 'securityNotification', ->\r\n        restrict: 'E'\r\n        scope:\r\n            tutor: '='\r\n        templateUrl: 'directives/security-notification'\r\n        controller: ($scope, Tutor) ->\r\n            $scope.toggleNotification = (index) ->\r\n                security_notification = angular.copy($scope.tutor.security_notification)\r\n                security_notification[index] = not security_notification[index]\r\n                Tutor.update\r\n                    id: $scope.tutor.id\r\n                    security_notification: security_notification\r\n                , ->\r\n                    $scope.tutor.security_notification = angular.copy(security_notification)\r\n","angular.module 'Egerep'\r\n    .directive 'ngSelect', ->\r\n        restrict: 'E'\r\n        replace: true\r\n        scope:\r\n            object: '='\r\n            model: '='\r\n            noneText: '@'\r\n        templateUrl: 'directives/ngselect'\r\n        controller: ($scope, $element, $attrs) ->\r\n            # выбираем первое значение по умолчанию, если нет noneText\r\n            if not $scope.noneText\r\n                $scope.model = _.first Object.keys($scope.object)\r\n","angular.module('Egerep').directive 'sms', ->\r\n    restrict: 'E'\r\n    templateUrl: 'directives/sms'\r\n    scope:\r\n        number: '='\r\n    controller: ($scope, $timeout, Sms) ->\r\n        # массовая отправка?\r\n        $scope.mass = false\r\n\r\n        # подсчитать СМС\r\n        $scope.smsCount = ->\r\n            SmsCounter.count($scope.message || '').messages\r\n\r\n        # отправить\r\n        $scope.send = ->\r\n            if $scope.message\r\n                $scope.sms_sending = true\r\n                ajaxStart()\r\n                sms = new Sms\r\n                    message: $scope.message\r\n                    to: $scope.number\r\n                    mass: $scope.mass\r\n                sms.$save()\r\n                    .then (data) ->\r\n                        ajaxEnd()\r\n                        $scope.sms_sending = false\r\n                        $scope.message = ''\r\n                        $scope.history.push(data)\r\n                        scrollDown()\r\n\r\n        # подгружаем историю, если номер телефона меняется\r\n        $scope.$watch 'number', (newVal, oldVal) ->\r\n            console.log $scope.$parent.formatDateTime($scope.created_at)\r\n            $scope.history = Sms.query({number: newVal}) if newVal\r\n            scrollDown()\r\n\r\n        scrollDown = ->\r\n            $timeout ->\r\n                $(\"#sms-history\").animate({ scrollTop: $(window).height() }, \"fast\");","angular.module 'Egerep'\r\n    .directive 'tutorPhoto', ->\r\n        restrict: 'E'\r\n        replace: true\r\n        scope:\r\n            tutor: '='\r\n            version: '='\r\n        templateUrl: 'directives/tutor-photo'\r\n","#\r\n# Dependencies: UserService should be available in parent scope!\r\n#\r\n\r\nangular.module 'Egerep'\r\n    .directive 'userSwitch', ->\r\n        restrict: 'E'\r\n        scope:\r\n            entity: '='\r\n            resource: '='\r\n            userId: '@'\r\n        templateUrl: 'directives/user-switch'\r\n        controller: ($scope) ->\r\n            $scope.UserService = $scope.$parent.UserService\r\n","angular.module 'Egerep'\r\n    .directive 'user', ->\r\n        restrict: 'E'\r\n        scope:\r\n            model: '='      # кол-во\r\n        templateUrl: 'directives/user'\r\n","angular.module('Egerep')\r\n    .value 'Approved',\r\n        0: 'не подтвержден'\r\n        1: 'подтвержден'\r\n    .value 'Confirmed',  # есть и approved, но там текст немножко другой.\r\n        0: 'подтвердить'\r\n        1: 'подтверждено'\r\n    .value 'Months',\r\n        1: 'январь'\r\n        2: 'февраль'\r\n        3: 'март'\r\n        4: 'апрель'\r\n        5: 'май'\r\n        6: 'июнь'\r\n        7: 'июль'\r\n        8: 'август'\r\n        9: 'сентябрь'\r\n        10: 'октябрь'\r\n        11: 'ноябрь'\r\n        12: 'декабрь'\r\n\r\n    .value 'Notify', ['напомнить', 'не напоминать']\r\n\r\n    .value 'AttachmentErrors',\r\n        1: 'в стыковке не указан класс'\r\n        2: 'в стыковке не указан предмет'\r\n        3: 'не указаны условия стыковки'\r\n        4: 'дата архивации должна быть позже даты стыковки'\r\n        5: 'не указаны детали архивации'\r\n        6: 'прогноз и занятия не сочетаются'\r\n        7: 'прогноз и занятия не сочетаются'\r\n        8: 'при наличии занятий к проводке стыковка не может быть скрыта'\r\n        9: 'дата архивации не совпадает с датой последнего занятия'\r\n        10: 'возможно стыковку можно скрыть'\r\n        11: 'возможно стыковку можно скрыть'\r\n        12: 'в скрытой стыковке дата архивации должна совпадать с датой последнего занятия'\r\n        13: 'в скрытой стыковке без занятий между датами стыковки и архивации должно быть 7 дней'\r\n        14: 'если архивация отсутствует, стыковка не может быть скрыта'\r\n        15: 'стыковка, у которой дата архивации позже даты последнего расчета не может быть скрыта'\r\n        16: 'слишком маленький прогноз'\r\n        17: 'слишком большой прогноз'\r\n\r\n    .value 'ReviewErrors',\r\n        1: 'не стоит оценка к отзыву'\r\n        2: 'нет подписи к опубликованному отзыву'\r\n        3: 'нет текста отзыва к опубликованному отзыву'\r\n\r\n    .value 'TutorErrors',\r\n        1: 'нет оригинала фото'\r\n        2: 'нет обрезанного фото'\r\n        3: 'цена не установлена'\r\n        4: 'нет меток и выезда'\r\n\r\n    .value 'LogTypes',\r\n        create: 'создание'\r\n        update: 'обновление'\r\n        delete: 'удаление'\r\n    .value 'Recommendations',\r\n        1:\r\n            text: 'У этого репетитора уже было несколько расчетов, поэтому ему можно доверить длительное обучение, требующееся данному клиенту'\r\n            type: 0\r\n        2:\r\n            text: 'У этого репетитора был всего 1 расчет и ему можно доверить длительное обучение, но лучше поискать более проверенные варианты'\r\n            type: 1\r\n        3:\r\n            text: 'С этим репетитором не было встреч и есть клиенты, за которых он еще не рассчитался. Отдавать этого клиента категорически нельзя'\r\n            type: 2\r\n        4:\r\n            text: 'С этим репетитором не было встреч и у него нет активных клиентов. Отдавать ему клиента можно, но только в крайнем случае'\r\n            type: 1\r\n        5:\r\n            text: 'У этого репетитора уже было несколько расчетов, поэтому ему можно доверить данного клиента'\r\n            type: 0\r\n        6:\r\n            text: 'У этого репетитора был всего 1 расчет, то есть у него средний кредитный рейтинг. Если более проверенных репетиторов нет, ему можно доверить этого клиента'\r\n            type: 1\r\n        7:\r\n            text: 'С этим репетитором не было встреч и есть клиенты, за которых он еще не рассчитался. Отдавать этого репетитора можно в самом крайнем случае'\r\n            type: 2\r\n        8:\r\n            text: 'С этим репетитором не было встреч и у него нет активных клиентов. Риск сотрудничества средний, поэтому работать с репетитором можно, если нет других вариантов'\r\n            type: 1\r\n        9:\r\n            text: 'У этого репетитора высокий кредитный рейтинг, но конец учебного года лучше использовать для проверки неизвестных репетиторов'\r\n            type: 1\r\n        10:\r\n            text: 'Этому репетитору мы не доверяем, но сейчас отличное время для его проверки. Если сотрудничество будет успешным, то мы будем рекомендовать в следующем году как проверенного. Если он не заплатит, то невыплаты будут минимальными и репетитора мы закроем навсегда, в чем великая польза.'\r\n            type: 0\r\n        11:\r\n            text: 'С 10-классниками нужно быть особенно аккуратными и этот репетитор в данном случае рекомендован'\r\n            type: 0\r\n        12:\r\n            text: 'С этим репетитором была всего 1 встреча, поэтому давать его ученику 10 класса будет риском. Сделайте все, чтобы избежать этого, но если не получается – давать можно'\r\n            type: 1\r\n        13:\r\n            text: 'С этим репетитором не было встреч и есть клиенты, за которых он еще не рассчитался. Нужно сделать все, чтобы 10-классник его не получил, так как 10 классы всегда продолжают заниматься и в 11 классе. Давать этого репетитора категорически нельзя'\r\n            type: 2\r\n        14:\r\n            text: 'Этот репетитор для компании новый. Давать 10-класснику можно, но в самом крайнем случае'\r\n            type: 2\r\n    .value 'RecommendationTypes', ['очень рекомендован', 'средне рекомендован', 'не рекомендован']\r\n    .value 'DebtTypes',\r\n        0: 'не доплатил'\r\n        1: 'переплатил'\r\n    .value 'Weekdays',\r\n        0: 'пн'\r\n        1: 'вт'\r\n        2: 'ср'\r\n        3: 'чт'\r\n        4: 'пт'\r\n        5: 'сб'\r\n        6: 'вс'\r\n    .value 'Destinations',\r\n        r_k: 'репетитор едет к клиенту'\r\n        k_r: 'клиент едет к репетитору'\r\n    .value 'Workplaces',\r\n        0: 'не активен в системе ЕГЭ-Центре'\r\n        1: 'активен в системе ЕГЭ-Центра'\r\n        2: 'ведет занятия в ЕГЭ-Центре'\r\n        3: 'ранее работал в ЕГЭ-Центре'\r\n\r\n    .value 'Genders',\r\n        male:   'мужской'\r\n        female: 'женский'\r\n    .value 'YesNo',\r\n        0: 'нет'\r\n        1: 'да'\r\n    .value 'TutorStates',\r\n        0: 'не установлено'\r\n        1: 'на проверку'\r\n        2: 'к закрытию'\r\n        3: 'закрыто'\r\n        4: 'к одобрению'\r\n        5: 'одобрено'\r\n\r\n    .value 'TutorPublishedStates',\r\n        0: 'не опубликован'\r\n        1: 'опубликован'\r\n\r\n    .value 'PaymentMethods',\r\n        0: 'стандартный расчет'\r\n        1: 'яндекс.деньги'\r\n        2: 'перевод на карту'\r\n\r\n    .value 'LkPaymentTypes',\r\n        0: 'личная встреча'\r\n\r\n    .value 'ArchiveStates',\r\n        impossible: 'невозможно'\r\n        possible: 'возможно'\r\n\r\n    .value 'ReviewStates',\r\n        unpublished: 'не опубликован'\r\n        published:   'опубликован'\r\n\r\n    .value 'Existance', ['созданные', 'требующие создания']\r\n    .value 'Presence', [\r\n        ['есть', 'отсутствует'],\r\n        ['есть', 'нет']\r\n    ]\r\n\r\n    .value 'AttachmentVisibility',\r\n        0: 'показано'\r\n        1: 'скрыто'\r\n\r\n    .value 'AttachmentStates',\r\n        new: 'новые'\r\n        inprogress: 'рабочие'\r\n        ended: 'завершенные'\r\n\r\n    .value 'AttachmentState',\r\n        new: 'новый'\r\n        inprogress: 'рабочий'\r\n        ended: 'завершенный'\r\n\r\n    .value 'Checked', ['не проверено', 'проверено']\r\n\r\n    .value 'ReviewScores',\r\n        1: 1\r\n        2: 2\r\n        3: 3\r\n        4: 4\r\n        5: 5\r\n        6: 6\r\n        7: 7\r\n        8: 8\r\n        9: 9\r\n        10: 10\r\n        11: 'отзыв не собирать'\r\n        12: 'отзыв собрать позже'\r\n\r\n    .value 'Grades',\r\n        1: '1 класс'\r\n        2: '2 класс'\r\n        3: '3 класс'\r\n        4: '4 класс'\r\n        5: '5 класс'\r\n        6: '6 класс'\r\n        7: '7 класс'\r\n        8: '8 класс'\r\n        9: '9 класс'\r\n        10: '10 класс'\r\n        11: '11 класс'\r\n        12: 'студенты'\r\n        13: 'остальные'\r\n\r\n    .value 'Subjects',\r\n        all:\r\n            1: 'математика',\r\n            2: 'физика',\r\n            3: 'химия',\r\n            4: 'биология',\r\n            5: 'информатика'\r\n            6: 'русский',\r\n            7: 'литература',\r\n            8: 'обществознание',\r\n            9: 'история',\r\n            10: 'английский',\r\n            11: 'неизвестный предмет',\r\n        ,\r\n        full:\r\n            1: 'Математика'\r\n            2: 'Физика'\r\n            3: 'Химия'\r\n            4: 'Биология'\r\n            5: 'Информатика'\r\n            6: 'Русский язык'\r\n            7: 'Литература'\r\n            8: 'Обществознание'\r\n            9: 'История'\r\n            10: 'Английский язык'\r\n        dative:\r\n            1: 'математике'\r\n            2: 'физике'\r\n            3: 'химии'\r\n            4: 'биологии'\r\n            5: 'информатике'\r\n            6: 'русскому языку'\r\n            7: 'литературе'\r\n            8: 'обществознанию'\r\n            9: 'истории'\r\n            10: 'английскому языку'\r\n            11: 'неизвестному предмету'\r\n        short: ['М', 'Ф', 'Р', 'Л', 'А', 'Ис', 'О', 'Х', 'Б', 'Ин'],\r\n        three_letters:\r\n            1: 'МАТ'\r\n            2: 'ФИЗ'\r\n            3: 'ХИМ'\r\n            4: 'БИО'\r\n            5: 'ИНФ'\r\n            6: 'РУС'\r\n            7: 'ЛИТ'\r\n            8: 'ОБЩ'\r\n            9: 'ИСТ'\r\n            10: 'АНГ'\r\n        short_eng:      ['math', 'phys', 'rus', 'lit', 'eng', 'his', 'soc', 'chem', 'bio', 'inf'],\r\n    .value 'Branches',\r\n        1:\r\n            code:'TRG',\r\n            full:'Тургеневская',\r\n            short:'ТУР',\r\n            address:'Мясницкая 40с1',\r\n            color:'#FBAA33',\r\n        2:\r\n            code:'PVN',\r\n            full:'Проспект Вернадского',\r\n            short:'ВЕР',\r\n            address:'',\r\n            color:'#EF1E25',\r\n        3:\r\n            code:'BGT',\r\n            full:'Багратионовская',\r\n            short:'БАГ',\r\n            address:'',\r\n            color:'#019EE0',\r\n        5:\r\n            code:'IZM',\r\n            full:'Измайловская',\r\n            short:'ИЗМ',\r\n            address:'',\r\n            color:'#0252A2',\r\n        6:\r\n            code:'OPL',\r\n            full:'Октябрьское поле',\r\n            short:'ОКТ',\r\n            address:'',\r\n            color:'#B61D8E',\r\n        7:\r\n            code:'RPT',\r\n            full:'Рязанский Проспект',\r\n            short:'РЯЗ',\r\n            address:'',\r\n            color:'#B61D8E',\r\n        8:\r\n            code:'VKS',\r\n            full:'Войковская',\r\n            short:'ВОЙ',\r\n            address:'',\r\n            color:'#029A55',\r\n        9:\r\n            code:'ORH',\r\n            full:'Орехово',\r\n            short:'ОРЕ',\r\n            address:'',\r\n            color:'#029A55',\r\n        11:\r\n            code:'UJN',\r\n            full:'Южная',\r\n            short:'ЮЖН',\r\n            address:'',\r\n            color:'#ACADAF',\r\n        12:\r\n            code:'PER',\r\n            full:'Перово',\r\n            short:'ПЕР',\r\n            address:'',\r\n            color:'#FFD803',\r\n        13:\r\n            code:'KLG',\r\n            full:'Калужская',\r\n            short:'КЛЖ',\r\n            address:'Научный проезд 8с1',\r\n            color:'#C07911',\r\n        14:\r\n            code:'BRT',\r\n            full:'Братиславская',\r\n            short:'БРА',\r\n            address:'',\r\n            color:'#B1D332',\r\n        15:\r\n            code:'MLD',\r\n            full:'Молодежная',\r\n            short:'МОЛ',\r\n            address:'',\r\n            color:'#0252A2',\r\n        16:\r\n            code:'VLD',\r\n            full:'Владыкино',\r\n            short:'ВЛА',\r\n            address:'',\r\n            color:'#ACADAF',\r\n","angular.module('Egerep')\r\n    .factory 'Marker', ($resource) ->\r\n        $resource apiPath('markers'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Notification', ($resource) ->\r\n        $resource apiPath('notifications'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Account', ($resource) ->\r\n        $resource apiPath('accounts'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'PlannedAccount', ($resource) ->\r\n        $resource apiPath('periods/planned'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Review', ($resource) ->\r\n        $resource apiPath('reviews'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Archive', ($resource) ->\r\n        $resource apiPath('archives'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Attachment', ($resource) ->\r\n        $resource apiPath('attachments'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'RequestList', ($resource) ->\r\n        $resource apiPath('lists'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Request', ($resource) ->\r\n        $resource apiPath('requests'), {id: '@id'},\r\n            update:\r\n                method: 'PUT'\r\n            transfer:\r\n                method: 'POST'\r\n                url: apiPath('requests', 'transfer')\r\n            list:\r\n                method: 'GET'\r\n\r\n    .factory 'Sms', ($resource) ->\r\n        $resource apiPath('sms'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Comment', ($resource) ->\r\n        $resource apiPath('comments'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Client', ($resource) ->\r\n        $resource apiPath('clients'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'User', ($resource) ->\r\n        $resource apiPath('users'), {id: '@id'}, updateMethod()\r\n\r\n    .factory 'Tutor', ($resource) ->\r\n        $resource apiPath('tutors'), {id: '@id'},\r\n            update:\r\n                method: 'PUT'\r\n            deletePhoto:\r\n                url: apiPath('tutors', 'photo')\r\n                method: 'DELETE'\r\n            list:\r\n                method: 'GET'\r\n\r\napiPath = (entity, additional = '') ->\r\n    \"api/#{entity}/\" + (if additional then additional + '/' else '') + \":id\"\r\n\r\nupdateMethod = ->\r\n    update:\r\n        method: 'PUT'\r\n","angular.module('Egerep')\r\n    .service 'ApiService', ($http) ->\r\n        this.metro = (fun, data) ->\r\n            $http.post \"api/metro/#{fun}\", data\r\n        this\r\n","angular.module 'Egerep'\r\n    .service 'AttachmentService', (AttachmentStates) ->\r\n        this.AttachmentStates = AttachmentStates\r\n\r\n        this.getState = (attachment) ->\r\n            if attachment.archive\r\n                'ended'\r\n            else\r\n                if attachment.forecast\r\n                    'inprogress'\r\n                else\r\n                    'new'\r\n\r\n        this.getStatus = (attachment) ->\r\n            this.AttachmentStates[this.getState(attachment)]\r\n            \r\n        this\r\n","angular.module 'Egerep'\r\n    .service 'BranchService', (Branches)->\r\n        this.branches = Branches\r\n\r\n        this.getNameWithColor = (branch_id) ->\r\n            curBranch = this.branches[branch_id]\r\n            '<svg xmlns=\"http://www.w3.org/2000/svg\" version=\"1.1\" class=\"svg-metro\"><circle fill=\"' + curBranch.color + '\" r=\"6\" cx=\"7\" cy=\"7\"></circle></svg>' + curBranch.full\r\n\r\n        this","angular.module 'Egerep'\r\n    .service 'PhoneService', ($rootScope, $http) ->\r\n        this.info = (number) ->\r\n            $http.post 'api/command/mango-stats',\r\n                number: number\r\n\r\n        # позвонить\r\n        this.call = (number) ->\r\n            location.href = \"sip:\" + number.replace(/[^0-9]/g, '')\r\n\r\n        this.isMobile = (number) ->\r\n            number and (parseInt(number[4]) is 9 or parseInt(number[1]) is 9)\r\n\r\n        this.clean = (number) ->\r\n            number.replace /[^0-9]/gim, \"\";\r\n\r\n        this.format = (number) ->\r\n            return if not number\r\n            number = this.clean number\r\n            '+'+number.substr(0,1)+' ('+number.substr(1,3)+') '+number.substr(4,3)+'-'+number.substr(7,2)+'-'+number.substr(9,2)\r\n\r\n        this.sms = (number) ->\r\n            $rootScope.sms_number = number\r\n            $('#sms-modal').modal 'show'\r\n        this\r\n","angular.module 'Egerep'\r\n    .service 'PusherService', ($http) ->\r\n        this.bind = (channel, callback) ->\r\n            init() if this.pusher is undefined\r\n            this.channel.bind \"App\\\\Events\\\\#{ channel }\", callback\r\n\r\n        init = =>\r\n            this.pusher = new Pusher '2d212b249c84f8c7ba5c',\r\n                encrypted: true\r\n                cluster: 'eu'\r\n            this.channel = this.pusher.subscribe 'egerep'\r\n\r\n        this\r\n","angular.module 'Egerep'\r\n    .service 'RecommendationService', (Recommendations, RecommendationTypes) ->\r\n        @get = (tutor, grade) ->\r\n            recommendation = @getRecommendation(tutor, grade)\r\n            recommendation.type_text = RecommendationTypes[recommendation.type]\r\n            recommendation\r\n\r\n        @getRecommendation = (tutor, grade) ->\r\n            month = moment().format 'M'\r\n            # не 10 класс?\r\n            if grade isnt 10\r\n                if month >= 7 && month <= 10\r\n                    if tutor.meeting_count >= 2\r\n                        return Recommendations[1]\r\n                    else\r\n                        if tutor.meeting_count == 1\r\n                            return Recommendations[2]\r\n                        else\r\n                            if tutor.active_clients_count >= 2\r\n                                return Recommendations[3]\r\n                            else\r\n                                return Recommendations[4]\r\n                else\r\n                    if month >= 11 or month <= 2\r\n                        if tutor.meeting_count >= 2\r\n                            return Recommendations[5]\r\n                        else\r\n                            if tutor.meeting_count == 1\r\n                                return Recommendations[6]\r\n                            else\r\n                                if tutor.active_clients_count >= 2\r\n                                    return Recommendations[7]\r\n                                else\r\n                                    return Recommendations[8]\r\n                    else\r\n                        if tutor.meeting_count >= 2\r\n                            return Recommendations[9]\r\n                        else\r\n                            return Recommendations[10]\r\n            else\r\n                if tutor.meeting_count >= 2\r\n                    return Recommendations[11]\r\n                else\r\n                    if tutor.meeting_count == 1\r\n                        return Recommendations[12]\r\n                    else\r\n                        if tutor.active_clients_count >= 2\r\n                            return Recommendations[13]\r\n                        else\r\n                            return Recommendations[14]\r\n        this\r\n","angular.module('Egerep').service 'SvgMap', ->\r\n    this.map = new SVGMap\r\n        iframeId: 'map',\r\n        clicable: true,\r\n        places: [],\r\n        placesHash: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211]\r\n        groups: [\r\n                    {\r\n                        \"id\": \"1\",\r\n                        \"title\": \"внутри кольца\",\r\n                        \"points\": [\r\n                            4, 8, 12, 15, 18, 19, 38, 47, 48, 51, 54, 56, 58, 60, 63, 66, 68, 71, 74, 82, 83, 86, 90, 91, 92, 102, 104, 109, 111, 120, 122, 126, 129, 131, 132, 133, 137, 138, 140, 153, 156, 157, 158, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"2\",\r\n                        \"title\": \"красная север\",\r\n                        \"points\": [\r\n                            55, 106, 124, 145, 154\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"3\",\r\n                        \"title\": \"красная юг\",\r\n                        \"points\": [\r\n                            33, 108, 125, 148, 151, 164, 209, 210\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"4\",\r\n                        \"title\": \"зеленая север\",\r\n                        \"points\": [\r\n                            9, 28, 29, 36, 112, 123\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"5\",\r\n                        \"title\": \"зеленая юг\",\r\n                        \"points\": [\r\n                            2, 39, 44, 46, 50, 53, 88, 152, 197, 202, 204\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"6\",\r\n                        \"title\": \"синяя запад\",\r\n                        \"points\": [\r\n                            32, 59, 62, 75, 76, 77, 93, 121, 127, 186, 203\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"7\",\r\n                        \"title\": \"синяя восток\",\r\n                        \"points\": [\r\n                            13, 42, 94, 95, 119, 161, 163\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"8\",\r\n                        \"title\": \"голубая\",\r\n                        \"points\": [\r\n                            11, 62, 64, 99, 128, 149, 150, 186\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"9\",\r\n                        \"title\": \"оранжевая север\",\r\n                        \"points\": [\r\n                            5, 10, 20, 26, 72, 113, 117\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"10\",\r\n                        \"title\": \"оранжевая юг\",\r\n                        \"points\": [\r\n                            3, 16, 43, 52, 65, 84, 85, 110, 135, 159, 166\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"11\",\r\n                        \"title\": \"фиолетовая север\",\r\n                        \"points\": [\r\n                            14, 87, 100, 103, 130, 141, 142, 162\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"12\",\r\n                        \"title\": \"фиолетовая юг\",\r\n                        \"points\": [\r\n                            30, 35, 57, 61, 107, 115, 134, 205, 206, 211\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"13\",\r\n                        \"title\": \"желтая\",\r\n                        \"points\": [\r\n                            1, 81, 96, 101, 114, 160, 180\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"14\",\r\n                        \"title\": \"серая север\",\r\n                        \"points\": [\r\n                            6, 17, 27, 37, 89, 97, 116, 136\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"15\",\r\n                        \"title\": \"серая юг\",\r\n                        \"points\": [\r\n                            7, 23, 45, 78, 79, 80, 105, 118, 139, 143, 147, 155, 165\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"16\",\r\n                        \"title\": \"светло-зеленая\",\r\n                        \"points\": [\r\n                            21, 31, 41, 49, 53, 57, 67, 70, 98, 101, 107, 114, 200, 201, 202\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"17\",\r\n                        \"title\": \"бутовская\",\r\n                        \"points\": [\r\n                            22, 23, 24, 84, 144, 146, 147, 207, 208\r\n                        ]\r\n                    },\r\n                    {\r\n                        \"id\": \"18\",\r\n                        \"title\": \"каховская\",\r\n                        \"points\": [\r\n                            25, 45, 46, 118, 197\r\n                        ]\r\n                    }\r\n                ]\r\n\r\n    this.show = (points) ->\r\n        $('#svg-modal').modal('show')\r\n        map = this.map\r\n        map.init()\r\n        map.selected = {}\r\n        map.deselectAll()\r\n        map.select(points)\r\n        $(\".legend a\").unbind 'click'\r\n        $(\".legend a\").on 'click', ->\r\n            id = $(this).attr(\"data-rel\")\r\n            map.toggleGroup(id)\r\n\r\n    this.el = ->\r\n        $('#map').contents()\r\n\r\n    this.save = ->\r\n        $('#svg-modal').modal('hide')\r\n        this.map.save()\r\n\r\n    this\r\n","angular.module 'Egerep'\r\n    .service 'TutorService', ($http) ->\r\n        this.translit =\r\n            'А':'A'\r\n            'Б':'B'\r\n            'В':'V'\r\n            'Г':'G'\r\n            'Д':'D'\r\n            'Е':'E'\r\n            'Ё':'E'\r\n            'Ж':'Gh'\r\n            'З':'Z'\r\n            'И':'I'\r\n            'Й':'Y'\r\n            'К':'K'\r\n            'Л':'L'\r\n            'М':'M'\r\n            'Н':'N'\r\n            'О':'O'\r\n            'П':'P'\r\n            'Р':'R'\r\n            'С':'S'\r\n            'Т':'T'\r\n            'У':'U'\r\n            'Ф':'F'\r\n            'Х':'H'\r\n            'Ц':'C'\r\n            'Ч':'Ch'\r\n            'Ш':'Sh'\r\n            'Щ':'Sch'\r\n            'Ъ':'Y'\r\n            'Ы':'Y'\r\n            'Ь':'Y'\r\n            'Э':'E'\r\n            'Ю':'Yu'\r\n            'Я':'Ya'\r\n            'а':'a'\r\n            'б':'b'\r\n            'в':'v'\r\n            'г':'g'\r\n            'д':'d'\r\n            'е':'e'\r\n            'ё':'e'\r\n            'ж':'gh'\r\n            'з':'z'\r\n            'и':'i'\r\n            'й':'y'\r\n            'к':'k'\r\n            'л':'l'\r\n            'м':'m'\r\n            'н':'n'\r\n            'о':'o'\r\n            'п':'p'\r\n            'р':'r'\r\n            'с':'s'\r\n            'т':'t'\r\n            'у':'u'\r\n            'ф':'f'\r\n            'х':'h'\r\n            'ц':'c'\r\n            'ч':'ch'\r\n            'ш':'sh'\r\n            'щ':'sch'\r\n            'ъ':'y'\r\n            'ы':'y'\r\n            'ь':'y'\r\n            'э':'e'\r\n            'ю':'yu'\r\n            'я':'ya'\r\n\r\n        this.default_tutor =\r\n            gender: \"male\"\r\n            branches: []\r\n            phones:   []\r\n            subjects: []\r\n            grades:   []\r\n            svg_map:  []\r\n            markers:  []\r\n            state:       0\r\n            in_egecentr: 0\r\n\r\n        this.getFiltered = (search_data) ->\r\n            $http.post 'api/tutors/filtered', search_data\r\n\r\n        this.select = (search_data) ->\r\n            $http.post 'api/tutors/select', search_data\r\n\r\n        this.getDebtMap = (search_data) ->\r\n            $http.post 'api/debt/map', search_data\r\n\r\n        this.getDebtors = ->\r\n            $http.get 'api/debt'\r\n\r\n        this.generateLogin = (tutor) ->\r\n            login = ''\r\n            login += this.translit[letter] for letter in tutor.last_name.toLowerCase()\r\n            login = login.slice 0, 3\r\n            login += '_' + this.translit[tutor.first_name.toLowerCase()[0]] + this.translit[tutor.middle_name.toLowerCase()[0]]\r\n            login\r\n\r\n        this.generatePassword = () ->\r\n            Math.floor(10000000+Math.random()*89999999)\r\n        this\r\n","angular.module 'Egerep'\r\n    .service 'UserService', (User, $rootScope, $timeout)->\r\n        # load all users\r\n        this.users = User.query()\r\n\r\n        # logged user\r\n        $timeout =>\r\n            this.current_user = $rootScope.$$childTail.user\r\n\r\n        # system user\r\n        system_user =\r\n            color: '#999999'\r\n            login: 'system'\r\n            id: 0\r\n            banned: 0\r\n\r\n        this.get = (user_id) ->\r\n            this.getUser(user_id)\r\n\r\n        this.getUser = (user_id) ->\r\n            _.findWhere(this.users, {id: parseInt(user_id)}) or system_user\r\n\r\n        this.getLogin = (user_id) ->\r\n            this.getUser(parseInt(user_id)).login\r\n\r\n        this.getColor = (user_id) ->\r\n            this.getUser(parseInt(user_id)).color\r\n\r\n        this.getWithSystem = (only_active = true) ->\r\n            users = this.getAll(only_active)\r\n            users.unshift system_user\r\n            users\r\n\r\n        this.getAll = (only_active = true) ->\r\n\r\n            if only_active\r\n                _.where(this.users, {banned: 0})\r\n            else\r\n                this.users\r\n\r\n        this.toggle = (entity, user_id, Resource = false) ->\r\n            new_user_id = if entity[user_id] then 0 else this.current_user.id\r\n\r\n            if Resource\r\n                Resource.update\r\n                    id: entity.id\r\n                    \"#{user_id}\": new_user_id\r\n                , ->\r\n                    entity[user_id] = new_user_id\r\n            else\r\n                entity[user_id] = new_user_id\r\n\r\n        this.getBannedUsers = ->\r\n            _.where this.users, {banned : 1}\r\n\r\n        this\r\n"],"sourceRoot":"/source/"}