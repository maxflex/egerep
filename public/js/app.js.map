{"version":3,"sources":["app.coffee","controllers/_template.coffee","controllers/accounts.coffee","controllers/add-to-list.coffee","controllers/archives.coffee","controllers/attachment.coffee","controllers/calls.coffee","controllers/clients.coffee","controllers/contract.coffee","controllers/debt.coffee","controllers/empty.coffee","controllers/graph.coffee","controllers/login.coffee","controllers/logs.coffee","controllers/notifications.coffee","controllers/periods.coffee","controllers/requests.coffee","controllers/reviews.coffee"],"names":[],"mappings":"AAAA;AAAA,MAAA;;EAAA,OAAO,CAAC,MAAR,CAAe,QAAf,EAAyB,CAAC,YAAD,EAAe,YAAf,EAA6B,YAA7B,EAA2C,OAA3C,EAAoD,WAApD,EAAiE,aAAjE,EAAgF,cAAhF,EAAgG,eAAhG,EAAiH,cAAjH,CAAzB,CACI,CAAC,MADL,CACY;IACJ,kBADI,EAEJ,SAAC,gBAAD;aACI,gBAAgB,CAAC,0BAAjB,CAA4C,+CAA5C;IADJ,CAFI;GADZ,CAMI,CAAC,MANL,CAMY,KANZ,EAMmB,SAAA;WACX,SAAC,KAAD,EAAQ,QAAR,EAAkB,GAAlB,EAAuB,OAAvB,EAAqC,IAArC;AACI,UAAA;;QADmB,UAAU;;;QAAI,OAAO;;MACxC,IAAkB,CAAC,KAAD,IAAU,KAAA,KAAS,EAArC;AAAA,eAAO,QAAP;;MACA,GAAA,GAAM,QAAA,CAAS,GAAT,EAAc,EAAd;MACN,IAAgB,CAAC,GAAjB;AAAA,eAAO,MAAP;;MACA,IAAgB,KAAK,CAAC,MAAN,IAAgB,GAAhC;AAAA,eAAO,MAAP;;MACA,KAAA,GAAQ,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,GAAhB;MACR,IAAG,QAAH;QACI,SAAA,GAAY,KAAK,CAAC,WAAN,CAAkB,GAAlB;QACZ,IAAG,SAAA,KAAa,CAAC,CAAjB;UAEI,IAAG,KAAK,CAAC,MAAN,CAAa,SAAA,GAAY,CAAzB,CAAA,KAA+B,GAA/B,IAAsC,KAAK,CAAC,MAAN,CAAa,SAAA,GAAY,CAAzB,CAAA,KAA+B,GAAxE;YACI,SAAA,GAAY,SAAA,GAAY,EAD5B;;UAEA,KAAA,GAAQ,KAAK,CAAC,MAAN,CAAa,CAAb,EAAgB,SAAhB,EAJZ;SAFJ;;aAOA,KAAA,GAAQ;IAbZ;EADW,CANnB,CAqBI,CAAC,MArBL,CAqBY,UArBZ,EAqBwB,SAAA;WAChB,SAAC,IAAD;MACI,IAAG,IAAA,GAAO,CAAV;eAAiB,KAAjB;OAAA,MAAA;eAA2B,KAA3B;;IADJ;EADgB,CArBxB,CAwBI,CAAC,GAxBL,CAwBS,SAAC,UAAD,EAAa,EAAb,EAAiB,aAAjB;IACD,UAAU,CAAC,OAAX,GAAqB;IAErB,aAAa,CAAC,IAAd,CAAmB,iBAAnB,EAAsC,SAAC,IAAD;AAClC,UAAA;MAAA,aAAA,GAAgB,CAAA,CAAE,gBAAF;MAChB,eAAA,GAAkB,CAAA,CAAE,kBAAF;MAClB,aAAA,GAAgB;MAChB,eAAe,CAAC,WAAhB,CAA4B,cAA5B,CAA2C,CAAC,WAA5C,CAAwD,aAAxD,CAAsE,CAAC,GAAvE,CAA2E,SAA3E,EAAsF,CAAtF;MACA,IAAG,IAAI,CAAC,QAAD,CAAP;QACI,aAAa,CAAC,IAAd,CAAmB,QAAA,CAAS,aAAa,CAAC,IAAd,CAAA,CAAT,CAAA,GAAiC,CAApD;QACA,aAAa,CAAC,OAAd,CAAsB;UAAC,kBAAA,EAAoB,SAArB;SAAtB,EAAuD,aAAA,GAAgB,CAAvE,CAAyE,CAAC,OAA1E,CAAkF;UAAC,kBAAA,EAAoB,MAArB;SAAlF,EAAgH,aAAA,GAAgB,CAAhI;eACA,eAAe,CAAC,IAAhB,CAAqB,IAArB,CAA0B,CAAC,QAA3B,CAAoC,cAApC,CAAmD,CAAC,OAApD,CAA4D;UAAC,OAAA,EAAS,CAAV;SAA5D,EAA0E,aAA1E,EAHJ;OAAA,MAAA;QAKI,aAAa,CAAC,IAAd,CAAmB,QAAA,CAAS,aAAa,CAAC,IAAd,CAAA,CAAT,CAAA,GAAiC,CAApD;QACA,aAAa,CAAC,OAAd,CAAsB;UAAC,kBAAA,EAAoB,SAArB;SAAtB,EAAuD,aAAA,GAAgB,CAAvE,CAAyE,CAAC,OAA1E,CAAkF;UAAC,kBAAA,EAAoB,MAArB;SAAlF,EAAgH,aAAA,GAAgB,CAAhI;eACA,eAAe,CAAC,IAAhB,CAAqB,IAArB,CAA0B,CAAC,QAA3B,CAAoC,aAApC,CAAkD,CAAC,OAAnD,CAA2D;UAAC,OAAA,EAAS,CAAV;SAA3D,EAAyE,aAAzE,EAPJ;;IALkC,CAAtC;IAcA,aAAa,CAAC,IAAd,CAAmB,wBAAnB,EAA6C,SAAC,IAAD;AACzC,UAAA;MAAA,gBAAA,GAAqB,CAAA,CAAE,mBAAF;MACrB,kBAAA,GAAqB,CAAA,CAAE,qBAAF;MACrB,aAAA,GAAgB;MAChB,kBAAkB,CAAC,WAAnB,CAA+B,cAA/B,CAA8C,CAAC,WAA/C,CAA2D,aAA3D,CAAyE,CAAC,GAA1E,CAA8E,SAA9E,EAAyF,CAAzF;MACA,IAAG,IAAI,CAAC,QAAD,CAAP;QACI,gBAAgB,CAAC,IAAjB,CAAsB,QAAA,CAAS,gBAAgB,CAAC,IAAjB,CAAA,CAAT,CAAA,GAAoC,CAA1D;QACA,gBAAgB,CAAC,OAAjB,CAAyB;UAAC,kBAAA,EAAoB,SAArB;SAAzB,EAA0D,aAAA,GAAgB,CAA1E,CAA4E,CAAC,OAA7E,CAAqF;UAAC,kBAAA,EAAoB,MAArB;SAArF,EAAmH,aAAA,GAAgB,CAAnI;eACA,kBAAkB,CAAC,IAAnB,CAAwB,IAAxB,CAA6B,CAAC,QAA9B,CAAuC,aAAvC,CAAqD,CAAC,OAAtD,CAA8D;UAAC,OAAA,EAAS,CAAV;SAA9D,EAA4E,aAA5E,EAHJ;OAAA,MAAA;QAKI,gBAAgB,CAAC,IAAjB,CAAsB,QAAA,CAAS,gBAAgB,CAAC,IAAjB,CAAA,CAAT,CAAA,GAAoC,CAA1D;QACA,gBAAgB,CAAC,OAAjB,CAAyB;UAAC,kBAAA,EAAoB,SAArB;SAAzB,EAA0D,aAAA,GAAgB,CAA1E,CAA4E,CAAC,OAA7E,CAAqF;UAAC,kBAAA,EAAoB,MAArB;SAArF,EAAmH,aAAA,GAAgB,CAAnI;eACA,kBAAkB,CAAC,IAAnB,CAAwB,IAAxB,CAA6B,CAAC,QAA9B,CAAuC,cAAvC,CAAsD,CAAC,OAAvD,CAA+D;UAAC,OAAA,EAAS,CAAV;SAA/D,EAA6E,aAA7E,EAPJ;;IALyC,CAA7C;IAeA,UAAU,CAAC,UAAX,GAAwB,EAAE,CAAC,KAAH,CAAA;IAExB,UAAU,CAAC,YAAX,GAA0B,SAAC,YAAD;;QAAC,eAAe;;MACtC,UAAU,CAAC,gBAAX,GAA8B;MAC9B,UAAU,CAAC,UAAU,CAAC,OAAtB,CAA8B,IAA9B;MACA,IAAiB,YAAjB;eAAA,WAAA,CAAA,EAAA;;IAHsB;IAK1B,UAAU,CAAC,KAAX,GAAmB,SAAC,GAAD,EAAM,GAAN,EAAW,IAAX;AACjB,UAAA;MAAA,IAAA,GAAO,IAAA,IAAQ;MACf,KAAA,GAAQ;MACR,CAAA,GAAI;AACJ,aAAM,CAAA,IAAK,GAAX;QACE,KAAK,CAAC,IAAN,CAAW,CAAX;QACA,CAAA,IAAK;MAFP;aAGA;IAPiB;IAYnB,UAAU,CAAC,UAAX,GAAwB,SAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,WAA1B,EAA4C,gBAA5C,EAAmE,SAAnE;AAGpB,UAAA;;QAH8C,cAAc;;;QAAI,mBAAmB;;;QAAI,YAAY;;MAGnG,IAAU,CAAI,SAAJ,IAAkB,CAAC,OAAA,QAAA,CAAS,OAAQ,CAAA,MAAA,CAAjB,CAAA,EAAA,aAA6B,WAA7B,EAAA,GAAA,MAAA,CAAA,IAA4C,CAAC,KAAA,CAAM,QAAA,CAAS,OAAQ,CAAA,MAAA,CAAjB,CAAN,CAAA,IAAqC,WAAW,CAAC,OAAZ,CAAoB,OAAQ,CAAA,MAAA,CAA5B,CAAA,KAA0C,CAAC,CAAjF,CAA7C,CAAlB,IAAwJ,QAAA,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAA5B,EAAA,aAAsC,gBAAtC,EAAA,IAAA,KAAA,CAAlK;AAAA,eAAA;;MAEA,QAAA,GAAW,MAAM,CAAC,IAAP,CAAY,MAAZ;MACX,SAAA,GAAY,QAAQ,CAAC,OAAT,CAAiB,OAAQ,CAAA,MAAA,CAAO,CAAC,QAAhB,CAAA,CAAjB;MACZ,SAAA;MACA,IAAiB,SAAA,GAAY,CAAC,QAAQ,CAAC,MAAT,GAAkB,CAAnB,CAA7B;QAAA,SAAA,GAAY,EAAZ;;MACA,OAAQ,CAAA,MAAA,CAAR,GAAkB,QAAS,CAAA,SAAA;MAE3B,IAAuF,CAAC,CAAC,KAAA,CAAM,QAAA,CAAS,OAAQ,CAAA,MAAA,CAAjB,CAAN,CAAA,IAAqC,WAAW,CAAC,OAAZ,CAAoB,OAAQ,CAAA,MAAA,CAA5B,CAAA,KAA0C,CAAC,CAAjF,CAAA,IAAuF,aAAa,WAAb,EAAA,SAAA,MAAxF,CAAA,IAAsH,QAAA,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,EAA5B,EAAA,aAAsC,gBAAtC,EAAA,IAAA,KAAA,CAA7M;eAAA,UAAU,CAAC,UAAX,CAAsB,OAAtB,EAA+B,MAA/B,EAAuC,MAAvC,EAA+C,WAA/C,EAA4D,gBAA5D,EAA8E,IAA9E,EAAA;;IAXoB;IAexB,UAAU,CAAC,gBAAX,GAA8B,SAAC,OAAD,EAAU,MAAV,EAAkB,MAAlB,EAA0B,QAA1B,EAAoC,WAApC,EAAsD,iBAAtD,EAA8E,iBAA9E;AAC1B,UAAA;;QAD8D,cAAc;;;QAAI,oBAAoB;;;QAAI,oBAAoB;;MAC5H,IAAU,OAAA,OAAQ,CAAA,MAAA,CAAR,EAAA,aAAmB,iBAAnB,EAAA,GAAA,MAAA,CAAA,IAAyC,iBAAnD;AAAA,eAAA;;MAEA,QAAA,GAAW,MAAM,CAAC,IAAP,CAAY,MAAZ;MACX,SAAA,GAAY,QAAQ,CAAC,OAAT,CAAiB,OAAQ,CAAA,MAAA,CAAO,CAAC,QAAhB,CAAA,CAAjB;AAEZ,aAAA,IAAA;QACI,SAAA;QACA,IAAiB,SAAA,GAAY,CAAC,QAAQ,CAAC,MAAT,GAAkB,CAAnB,CAA7B;UAAA,SAAA,GAAY,EAAZ;;QACA,KAAA,GAAW,KAAA,CAAM,QAAA,CAAS,OAAQ,CAAA,MAAA,CAAjB,CAAN,CAAH,GAAuC,QAAS,CAAA,SAAA,CAAhD,GAAgE;QACxE,IAAA,CAAA,CAAO,aAAS,WAAT,EAAA,KAAA,MAAA,IAAwB,aAAS,iBAAT,EAAA,KAAA,MAA/B,CAAA;AACI,gBADJ;;MAJJ;MAOA,WAAA,GAAc;QAAC,EAAA,EAAI,OAAO,CAAC,EAAb;;MACd,WAAY,CAAA,MAAA,CAAZ,GAAsB;aAEtB,QAAQ,CAAC,MAAT,CAAgB,WAAhB,EAA6B,SAAA;eACzB,OAAQ,CAAA,MAAA,CAAR,GAAkB;MADO,CAA7B;IAhB0B;IAmB9B,UAAU,CAAC,cAAX,GAA4B,SAAC,IAAD;aACxB,MAAA,CAAO,IAAP,CAAY,CAAC,MAAb,CAAoB,kBAApB;IADwB;IAG5B,UAAU,CAAC,UAAX,GAAwB,SAAC,IAAD,EAAO,SAAP;;QAAO,YAAY;;MACvC,IAAa,CAAI,IAAjB;AAAA,eAAO,GAAP;;aACA,MAAA,CAAO,IAAP,CAAY,CAAC,MAAb,CAAoB,UAAA,GAAa,CAAI,SAAH,GAAkB,IAAlB,GAA4B,EAA7B,CAAjC;IAFoB;IAIxB,UAAU,CAAC,eAAX,GAA6B,SAAC,SAAD,EAAY,SAAZ;;QAAY,YAAY;;MACjD,IAAoC,OAAO,SAAP,KAAoB,QAAxD;QAAA,SAAA,GAAY,CAAC,CAAC,SAAA,GAAY,KAAb,EAAb;;MACA,IAAa,CAAI,SAAjB;AAAA,eAAO,GAAP;;aACA,MAAA,CAAO,SAAP,CAAiB,CAAC,MAAlB,CAAyB,kBAAA,GAAqB,CAAI,SAAH,GAAkB,IAAlB,GAA4B,EAA7B,CAA9C;IAHyB;IAK7B,UAAU,CAAC,MAAX,GAAoB,SAAC,EAAD;MAChB,CAAA,CAAE,GAAA,GAAI,EAAN,CAAW,CAAC,KAAZ,CAAkB,MAAlB;IADgB;IAIpB,UAAU,CAAC,WAAX,GAAyB,SAAC,EAAD;MACrB,CAAA,CAAE,GAAA,GAAI,EAAN,CAAW,CAAC,KAAZ,CAAkB,MAAlB;IADqB;IAIzB,UAAU,CAAC,SAAX,GAAuB,SAAA;MACnB,SAAA,CAAA;aACA,UAAU,CAAC,MAAX,GAAoB;IAFD;IAIvB,UAAU,CAAC,OAAX,GAAqB,SAAA;MACjB,OAAA,CAAA;aACA,UAAU,CAAC,MAAX,GAAoB;IAFH;IAIrB,UAAU,CAAC,QAAX,GAAsB,SAAC,MAAD,EAAS,EAAT;aAClB,CAAC,CAAC,SAAF,CAAY,MAAZ,EAAoB;QAAC,EAAA,EAAI,QAAA,CAAS,EAAT,CAAL;OAApB;IADkB;IAItB,UAAU,CAAC,KAAX,GAAmB,SAAC,KAAD,EAAQ,IAAR,EAAc,KAAd;AACf,UAAA;;QAD6B,QAAQ;;MACrC,GAAA,GAAM;MACN,CAAC,CAAC,IAAF,CAAO,KAAP,EAAc,SAAC,KAAD,EAAQ,KAAR;AACV,YAAA;QAAA,CAAA,GAAI,KAAM,CAAA,IAAA;QACV,IAAgB,KAAhB;UAAA,CAAA,GAAI,CAAE,CAAA,KAAA,EAAN;;eACA,GAAA,IAAO;MAHG,CAAd;aAIA;IANe;IAQnB,UAAU,CAAC,IAAX,GAAkB,SAAC,OAAD,EAAU,IAAV;aACd,OAAQ,CAAA,IAAA,CAAR,GAAgB,CAAC,CAAC,CAAC,OAAQ,CAAA,IAAA,CAAV;IADH;WAGlB,UAAU,CAAC,WAAX,GAAyB,SAAC,KAAD;MACvB,IAAG,KAAA,GAAQ,IAAX;eACE,KAAA,GAAQ,SADV;OAAA,MAEK,IAAG,KAAA,GAAQ,OAAX;eACH,CAAC,KAAA,GAAQ,IAAT,CAAc,CAAC,OAAf,CAAuB,CAAvB,CAAA,GAA4B,MADzB;OAAA,MAEA,IAAG,KAAA,GAAQ,UAAX;eACH,CAAC,KAAA,GAAQ,OAAT,CAAiB,CAAC,OAAlB,CAA0B,CAA1B,CAAA,GAA+B,MAD5B;OAAA,MAAA;eAGH,CAAC,KAAA,GAAQ,UAAT,CAAoB,CAAC,OAArB,CAA6B,CAA7B,CAAA,GAAkC,MAH/B;;IALkB;EAhIxB,CAxBT;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAGI,CAAC,OAHL,CAGa,OAHb,EAGsB,SAAC,SAAD;WACd,SAAA,CAAU,gBAAV,EAA4B,EAA5B,EACI;MAAA,MAAA,EACI;QAAA,MAAA,EAAQ,KAAR;OADJ;KADJ;EADc,CAHtB,CAaI,CAAC,UAbL,CAagB,aAbhB,EAa+B,SAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB;WACvB,MAAM,CAAC,MAAP,GAAgB,KAAK,CAAC,KAAN,CAAA;EADO,CAb/B,CAqBI,CAAC,UArBL,CAqBgB,YArBhB,EAqB8B,SAAC,MAAD,EAAS,QAAT,EAAmB,SAAnB,EAA8B,KAA9B;WAEtB,QAAA,CAAS,SAAA;MACL,IAA4C,MAAM,CAAC,EAAP,GAAY,CAAxD;eAAA,MAAM,CAAC,KAAP,GAAe,KAAK,CAAC,GAAN,CAAU;UAAC,EAAA,EAAI,MAAM,CAAC,EAAZ;SAAV,EAAf;;IADK,CAAT;EAFsB,CArB9B;AAAA;;;ACAA;EAAA,OAAO,CAAC,MAAR,CAAe,QAAf,CACI,CAAC,UADL,CACgB,oBADhB,EACsC,SAAC,MAAD,EAAS,MAAT,EAAiB,UAAjB;AAC9B,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;aAC5B,aAAA,CAAA;IAD4B,CAAhC;WAIA,aAAA,GAAgB,SAAA;MACZ,CAAA,CAAE,mBAAF,CAAsB,CAAC,SAAvB,CACI;QAAA,MAAA,EAAQ,OAAR;QACA,MAAA,EAAQ,SADR;QAEA,QAAA,EAAU,MAFV;QAGA,WAAA,EAAa,aAHb;QAIA,KAAA,EAAO,SAAC,KAAD,EAAQ,EAAR;iBACH,CAAA,CAAE,IAAF,CAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,QAA1B;QADG,CAJP;QAMA,IAAA,EAAM,SAAC,KAAD,EAAQ,EAAR;iBACF,CAAA,CAAE,IAAF,CAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,SAA1B;QADE,CANN;OADJ;aAUA,CAAA,CAAE,mBAAF,CAAsB,CAAC,SAAvB,CACI;QAAA,SAAA,EAAW,SAAX;QACA,UAAA,EAAY,wBADZ;QAEA,IAAA,EAAM,SAAC,KAAD,EAAQ,EAAR;AAEF,cAAA;UAAA,SAAA,GAAiB,CAAA,CAAE,EAAE,CAAC,SAAL,CAAe,CAAC,IAAhB,CAAqB,IAArB;UACjB,MAAA,GAAiB,MAAM,CAAC,QAAP,CAAgB,MAAM,CAAC,OAAvB,EAAgC,SAAhC;UACjB,IAAG,MAAM,CAAC,aAAP,KAA0B,UAA7B;YACI,MAAM,CAAC,OAAP,GAAiB,UAAA,CAAW,MAAM,CAAC,OAAlB,EAA2B,SAA3B;YAEjB,UAAU,CAAC,MAAX,CACI;cAAA,EAAA,EAAI,MAAM,CAAC,aAAX;cACA,IAAA,EAAM,CADN;aADJ;YAIA,MAAM,CAAC,qBAAP,GAPJ;;iBAQA,MAAM,CAAC,MAAP,CAAA;QAZE,CAFN;OADJ;IAXY;EANc,CADtC,CAkCI,CAAC,UAlCL,CAkCgB,cAlChB,EAkCgC,SAAC,UAAD,EAAa,MAAb,EAAqB,KAArB,EAA4B,QAA5B,EAAsC,OAAtC,EAA+C,cAA/C,EAA+D,OAA/D,EAAwE,MAAxE,EAAgF,UAAhF,EAA4F,eAA5F,EAA6G,gBAA7G,EAA+H,QAA/H,EAAyI,YAAzI,EAAuJ,oBAAvJ,EAA6K,SAA7K,EAAwL,KAAxL,EAA+L,KAA/L,EAAsM,aAAtM,EAAqN,OAArN;AACxB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,MAAM,CAAC,aAAP,GAAwB;IACxB,MAAM,CAAC,cAAP,GAAwB;IACxB,MAAM,CAAC,aAAP,GAAwB;IAExB,MAAM,CAAC,aAAP,GAAuB,SAAC,KAAD,EAAQ,GAAR;AAEnB,UAAA;MAAA,SAAA,GAAY,CAAC,IAAD,EAAO,OAAP,EAAgB,SAAhB;MACZ,OAAA,GAAU;AACV,WAAA,2CAAA;;QACK,OAAQ,CAAA,QAAA,CAAR,GAAoB,MAAM,CAAC,gBAAgB,CAAC,OAAQ,CAAA,QAAA;AADzD;MAEA,UAAU,CAAC,UAAX,CAAsB,OAAtB,EAA+B,KAA/B,EAAsC,GAAtC;aACA,MAAM,CAAC,OAAO,CAAC,MAAf,CAAsB,OAAtB,EACE,SAAC,QAAD;eACE,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,gBAAgB,CAAC,OAApC,EAA6C,OAA7C;MADF,CADF;IAPmB;IAWvB,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;aAC5B,MAAM,CAAC,QAAP,CAAA;IAD4B,CAAhC;IAIA,MAAM,CAAC,QAAP,GAAkB,SAAC,CAAD,EAAI,CAAJ;AACd,UAAA;MAAA,IAAY,CAAA,KAAK,CAAjB;AAAA,eAAO,EAAP;;MACA,KAAA,GAAQ;MACR,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,KAAK,CAAC,aAApB,EAAmC,SAAC,CAAD,EAAI,OAAJ;QAC/B,IAAU,CAAA,IAAK,CAAf;AAAA,iBAAA;;eACA,KAAA,IAAS,MAAM,CAAC,QAAP,CAAgB,CAAhB,CAAkB,CAAC;MAFG,CAAnC;aAGA,KAAA,GAAQ;IANM;IAQlB,MAAM,CAAC,QAAP,GAAkB,SAAC,IAAD;MACd,UAAU,CAAC,gBAAX,GAA8B;aAC9B,KAAK,CAAC,GAAN,CAAU,CAAA,eAAA,GAAgB,MAAM,CAAC,QAAvB,CAAA,GAAoC,CAAI,MAAM,CAAC,cAAV,GAA8B,cAAA,GAAe,MAAM,CAAC,UAApD,GAAsE,EAAvE,CAA9C,CACA,CAAC,OADD,CACS,SAAC,QAAD;QACD,UAAA,CAAW,QAAX;eACA,MAAM,CAAC,cAAP;MAFC,CADT;IAFc;IAOlB,UAAA,GAAa,SAAC,IAAD;MAET,IAAG,IAAI,CAAC,OAAL,KAAgB,IAAnB;QACI,MAAM,CAAC,UAAP,GAAoB,MAAM,CAAC;QAC3B,MAAM,CAAC,aAAP,GAAuB,KAF3B;OAAA,MAAA;QAII,IAAG,CAAI,MAAM,CAAC,cAAd;UACI,MAAM,CAAC,KAAP,GAAe,KADnB;SAAA,MAAA;UAGI,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,OAA3B,CAAmC,IAAI,CAAC,OAAxC;UACA,MAAM,CAAC,UAAP,GAAoB,MAAA,CAAO,IAAI,CAAC,OAAO,CAAC,QAApB,CAA6B,CAAC,QAA9B,CAAuC,CAAvC,EAA0C,MAA1C,CAAiD,CAAC,MAAlD,CAAyD,YAAzD;UACpB,MAAM,CAAC,IAAP,GAAoB,IAAI,CAAC;UACzB,IAAG,IAAI,CAAC,gBAAgB,CAAC,MAAzB;YACI,MAAM,CAAC,KAAK,CAAC,aAAb,GAA6B,IAAI,CAAC,gBAAgB,CAAC,MAAtB,CAA6B,MAAM,CAAC,KAAK,CAAC,aAA1C,EADjC;WANJ;SAJJ;;MAYA,UAAU,CAAC,gBAAX,GAA8B;MAC9B,CAAA,CAAE,iBAAF,CAAoB,CAAC,kBAArB,CAAwC,SAAxC;aACA,QAAA,CAAS,SAAA;QACL,CAAA,CAAE,iBAAF,CAAoB,CAAC,kBAArB,CAAA;QACA,aAAA,CAAA;eACA,CAAA,CAAE,qBAAF,CAAwB,CAAC,MAAzB,CAAgC,SAAA;iBAC5B,CAAA,CAAE,MAAF,CAAS,CAAC,OAAV,CAAkB,2BAAlB;QAD4B,CAAhC;MAHK,CAAT;IAhBS;IAsBb,mBAAA,GAAsB,SAAC,KAAD;MAClB,IAAG,KAAA,GAAQ,CAAX;eACI,MAAA,CAAO,MAAM,CAAC,KAAK,CAAC,aAAc,CAAA,KAAA,GAAQ,CAAR,CAAU,CAAC,QAA7C,CAAsD,CAAC,GAAvD,CAA2D,CAA3D,EAA8D,MAA9D,CAAqE,CAAC,MAAtE,CAAA,EADJ;OAAA,MAAA;eAGQ,IAAA,IAAA,CAAK,MAAM,CAAC,UAAZ,EAHR;;IADkB;IAMtB,iBAAA,GAAoB,SAAC,KAAD;MAChB,IAAG,CAAC,KAAA,GAAQ,CAAT,CAAA,KAAe,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAA7C;eACI,GADJ;OAAA,MAAA;eAGI,MAAA,CAAO,MAAM,CAAC,KAAK,CAAC,aAAc,CAAA,KAAA,GAAQ,CAAR,CAAU,CAAC,QAA7C,CAAsD,CAAC,QAAvD,CAAgE,CAAhE,EAAmE,MAAnE,CAA0E,CAAC,MAA3E,CAAA,EAHJ;;IADgB;IAMpB,MAAM,CAAC,MAAP,GAAgB,SAAC,IAAD;aACZ,MAAA,CAAO,IAAP,CAAY,CAAC,GAAb,CAAA;IADY;IAGhB,MAAM,CAAC,WAAP,GAAqB,SAAC,MAAD;MACjB,MAAM,CAAC,gBAAP,GAA0B;MAC1B,CAAA,CAAE,eAAF,CAAkB,CAAC,KAAnB,CAAyB,MAAzB;MAEA,MAAM,CAAC,eAAP,GAAyB;aAEzB,UAAU,CAAC,GAAX,CAAe;QAAC,EAAA,EAAI,MAAM,CAAC,aAAZ;OAAf,EAA2C,SAAC,QAAD;eACvC,MAAM,CAAC,gBAAP,GAA0B;MADa,CAA3C;IANiB;IASrB,MAAM,CAAC,gBAAP,GAA0B,SAAC,KAAD;MACtB,CAAA,CAAE,kBAAF,CAAqB,CAAC,UAAtB,CAAiC,SAAjC;MACA,CAAA,CAAE,kBAAF,CAAqB,CAAC,UAAtB,CACI;QAAA,QAAA,EAAW,IAAX;QACA,SAAA,EAAY,IADZ;QAEA,WAAA,EAAc,aAFd;QAGA,SAAA,EAAc,mBAAA,CAAoB,KAApB,CAHd;QAIA,OAAA,EAAc,iBAAA,CAAkB,KAAlB,CAJd;OADJ;MAOA,MAAM,CAAC,gBAAP,GAA0B,MAAM,CAAC,KAAK,CAAC,aAAc,CAAA,KAAA;MACrD,MAAM,CAAC,eAAP,GAAyB,MAAM,CAAC,UAAP,CAAkB,MAAM,CAAC,gBAAgB,CAAC,QAA1C,EAAoD,IAApD;aACzB,MAAM,CAAC,MAAP,CAAc,qBAAd;IAXsB;IAa1B,MAAM,CAAC,UAAP,GAAoB,SAAA;MAChB,MAAM,CAAC,gBAAgB,CAAC,QAAxB,GAAmC,WAAA,CAAY,MAAM,CAAC,eAAnB;MACnC,OAAO,CAAC,MAAR,CACI;QAAA,EAAA,EAAI,MAAM,CAAC,gBAAgB,CAAC,EAA5B;QACA,QAAA,EAAU,MAAM,CAAC,gBAAgB,CAAC,QADlC;OADJ;aAKA,MAAM,CAAC,WAAP,CAAmB,qBAAnB;IAPgB;IASpB,MAAM,CAAC,MAAP,GAAgB,SAAC,OAAD;aACZ,OAAO,CAAC,OAAR,CAAgB,kBAAhB,EAAoC,SAAC,MAAD;QAChC,IAAG,MAAA,KAAU,IAAb;iBACI,OAAO,CAAC,QAAD,CAAP,CAAe;YAAC,EAAA,EAAI,OAAO,CAAC,EAAb;WAAf,EAAiC,SAAA;mBAC7B,MAAM,CAAC,KAAK,CAAC,aAAb,GAA6B,UAAA,CAAW,MAAM,CAAC,KAAK,CAAC,aAAxB,EAAuC,OAAO,CAAC,EAA/C;UADA,CAAjC,EADJ;;MADgC,CAApC;IADY;IAOhB,MAAM,CAAC,IAAP,GAAc,SAAA;aACV,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,KAAK,CAAC,aAApB,EAAmC,SAAC,KAAD,EAAQ,OAAR;eAC/B,OAAO,CAAC,MAAR,CAAe,OAAf;MAD+B,CAAnC;IADU;IAId,MAAM,CAAC,YAAP,GAAsB,SAAA;AAClB,UAAA;MAAA,KAAA,GAAQ;MACR,YAAA,GAAe,MAAA,CAAA,CAAQ,CAAC,QAAT,CAAkB,EAAlB,EAAsB,MAAtB,CAA6B,CAAC,MAA9B,CAAqC,YAArC;AACf,aAAM,YAAA,IAAgB,MAAA,CAAA,CAAQ,CAAC,MAAT,CAAgB,YAAhB,CAAtB;QACI,KAAK,CAAC,IAAN,CAAW,YAAX;QACA,YAAA,GAAe,MAAA,CAAO,YAAP,CAAoB,CAAC,GAArB,CAAyB,CAAzB,EAA4B,MAA5B,CAAmC,CAAC,MAApC,CAA2C,YAA3C;MAFnB;aAGA;IANkB;IAStB,MAAM,CAAC,QAAP,GAAkB,SAAC,KAAD;AACd,UAAA;MAAA,KAAA,GAAQ;MAGR,IAAG,CAAI,KAAP;QACI,YAAA,GAAe,MAAM,CAAC,WAD1B;OAAA,MAAA;QAGI,YAAA,GAAe,MAAA,CAAO,MAAM,CAAC,KAAK,CAAC,aAAc,CAAA,KAAA,GAAQ,CAAR,CAAU,CAAC,QAA7C,CAAsD,CAAC,GAAvD,CAA2D,CAA3D,EAA8D,MAA9D,CAAqE,CAAC,MAAtE,CAA6E,YAA7E,EAHnB;;AAKA,aAAO,YAAA,IAAgB,MAAM,CAAC,KAAK,CAAC,aAAc,CAAA,KAAA,CAAM,CAAC,QAAzD;QACI,KAAK,CAAC,IAAN,CAAW,YAAX;QACA,YAAA,GAAe,MAAA,CAAO,YAAP,CAAoB,CAAC,GAArB,CAAyB,CAAzB,EAA4B,MAA5B,CAAmC,CAAC,MAApC,CAA2C,YAA3C;MAFnB;aAGA;IAZc;IAelB,oBAAA,GAAuB,SAAA;AACnB,UAAA;MAAA,IAAG,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAA3B,GAAoC,CAAvC;QACI,QAAA,GAAW,MAAM,CAAC,KAAK,CAAC,aAAc,CAAA,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,MAA3B,GAAoC,CAApC,CAAsC,CAAC;eAC7E,MAAA,CAAO,QAAP,CAAgB,CAAC,GAAjB,CAAqB,CAArB,EAAwB,MAAxB,CAA+B,CAAC,MAAhC,CAAA,EAFJ;OAAA,MAAA;eAIQ,IAAA,IAAA,CAAK,MAAM,CAAC,UAAZ,EAJR;;IADmB;IAOvB,MAAM,CAAC,gBAAP,GAA0B,SAAA;MACtB,MAAM,CAAC,oBAAP,GAA8B;MAE9B,CAAA,CAAE,WAAF,CAAc,CAAC,UAAf,CAA0B,SAA1B;MACA,CAAA,CAAE,WAAF,CAAc,CAAC,UAAf,CACI;QAAA,QAAA,EAAW,IAAX;QACA,SAAA,EAAc,oBAAA,CAAA,CADd;QAEA,SAAA,EAAY,IAFZ;QAGA,WAAA,EAAc,aAHd;OADJ;aAMA,MAAM,CAAC,MAAP,CAAc,aAAd;IAVsB;IAY1B,MAAM,CAAC,UAAP,GAAoB,SAAA;aAChB,OAAO,CAAC,IAAR,CACI;QAAA,QAAA,EAAU,WAAA,CAAY,MAAM,CAAC,oBAAnB,CAAV;QACA,QAAA,EAAU,MAAM,CAAC,KAAK,CAAC,EADvB;OADJ,EAGE,SAAC,WAAD;QACE,MAAM,CAAC,KAAK,CAAC,aAAa,CAAC,IAA3B,CAAgC,WAAhC;eACA,MAAM,CAAC,WAAP,CAAmB,aAAnB;MAFF,CAHF;IADgB;IAQpB,aAAA,GAAgB,SAAC,GAAD;MACZ,IAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAA,KAAsB,CAAC,CAA1B;QACI,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAe,CAAA,CAAA;QACd,IAAG,GAAH;iBAAY,QAAA,CAAS,GAAT,EAAZ;SAAA,MAAA;iBAA+B,EAA/B;SAFX;OAAA,MAAA;AAII,eAAO,IAAI,CAAC,KAAL,CAAW,QAAA,CAAS,GAAT,CAAA,GAAgB,GAA3B,EAJX;;IADY;IAQhB,MAAM,CAAC,YAAP,GAAsB,SAAC,OAAD,EAAU,SAAV;AAClB,UAAA;MAAA,aAAA,GAAgB;MAChB,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,KAAK,CAAC,aAApB,EAAmC,SAAC,KAAD,EAAQ,OAAR;eAC/B,aAAA,IAAiB,MAAM,CAAC,aAAP,CAAqB,OAArB,EAA8B,SAA9B;MADc,CAAnC;aAEA,aAAA,IAAiB;IAJC;IAOtB,MAAM,CAAC,aAAP,GAAuB,SAAC,OAAD,EAAU,SAAV;AACnB,UAAA;MAAA,IAAe,CAAI,OAAO,CAAC,IAAK,CAAA,SAAA,CAAhC;AAAA,eAAO,KAAP;;MACA,aAAA,GAAgB;MAChB,CAAC,CAAC,IAAF,CAAO,OAAO,CAAC,IAAK,CAAA,SAAA,CAApB,EAAgC,SAAC,KAAD,EAAQ,KAAR;QAC5B,IAAmB,KAAnB;iBAAA,aAAA,GAAA;;MAD4B,CAAhC;aAEA,aAAA,IAAiB;IALE;IAQvB,MAAM,CAAC,eAAP,GAAyB,SAAC,OAAD;AACrB,UAAA;MAAA,gBAAA,GAAmB;MACnB,CAAC,CAAC,IAAF,CAAO,OAAO,CAAC,IAAf,EAAqB,SAAC,KAAD,EAAQ,YAAR;eACjB,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,SAAC,KAAD,EAAQ,GAAR;UACjB,IAA0C,GAAA,KAAS,EAAnD;mBAAA,gBAAA,IAAoB,aAAA,CAAc,GAAd,EAApB;;QADiB,CAArB;MADiB,CAArB;aAGA;IALqB;IAWzB,MAAM,CAAC,SAAP,GAAmB,SAAC,IAAD;MACf,CAAA,CAAE,MAAA,GAAS,IAAX,CAAgB,CAAC,QAAjB,CAA0B,UAA1B;IADe;IAGnB,MAAM,CAAC,WAAP,GAAqB,SAAC,IAAD;MACjB,CAAA,CAAE,MAAA,GAAS,IAAX,CAAgB,CAAC,WAAjB,CAA6B,UAA7B;IADiB;;AAKrB;;;IAIA,UAAA,GAAa,SAAC,CAAD,EAAI,CAAJ,EAAO,SAAP;AAET,UAAA;AAAA,cAAO,SAAP;AAAA,aACS,MADT;UACyB,CAAA;AAAhB;AADT,aAES,OAFT;UAEyB,CAAA;AAAhB;AAFT,aAGS,IAHT;UAGyB,CAAA,GAAI,MAAA,CAAO,CAAP,CAAS,CAAC,QAAV,CAAmB,MAAnB,EAA2B,CAA3B,CAA6B,CAAC,MAA9B,CAAqC,YAArC;AAApB;AAHT,aAIS,MAJT;UAIyB,CAAA,GAAI,MAAA,CAAO,CAAP,CAAS,CAAC,GAAV,CAAc,MAAd,EAAsB,CAAtB,CAAwB,CAAC,MAAzB,CAAgC,YAAhC;AAJ7B;MAOA,IAAU,CAAA,GAAI,CAAJ,IAAS,CAAI,CAAA,CAAE,KAAA,GAAQ,CAAR,GAAY,GAAZ,GAAkB,CAApB,CAAsB,CAAC,MAA9C;AAAA,eAAA;;MAGA,EAAA,GAAK,CAAA,CAAE,KAAA,GAAQ,CAAR,GAAY,GAAZ,GAAkB,CAApB;MAGL,IAAG,EAAE,CAAC,MAAN;QACI,MAAM,CAAC,KAAP,GAAe;QACf,EAAE,CAAC,KAAH,CAAA,EAFJ;OAAA,MAAA;QAII,UAAA,CAAW,CAAX,EAAc,CAAd,EAAiB,SAAjB,EAJJ;;IAfS;IAuBb,MAAM,CAAC,KAAP,GAAe;IACf,MAAM,CAAC,aAAP,GAAuB,SAAC,CAAD,EAAI,CAAJ,EAAO,KAAP,EAAc,YAAd,EAA4B,IAA5B;AAGnB,UAAA;MAAA,gBAAA,GAAmB,CAAA,CAAE,KAAA,GAAM,CAAN,GAAQ,GAAR,GAAW,CAAb;MAGnB,IAAG,gBAAgB,CAAC,GAAjB,CAAA,CAAA,KAA0B,GAA1B,IAAkC,gBAAgB,CAAC,GAAjB,CAAA,CAAsB,CAAC,MAA5D;AACI,eAAM,IAAN;UACI,CAAA,GAAI,MAAA,CAAO,CAAA,IAAK,CAAZ,CAAc,CAAC,QAAf,CAAwB,MAAxB,EAAgC,CAAhC,CAAkC,CAAC,MAAnC,CAA0C,YAA1C;UACJ,WAAA,GAAc,CAAA,CAAE,KAAA,GAAQ,CAAR,GAAY,GAAZ,GAAkB,CAApB;UACd,IAAS,CAAI,WAAW,CAAC,MAAzB;AAAA,kBAAA;;UAEA,IAAG,WAAW,CAAC,GAAZ,CAAA,CAAH;YAEI,KAAK,CAAC,cAAN,CAAA;YACA,YAAa,CAAA,IAAA,CAAb,GAAqB,WAAW,CAAC,GAAZ,CAAA;AACrB,kBAJJ;;QALJ,CADJ;;MAaA,IAAG,gBAAgB,CAAC,KAAjB,CAAA,CAAA,KAA4B,MAAM,CAAC,KAAtC;QACI,MAAM,CAAC,KAAP,GAAe,gBAAgB,CAAC,KAAjB,CAAA;AACf,eAFJ;;AAIA,cAAO,KAAK,CAAC,KAAb;AAAA,aAES,EAFT;iBAEiB,UAAA,CAAW,CAAX,EAAc,CAAd,EAAiB,MAAjB;AAFjB,aAIS,EAJT;iBAIiB,UAAA,CAAW,CAAX,EAAc,CAAd,EAAiB,IAAjB;AAJjB,aAMS,EANT;iBAMiB,UAAA,CAAW,CAAX,EAAc,CAAd,EAAiB,OAAjB;AANjB,aAQS,EART;AAAA,aAQa,EARb;iBAQqB,UAAA,CAAW,CAAX,EAAc,CAAd,EAAiB,MAAjB;AARrB;IAvBmB;WAmCvB,aAAA,GAAgB,SAAA;MACZ,CAAA,CAAE,mBAAF,CAAsB,CAAC,SAAvB,CACI;QAAA,MAAA,EAAQ,OAAR;QACA,MAAA,EAAQ,SADR;QAEA,QAAA,EAAU,MAFV;QAGA,WAAA,EAAa,aAHb;QAIA,KAAA,EAAO,SAAC,KAAD,EAAQ,EAAR;iBACH,CAAA,CAAE,IAAF,CAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,QAA1B;QADG,CAJP;QAMA,IAAA,EAAM,SAAC,KAAD,EAAQ,EAAR;iBACF,CAAA,CAAE,IAAF,CAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,SAA1B;QADE,CANN;OADJ;aAUA,CAAA,CAAE,mBAAF,CAAsB,CAAC,SAAvB,CACI;QAAA,SAAA,EAAW,SAAX;QACA,UAAA,EAAY,wBADZ;QAEA,IAAA,EAAM,SAAC,KAAD,EAAQ,EAAR;AAEF,cAAA;UAAA,SAAA,GAAiB,CAAA,CAAE,EAAE,CAAC,SAAL,CAAe,CAAC,IAAhB,CAAqB,IAArB;UACjB,MAAA,GAAiB,MAAM,CAAC,QAAP,CAAgB,MAAM,CAAC,OAAvB,EAAgC,SAAhC;UACjB,IAAG,MAAM,CAAC,aAAP,KAA0B,UAA7B;YACI,MAAM,CAAC,OAAP,GAAiB,UAAA,CAAW,MAAM,CAAC,OAAlB,EAA2B,SAA3B;YAEjB,SAAA,CAAA;YACA,UAAU,CAAC,MAAX,CACI;cAAA,EAAA,EAAI,MAAM,CAAC,aAAX;cACA,IAAA,EAAM,CADN;aADJ,EAGE,SAAA;qBACE,OAAA,CAAA;YADF,CAHF;YAMA,MAAM,CAAC,oBAAP,GAVJ;;iBAWA,MAAM,CAAC,MAAP,CAAA;QAfE,CAFN;OADJ;IAXY;EA/QQ,CAlChC;AAAA;;;ACAA;AAAA,MAAA;;EAAA,OAAO,CAAC,MAAR,CAAe,QAAf,CACI,CAAC,UADL,CACgB,WADhB,EAC6B,SAAC,MAAD,EAAS,OAAT,EAAkB,MAAlB,EAA0B,QAA1B,EAAoC,WAApC,EAAiD,YAAjD,EAA+D,YAA/D,EAA6E,YAA7E,EAA2F,WAA3F;AACrB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IAGA,kBAAA,GAAqB;IAGrB,MAAA,GAAS;IAGT,eAAA,GAAkB;IAGlB,MAAM,CAAC,IAAP,GAAc;IAGd,MAAM,CAAC,OAAP,GAAiB;IAEjB,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;MAC5B,MAAM,CAAC,IAAP,GAAkB,IAAA,WAAA,CAAY,MAAM,CAAC,IAAnB;aAClB,CAAA,CAAE,iBAAF,CAAoB,CAAC,SAArB,CAAA;IAF4B,CAAhC;IAIA,MAAM,CAAC,QAAP,GAAkB,SAAC,OAAD;aACd,IAAI,CAAC,KAAL,CAAW,OAAA,GAAU,EAArB;IADc;IAGlB,MAAM,CAAC,UAAP,GAAoB,SAAC,OAAD;aAChB,OAAA,GAAU;IADM;IAGpB,MAAM,CAAC,IAAP,GAAc,SAAA;MACV,MAAM,CAAC,OAAP,GAAiB;aACjB,YAAY,CAAC,WAAb,CAAyB;QAAC,MAAA,EAAQ,MAAM,CAAC,MAAhB;QAAwB,aAAA,EAAe,MAAM,CAAC,MAAM,CAAC,OAAQ,CAAA,CAAA,CAA7D;OAAzB,CACI,CAAC,IADL,CACU,SAAC,QAAD;QACF,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC;QACzB,eAAA,CAAA;QACA,sBAAA,CAAA;QACA,aAAA,CAAA;eACA,MAAM,CAAC,OAAP,GAAiB;MALf,CADV;IAFU;IAWd,MAAM,CAAC,KAAP,GAAe,SAAC,QAAD;aACX,aAAY,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAtB,CAA0B,MAA1B,CAAZ,EAAA,QAAA;IADW;IAIf,eAAA,GAAkB,SAAA;aACd,CAAA,CAAE,kBAAF,CAAqB,CAAC,SAAtB,CACI;QAAA,WAAA,EAAa,QAAb;QACA,MAAA,EAAQ,SAAC,KAAD;UACJ,IAAe,KAAf;AAAA,mBAAO,KAAP;;UACA,MAAM,CAAC,UAAP,GAAoB,UAAA,CAAW,MAAM,CAAC,UAAlB,EAA8B,MAAM,CAAC,cAAc,CAAC,EAApD;iBACpB,MAAM,CAAC,MAAP,CAAA;QAHI,CADR;OADJ;IADc;IASlB,MAAM,CAAC,aAAP,GAAuB,SAAC,KAAD;aACnB,MAAM,CAAC,cAAP,GAAwB;IADL;IAGvB,eAAA,GAAkB,SAAA;MACd,eAAA,CAAA;MACA,MAAM,CAAC,SAAP,GAAmB;MAGnB,MAAM,CAAC,UAAP,GAAoB;MAEpB,MAAM,CAAC,OAAP,GAAiB;MACjB,MAAM,CAAC,MAAM,CAAC,OAAd,CAAsB,SAAC,KAAD;eAClB,KAAK,CAAC,OAAO,CAAC,OAAd,CAAsB,SAAC,MAAD;AAElB,cAAA;UAAA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,SAAP,EAAV,EAAkC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlC,EAA8E,MAAM,CAAC,GAArF,EAA0F,MAAM,CAAC,IAAjG;UACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;UAC3B,UAAU,CAAC,KAAX,GAAmB;UAGnB,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,GAAzB;UAGA,qBAAA,CAAsB,UAAtB;iBACA,MAAM,CAAC,OAAO,CAAC,IAAf,CAAoB,UAApB;QAXkB,CAAtB;MADkB,CAAtB;aAcA,eAAA,GAAsB,IAAA,eAAA,CAAgB,MAAM,CAAC,GAAvB,EAA4B,MAAM,CAAC,OAAnC,EAClB;QAAA,QAAA,EAAU,EAAV;QAEA,SAAA,EAAW,sBAFX;OADkB;IAtBR;IA2BlB,eAAA,GAAkB,SAAA;aACd,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAtB,CAA8B,SAAC,MAAD;AAE1B,YAAA;QAAA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,SAAP,EAAV,EAAkC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlC,EAA8E,MAAM,CAAC,GAArF,EAA0F,OAA1F;QACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;eAC3B,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,GAAzB;MAJ0B,CAA9B;IADc;IAOlB,eAAA,GAAkB,SAAA;MAEd,IAAG,MAAM,CAAC,OAAP,KAAoB,MAAvB;QACI,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;iBACnB,MAAM,CAAC,MAAP,CAAc,IAAd;QADmB,CAAvB,EADJ;;MAIA,IAAG,eAAA,KAAqB,MAAxB;eACI,eAAe,CAAC,YAAhB,CAAA,EADJ;;IANc;IASlB,sBAAA,GAAyB,SAAA;MACrB,IAAG,MAAM,CAAC,MAAM,CAAC,WAAd,KAA6B,KAAhC;QAEI,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;UACnB,MAAM,CAAC,YAAP,GAAsB;iBACtB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAtB,CAA8B,SAAC,aAAD;mBAC1B,aAAa,CAAC,MAAM,CAAC,OAArB,CAA6B,SAAC,YAAD;AACzB,kBAAA;cAAA,UAAG,YAAY,CAAC,UAAU,CAAC,QAAxB,CAAA,CAAA,EAAA,aAAsC,MAAM,CAAC,KAAK,CAAC,OAAnD,EAAA,GAAA,MAAH;gBACI,MAAM,CAAC,YAAP,GAAsB;gBACtB,MAAM,CAAC,KAAK,CAAC,YAAb,GAA4B,KAFhC;;YADyB,CAA7B;UAD0B,CAA9B;QAFmB,CAAvB;eASA,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;UACnB,IAAyC,CAAI,MAAM,CAAC,YAApD;mBAAA,MAAM,CAAC,UAAP,CAAkB,kBAAlB,EAAA;;QADmB,CAAvB,EAXJ;;IADqB;IAgBzB,MAAM,CAAC,kBAAP,GAA4B,SAAA;aACxB,CAAC,CAAC,KAAF,CAAQ,MAAM,CAAC,MAAf,EAAuB;QAAE,YAAA,EAAc,IAAhB;OAAvB;IADwB;IAI5B,MAAM,CAAC,qBAAP,GAA+B,SAAA;aAC3B,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,MAAhB,EAAwB,SAAC,KAAD;eACpB,CAAC,CAAC,WAAF,CAAc,KAAK,CAAC,YAApB;MADoB,CAAxB;IAD2B;IAK/B,qBAAA,GAAwB,SAAC,MAAD;MAEpB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,OAAtC,EAA+C,SAAC,KAAD;QAC3C,MAAA;QACA,IAAG,MAAA,KAAU,CAAb;iBACI,UAAA,CAAW,SAAA;AACP,gBAAA;YAAA,IAAG,MAAA,KAAU,CAAb;cAEI,UAAG,MAAM,CAAC,KAAP,EAAA,aAAgB,MAAM,CAAC,UAAvB,EAAA,GAAA,MAAH;gBACI,MAAM,CAAC,UAAP,GAAoB,UAAA,CAAW,MAAM,CAAC,UAAlB,EAA8B,MAAM,CAAC,KAAK,CAAC,EAA3C,EADxB;eAAA,MAAA;gBAGI,MAAM,CAAC,aAAP,GAAuB;gBACvB,MAAM,CAAC,UAAU,CAAC,IAAlB,CAAuB,MAAM,CAAC,KAA9B,EAJJ;;cAKA,MAAM,CAAC,MAAP,CAAA;cACA,eAAA,CAAA,EARJ;aAAA,MAAA;cAWI,MAAM,CAAC,WAAP,CAAmB,MAAM,CAAC,KAAK,CAAC,EAAhC,EAXJ;;mBAYA,MAAA,GAAS;UAbF,CAAX,EAcE,GAdF,EADJ;;MAF2C,CAA/C;MAmBA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,UAAtC,EAAkD,SAAC,KAAD;eAC9C,MAAA;MAD8C,CAAlD;MAGA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,WAAtC,EAAmD,SAAC,KAAD;AAC/C,YAAA;QAAA,UAAU,MAAM,CAAC,KAAP,EAAA,aAAgB,MAAM,CAAC,UAAvB,EAAA,GAAA,MAAV;AAAA,iBAAA;;QACA,MAAM,CAAC,aAAP,GAAuB,MAAM,CAAC;eAC9B,MAAM,CAAC,MAAP,CAAA;MAH+C,CAAnD;aAKA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,UAAtC,EAAkD,SAAC,KAAD;QAC9C,MAAM,CAAC,aAAP,GAAuB;eACvB,MAAM,CAAC,MAAP,CAAA;MAF8C,CAAlD;IA7BoB;IAkCxB,MAAM,CAAC,WAAP,GAAqB,SAAC,QAAD;MACjB,QAAA,GAAW,QAAA,CAAS,QAAT;MACX,IAAG,aAAY,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAtB,CAA0B,MAA1B,CAAZ,EAAA,QAAA,MAAH;QACI,MAAM,CAAC,IAAI,CAAC,SAAZ,GAAwB,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAtB,CAA0B,MAA1B,CAAV,EAA6C,QAA7C,EAD5B;OAAA,MAAA;QAGI,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,IAAtB,CAA2B,QAA3B,EAHJ;;MAIA,aAAA,CAAA;aACA,MAAM,CAAC,IAAI,CAAC,OAAZ,CAAA;IAPiB;IASrB,aAAA,GAAgB,SAAA;aACZ,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;AACnB,YAAA;QAAA,IAAG,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,EAAA,aAAmB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAtB,CAA0B,MAA1B,CAAnB,EAAA,GAAA,MAAA,CAAA,IAAyD,CAAI,MAAM,CAAC,MAAvE;UACI,MAAM,CAAC,MAAP,GAAgB;UAChB,MAAM,CAAC,UAAP,CAAkB,CAAlB;UACA,MAAM,CAAC,OAAP,CAAe,SAAf,EAHJ;;QAIA,IAAG,QAAA,MAAM,CAAC,KAAK,CAAC,EAAb,EAAA,aAAuB,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,GAAtB,CAA0B,MAA1B,CAAvB,EAAA,IAAA,KAAA,CAAA,IAA6D,MAAM,CAAC,MAAvE;UACI,MAAM,CAAC,MAAP,GAAgB;UAChB,MAAM,CAAC,UAAP,CAAqB,MAAM,CAAC,YAAV,GAA4B,CAA5B,GAAmC,kBAArD;iBACA,MAAM,CAAC,OAAP,CAAe,aAAA,CAAc,MAAM,CAAC,IAArB,CAAf,EAHJ;;MALmB,CAAvB;IADY;WAYhB,MAAM,CAAC,GAAP,CAAW,gBAAX,EAA6B,SAAC,KAAD,EAAQ,GAAR;AAEzB,UAAA;MAAA,MAAM,CAAC,IAAP,GAAc;MAGd,WAAA,GACI;QAAA,GAAA,EAAK,OAAL;QACA,GAAA,EAAK,OADL;;MAEJ,MAAM,CAAC,YAAP,GAA0B,IAAC,MAAM,CAAC,IAAI,CAAC,YAAb,CAA+B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,WAAW,CAAC,GAAZ,GAAkB,GAAvC,EAA4C,WAAW,CAAC,GAAZ,GAAkB,GAA9D,CAA/B,EAAuG,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,WAAW,CAAC,GAAZ,GAAkB,GAAvC,EAA4C,WAAW,CAAC,GAAZ,GAAkB,GAA9D,CAAvG;MAC1B,MAAM,CAAC,QAAP,GAAkB,IAAK,MAAM,CAAC,IAAI,CAAC;MAGnC,MAAM,CAAC,IAAI,CAAC,SAAZ,CAA0B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,OAArB,EAA8B,OAA9B,CAA1B;MACA,MAAM,CAAC,IAAI,CAAC,OAAZ,CAAoB,EAApB;MAEA,eAAA,CAAA;MACA,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,IAAI,CAAC;MAC5B,eAAA,CAAA;aACA,aAAA,CAAA;IAlByB,CAA7B;EAlLqB,CAD7B;AAAA;;;ACAA;EAAA,OACA,CAAC,MADD,CACQ,QADR,CAEA,CAAC,OAFD,CAES,UAFT,EAEqB,SAAC,SAAD;WACpB,SAAA,CAAU,kBAAV,EAA8B,EAA9B,EACC;MAAA,MAAA,EACC;QAAA,MAAA,EAAQ,KAAR;OADD;KADD;EADoB,CAFrB,CAMA,CAAC,UAND,CAMY,eANZ,EAM6B,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,iBAAtC,EAAyD,WAAzD,EAAsE,YAAtE,EAAoF,QAApF,EAA8F,MAA9F,EAAsG,QAAtG,EAAgH,KAAhH,EAAuH,oBAAvH,EAA6I,gBAA7I,EAA+J,aAA/J,EAA8K,OAA9K;AAC5B,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,aAAA,GAAgB,SAAA;aACf,QAAA,CAAS,SAAA;QACR,CAAA,CAAE,sBAAF,CAAyB,CAAC,IAA1B,CAA+B,SAAC,KAAD,EAAQ,EAAR;UAC9B,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;iBACA,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;QAF8B,CAA/B;eAGA,CAAA,CAAE,eAAF,CAAkB,CAAC,YAAnB,CAAgC,SAAhC;MAJQ,CAAT,EAKE,GALF;IADe;IAOhB,MAAM,CAAC,SAAP,GAAmB,SAAC,KAAD;MAClB,IAAmB,KAAK,CAAC,OAAN,KAAiB,EAApC;eAAA,MAAM,CAAC,MAAP,CAAA,EAAA;;IADkB;IAGnB,MAAM,CAAC,MAAP,GAAgB,SAAA;MACf,CAAC,CAAC,MAAF,CAAS,UAAT,EAAqB,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,MAAtB,CAArB,EAAoD;QAAE,OAAA,EAAS,GAAX;QAAgB,IAAA,EAAM,GAAtB;OAApD;MACA,MAAM,CAAC,YAAP,GAAsB;aACtB,MAAM,CAAC,WAAP,CAAA;IAHe;IAKhB,MAAM,CAAC,WAAP,GAAqB,SAAC,QAAD;MACpB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,MAAM,CAAC,QAAP,GAAkB;MAClB,MAAM,CAAC,YAAP,GAAsB;MACtB,YAAA,CAAa,MAAM,CAAC,YAApB;aACA,MAAM,CAAC,OAAO,CAAC,SAAf,CAAyB,QAAzB,EAAmC,EAAnC,EAAuC,WAAA,GAAc,QAAQ,CAAC,WAAT,CAAA,CAArD;IALoB;IAOrB,QAAA,CAAS,SAAA;MACR,MAAM,CAAC,MAAP,GAAmB,CAAC,CAAC,MAAF,CAAS,UAAT,CAAH,GAA6B,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,MAAF,CAAS,UAAT,CAAX,CAA7B,GAAmE;MACnF,YAAA,CAAa,MAAM,CAAC,IAApB;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAHrB,CAAT;IAKA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACpB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,UAAU,CAAC,QAAX,GAAsB;MACtB,YAAA,CAAa,MAAM,CAAC,YAApB;aACA,QAAA,CAAS,UAAT,EAAqB,MAAM,CAAC,YAA5B;IAJoB;WAMrB,YAAA,GAAe,SAAC,IAAD;AACd,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,cAAA,GAAgB,MAA1B,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACL,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAI,CAAC;QAC5B,MAAM,CAAC,QAAP,GAAkB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACrC,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAC9B,UAAU,CAAC,gBAAX,GAA8B;eAC9B,aAAA,CAAA;MALK,CADN;IAHc;EArCa,CAN7B;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,OAFL,CAEa,YAFb,EAE2B,SAAC,SAAD;WACnB,SAAA,CAAU,qBAAV,EAAiC,EAAjC,EACI;MAAA,MAAA,EACI;QAAA,MAAA,EAAQ,KAAR;OADJ;KADJ;EADmB,CAF3B,CAMI,CAAC,UANL,CAMgB,kBANhB,EAMoC,SAAC,MAAD,EAAS,UAAT,EAAqB,KAArB,EAA4B,QAA5B,EAAsC,MAAtC,EAA8C,WAA9C;IAC5B,MAAM,CAAC,QAAP,GAAkB,SAAA;AACd,UAAA;MAAA,KAAA,GAAQ;MACR,CAAA,GAAI;MACJ,KAAA,GAAQ;AACR,aAAM,CAAA,GAAI,KAAV;QACI,KAAK,CAAC,IAAN,CAAW,MAAA,CAAA,CAAQ,CAAC,QAAT,CAAkB,MAAlB,EAA0B,CAA1B,CAA4B,CAAC,MAA7B,CAAoC,MAApC,CAAX;QACA,CAAA;MAFJ;aAGA;IAPc;IASlB,MAAM,CAAC,cAAP,GAAwB,SAAC,IAAD;aACpB,CAAC,CAAC,KAAF,CAAQ,MAAM,CAAC,IAAf,CAAoB,CAAC,KAArB,CAA2B;QAAC,IAAA,EAAM,QAAA,CAAS,IAAT,CAAP;OAA3B,CAAkD,CAAC,KAAnD,CAAyD,SAAzD,CAAmE,CAAC,IAApE,CAAA,CAA0E,CAAC,KAA3E,CAAA;IADoB;IAGxB,MAAM,CAAC,OAAP,GAAiB,SAAA;aACb,CAAC,CAAC,KAAF,CAAQ,CAAR,EAAW,EAAX;IADa;IAGjB,MAAM,CAAC,WAAP,GAAqB,SAAC,GAAD,EAAM,IAAN,EAAY,GAAZ,EAAiB,IAAjB;AACjB,UAAA;MAAA,IAAgB,CAAI,GAApB;AAAA,eAAO,MAAP;;MAEA,SAAA,GAAY;QAAC,IAAA,EAAM,QAAA,CAAS,IAAT,CAAP;;MACZ,IAAiC,GAAA,KAAS,IAA1C;QAAA,SAAS,CAAC,GAAV,GAAgB,QAAA,CAAS,GAAT,EAAhB;;MAEA,IAAA,GAAO,CAAC,CAAC,KAAF,CAAQ,MAAM,CAAC,IAAf,EAAqB,SAArB;MAEP,GAAA,GAAM,CAAC;MACP,GAAA,GAAM;MAEN,IAAI,CAAC,OAAL,CAAa,SAAC,CAAD;QACT,IAAiB,CAAC,CAAC,KAAF,GAAU,GAA3B;UAAA,GAAA,GAAM,CAAC,CAAC,MAAR;;QACA,IAAiB,CAAC,CAAC,KAAF,GAAU,GAA3B;iBAAA,GAAA,GAAM,CAAC,CAAC,MAAR;;MAFS,CAAb;MAIA,QAAA,GAAc,IAAA,KAAQ,KAAX,GAAsB,GAAtB,GAA+B;MAC1C,IAAoC,GAAA,KAAO,IAA3C;QAAA,OAAO,CAAC,GAAR,CAAY,QAAZ,EAAsB,GAAtB,EAA2B,IAA3B,EAAA;;aACA,GAAA,KAAO;IAjBU;IAmBrB,MAAM,CAAC,aAAP,GAAuB,SAAC,IAAD,EAAO,GAAP;AACnB,UAAA;MAAA,IAAgB,CAAI,GAApB;AAAA,eAAO,MAAP;;MAEA,QAAA,GAAW,MAAM,CAAC,cAAP,CAAsB,IAAtB;MACX,IAAgB,CAAI,QAAQ,CAAC,MAA7B;AAAA,eAAO,MAAP;;MAEA,GAAA,GAAM,CAAC;MAEP,QAAQ,CAAC,OAAT,CAAiB,SAAC,OAAD;AACb,YAAA;QAAA,CAAA,GAAI,MAAM,CAAC,YAAP,CAAoB,IAApB,EAA0B,OAA1B;QACJ,IAAW,CAAA,GAAI,GAAf;iBAAA,GAAA,GAAM,EAAN;;MAFa,CAAjB;aAIA,GAAA,KAAO;IAZY;IAcvB,MAAM,CAAC,YAAP,GAAsB,SAAC,IAAD,EAAO,OAAP;AAClB,UAAA;MAAA,IAAA,GAAO,CAAC,CAAC,KAAF,CAAQ,MAAM,CAAC,IAAf,EACH;QAAA,IAAA,EAAM,QAAA,CAAS,IAAT,CAAN;QACA,OAAA,EAAS,QAAA,CAAS,OAAT,CADT;OADG;MAGP,GAAA,GAAM;MACN,IAAI,CAAC,OAAL,CAAa,SAAC,CAAD;eACT,GAAA,IAAO,CAAC,CAAC;MADA,CAAb;aAEA,GAAA,IAAO;IAPW;IAStB,MAAM,CAAC,WAAP,GAAqB,SAAC,IAAD,EAAO,GAAP;AACjB,UAAA;;QADwB,MAAM;;MAC9B,SAAA,GAAY;QAAC,IAAA,EAAM,QAAA,CAAS,IAAT,CAAP;;MACZ,IAAiC,GAAA,KAAS,IAA1C;QAAA,SAAS,CAAC,GAAV,GAAgB,QAAA,CAAS,GAAT,EAAhB;;MACA,IAAA,GAAO,CAAC,CAAC,KAAF,CAAQ,MAAM,CAAC,IAAf,EAAqB,SAArB;MACP,GAAA,GAAM;MACN,IAAI,CAAC,OAAL,CAAa,SAAC,CAAD;eACT,GAAA,IAAO,CAAC,CAAC;MADA,CAAb;aAEA,GAAA,IAAO;IAPU;IASrB,MAAM,CAAC,QAAP,GAAkB,SAAC,GAAD,EAAM,IAAN,EAAY,OAAZ;AACd,UAAA;MAAA,CAAA,GAAI,CAAC,CAAC,IAAF,CAAO,KAAK,CAAC,IAAb,EACA;QAAA,GAAA,EAAK,QAAA,CAAS,GAAT,CAAL;QACA,IAAA,EAAM,QAAA,CAAS,IAAT,CADN;QAEA,OAAA,EAAS,QAAA,CAAS,OAAT,CAFT;OADA;MAIJ,IAAG,CAAA,KAAO,MAAV;eAAyB,CAAC,CAAC,MAA3B;OAAA,MAAA;eAAsC,GAAtC;;IALc;IAOlB,MAAM,CAAC,MAAP,CAAc,OAAd,EAAuB,SAAC,MAAD,EAAS,MAAT;MACnB,UAAU,CAAC,gBAAX,GAA8B;aAC9B,KAAK,CAAC,IAAN,CAAW,uBAAX,EAAoC;QAAC,KAAA,EAAO,MAAR;OAApC,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,UAAU,CAAC,gBAAX,GAA8B;eAC9B,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC;MAFrB,CADN;IAFmB,CAAvB;WAMA,aAAA,CAAc,MAAd,EAAsB,SAAtB;EAhF4B,CANpC,CAuFI,CAAC,UAvFL,CAuFgB,kBAvFhB,EAuFoC,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,gBAAtC,EAAwD,iBAAxD,EAA2E,WAA3E,EAAwF,YAAxF,EAAsG,QAAtG,EAAgH,MAAhH,EAAwH,QAAxH,EAAkI,KAAlI,EAAyI,oBAAzI,EAA+J,gBAA/J;AAC5B,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,sBAAP,GAAgC,SAAA;MAC5B,MAAM,CAAC,0BAAP,GAAoC;aACpC,KAAK,CAAC,IAAN,CAAW,0BAAX,EAAuC;QAAC,KAAA,EAAO,aAAR;OAAvC;IAF4B;IAIhC,aAAA,GAAgB,SAAA;aACZ,QAAA,CAAS,SAAA;QACL,CAAA,CAAE,sBAAF,CAAyB,CAAC,IAA1B,CAA+B,SAAC,KAAD,EAAQ,EAAR;UAC3B,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;iBACA,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;QAF2B,CAA/B;QAGA,CAAA,CAAE,eAAF,CAAkB,CAAC,YAAnB,CAAgC,SAAhC;QAEA,CAAA,CAAE,4BAAF,CAA+B,CAAC,GAAhC,CAAoC,YAApC,EAAkD,MAAlD;eACA,CAAA,CAAE,yDAAF,CAA4D,CAAC,MAA7D,CAAoE,QAApE,CAA6E,CAAC,QAA9E,CAAuF,QAAvF,CAAgG,CAAC,GAAjG,CAAqG,YAArG,EAAmH,SAAnH;MAPK,CAAT,EAQE,GARF;IADY;IAWhB,MAAM,CAAC,MAAP,GAAgB,SAAA;MACZ,CAAC,CAAC,MAAF,CAAS,aAAT,EAAwB,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,MAAtB,CAAxB,EAAuD;QAAE,OAAA,EAAS,GAAX;QAAgB,IAAA,EAAM,GAAtB;OAAvD;MACA,MAAM,CAAC,YAAP,GAAsB;aACtB,MAAM,CAAC,WAAP,CAAA;IAHY;IAKhB,MAAM,CAAC,WAAP,GAAqB,SAAC,QAAD;MACjB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,MAAM,CAAC,WAAP,GAAqB;MACrB,MAAM,CAAC,YAAP,GAAsB;MACtB,eAAA,CAAgB,MAAM,CAAC,YAAvB;aACA,MAAM,CAAC,OAAO,CAAC,SAAf,CAAyB,QAAzB,EAAmC,EAAnC,EAAuC,cAAA,GAAiB,QAAQ,CAAC,WAAT,CAAA,CAAxD;IALiB;IAOrB,QAAA,CAAS,SAAA;MACL,MAAM,CAAC,MAAP,GAAmB,CAAC,CAAC,MAAF,CAAS,aAAT,CAAH,GAAgC,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,MAAF,CAAS,aAAT,CAAX,CAAhC,GAAyE;MACzF,eAAA,CAAgB,MAAM,CAAC,IAAvB;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAHxB,CAAT;IAKA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,UAAU,CAAC,WAAX,GAAyB;MACzB,eAAA,CAAgB,MAAM,CAAC,YAAvB;aACA,QAAA,CAAS,aAAT,EAAwB,MAAM,CAAC,YAA/B;IAJiB;WAMrB,eAAA,GAAkB,SAAC,IAAD;AACd,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,iBAAA,GAAmB,MAA7B,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAI,CAAC;QAC5B,MAAM,CAAC,WAAP,GAAqB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACxC,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAC9B,UAAU,CAAC,gBAAX,GAA8B;eAC9B,aAAA,CAAA;MALE,CADN;IAHc;EA1CU,CAvFpC,CA2II,CAAC,UA3IL,CA2IgB,gBA3IhB,EA2IkC,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,gBAAtC,EAAwD,iBAAxD,EAA2E,WAA3E,EAAwF,YAAxF,EAAsG,QAAtG,EAAgH,MAAhH,EAAwH,QAAxH,EAAkI,KAAlI,EAAyI,oBAAzI,EAA+J,gBAA/J;AAC1B,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAG9B,UAAU,CAAC,eAAX,GAA6B;IAC7B,MAAM,CAAC,MAAP,CAAc,SAAA;MACV,OAAO,CAAC,GAAR,CAAY,UAAU,CAAC,eAAvB;aACA,UAAU,CAAC;IAFD,CAAd,EAGE,SAAC,GAAD;MACE,OAAO,CAAC,GAAR,CAAY,GAAZ;MACA,IAAuC,MAAM,CAAC,WAAP,IAAuB,MAAM,CAAC,WAAW,CAAC,MAAnB,KAA6B,GAA3F;eAAA,UAAU,CAAC,gBAAX,GAA8B,MAA9B;;IAFF,CAHF;IAQA,MAAM,CAAC,OAAP,GAAiB,SAAC,IAAD;AACb,UAAA;MAAA,GAAA,GAAM,MAAA,CAAO,IAAI,CAAC,GAAL,CAAA,CAAP;MACN,IAAA,GAAO,MAAA,CAAW,IAAA,IAAA,CAAK,IAAL,CAAU,CAAC,OAAX,CAAA,CAAX;aACP,GAAG,CAAC,IAAJ,CAAS,IAAT,EAAe,MAAf;IAHa;IAKjB,QAAA,CAAS,SAAA;MACL,IAAA,CAAK,MAAM,CAAC,IAAZ;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAFxB,CAAT;IAIA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,UAAU,CAAC,eAAX,GAA6B;MAC7B,IAAA,CAAK,MAAM,CAAC,YAAZ;aACA,QAAA,CAAS,iBAAT,EAA4B,MAAM,CAAC,YAAnC;IAJiB;WAMrB,IAAA,GAAO,SAAC,IAAD;AACH,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,qBAAA,GAAuB,MAAjC,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,OAAO,CAAC,GAAR,CAAY,QAAZ;QACA,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAC9B,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC;QACvB,MAAM,CAAC,WAAP,GAAqB,QAAQ,CAAC,IAAI,CAAC;QACnC,IAAuC,CAAI,MAAM,CAAC,WAAW,CAAC,MAA9D;iBAAA,UAAU,CAAC,gBAAX,GAA8B,MAA9B;;MALE,CADN;IAHG;EA7BmB,CA3IlC;AAAA;;;ACAA;EAAA,OACA,CAAC,MADD,CACQ,QADR,CAKA,CAAC,UALD,CAKY,aALZ,EAK2B,SAAC,MAAD,EAAS,KAAT,EAAgB,YAAhB;IAC1B,aAAA,CAAc,MAAd,EAAsB,SAAtB;WAEA,MAAM,CAAC,UAAP,GAAoB,SAAC,IAAD;MACnB,SAAA,CAAA;aACA,KAAK,CAAC,QAAD,CAAL,CAAa,QAAA,GAAW,IAAI,CAAC,QAA7B,EAAuC,EAAvC,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACL,OAAA,CAAA;eACA,MAAM,CAAC,KAAP,GAAe,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,KAAjB,EAAwB,IAAxB;MAFV,CADN;IAFmB;EAHM,CAL3B;AAAA;;;ACAA;AAAA,MAAA;;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAQI,CAAC,UARL,CAQgB,cARhB,EAQgC,SAAC,MAAD,EAAS,UAAT,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,MAAtC,EAA8C,aAA9C,EAA6D,OAA7D;AACxB,QAAA;IAAA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,IAAA,CAAK,MAAM,CAAC,YAAZ;aACA,QAAA,CAAS,SAAT,EAAoB,MAAM,CAAC,YAA3B;IAFiB;IAIrB,IAAA,GAAO,SAAC,IAAD;AACH,UAAA;MAAA,UAAU,CAAC,gBAAX,GAA8B;MAC9B,MAAA,GAAS,QAAA,GAAW;MACpB,IAAwD,MAAM,CAAC,aAA/D;QAAA,MAAA,IAAU,iBAAA,GAAmB,MAAM,CAAC,cAApC;;aAIA,KAAK,CAAC,GAAN,CAAU,aAAA,GAAe,MAAzB,CACI,CAAC,IADL,CACU,SAAC,QAAD;QACF,UAAU,CAAC,YAAX,CAAA;QACA,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC;eACvB,MAAM,CAAC,OAAP,GAAiB,MAAM,CAAC,IAAI,CAAC;MAH3B,CADV;IAPG;WAaP,QAAA,CAAS,SAAA;MACL,IAAA,CAAK,MAAM,CAAC,IAAZ;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAFxB,CAAT;EApBwB,CARhC,CAmCI,CAAC,UAnCL,CAmCgB,aAnChB,EAmC+B,SAAC,MAAD,EAAS,UAAT,EAAqB,QAArB,EAA+B,SAA/B,EAA0C,KAA1C,EAAiD,MAAjD,EAAyD,OAAzD,EAAkE,WAAlE,EAA+E,IAA/E,EAAqF,aAArF,EAAoG,QAApG,EAA8G,MAA9G,EAAsH,UAAtH,EAAkI,YAAlI,EAAgJ,aAAhJ,EAA+J,gBAA/J,EAAiL,YAAjL,EAA+L,OAA/L,EAAwM,MAAxM,EAAgN,UAAhN,EAA4N,WAA5N,EAAyO,qBAAzO,EAAgQ,iBAAhQ,EAAmR,oBAAnR,EAAyS,MAAzS,EAAiT,KAAjT,EAAwT,OAAxT;AACvB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,mBAAP,GAA6B;IAC7B,MAAM,CAAC,eAAP,GACI;MAAA,SAAA,EAAW,SAAX;MACA,WAAA,EAAa,aADb;MAEA,MAAA,EAAQ,OAFR;MAGA,QAAA,EAAU,MAHV;MAMA,KAAA,EAAO,SAAC,CAAD,EAAI,EAAJ;QACH,MAAM,CAAC,mBAAP,GAA6B;eAC7B,MAAM,CAAC,MAAP,CAAA;MAFG,CANP;MASA,IAAA,EAAM,SAAC,CAAD,EAAI,EAAJ;QACF,MAAM,CAAC,mBAAP,GAA6B;QAC7B,MAAM,CAAC,MAAP,CAAA;eACA,gBAAA,CAAA;MAHE,CATN;;IAeJ,MAAM,CAAC,IAAP,GAAc,SAAA;MACV,aAAA,CAAA;MACA,MAAM,CAAC,SAAP,CAAA;aACA,MAAM,CAAC,MAAM,CAAC,OAAd,CAAA,CACI,CAAC,IADL,CACU,SAAA;eACF,MAAM,CAAC,OAAP,CAAA;MADE,CADV;IAHU;IAQd,MAAM,CAAC,IAAP,GAAc,SAAA;MACV,aAAA,CAAA;MACA,MAAM,CAAC,SAAP,CAAA;aACA,MAAM,CAAC,MAAM,CAAC,IAAd,CAAmB,MAAM,CAAC,MAA1B,EAAkC,SAAC,QAAD;eAC9B,MAAM,CAAC,QAAP,GAAkB,WAAA,GAAY,QAAQ,CAAC,EAArB,GAAwB;MADZ,CAAlC;IAHU;IAMd,aAAA,GAAgB,SAAA;aACZ,QAAA,CAAS,SAAA;eACL,CAAA,CAAE,2BAAF,CAA8B,CAAC,SAA/B,CACI;UAAA,SAAA,EAAW,SAAX;UACA,UAAA,EAAY,YADZ;UAEA,IAAA,EAAM,SAAC,CAAD,EAAI,EAAJ;AACF,gBAAA;YAAA,QAAA,GAAW,CAAA,CAAE,EAAE,CAAC,SAAL,CAAe,CAAC,IAAhB,CAAqB,IAArB;mBACX,QAAA,CAAS,SAAA;cACL,MAAM,CAAC,aAAa,CAAC,SAArB,GAAiC,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,aAAa,CAAC,SAA/B,EAA0C,QAAQ,CAAC,QAAT,CAAA,CAA1C;qBACjC,gBAAA,CAAA;YAFK,CAAT;UAFE,CAFN;SADJ;MADK,CAAT;IADY;IAYhB,QAAA,CAAS,SAAA;MACL,MAAM,CAAC,KAAP,GAAe,IAAI,CAAC,KAAL,CAAA;MAEf,KAAK,CAAC,GAAN,CAAU,iBAAV,CACI,CAAC,OADL,CACa,SAAC,MAAD;eACL,MAAM,CAAC,MAAP,GAAgB;MADX,CADb;MAMA,IAAG,MAAM,CAAC,EAAP,GAAY,CAAf;eACI,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC,GAAP,CAAW;UAAC,EAAA,EAAI,MAAM,CAAC,EAAZ;SAAX,EAA4B,SAAC,MAAD;UACxC,MAAM,CAAC,gBAAP,GAA6B,MAAM,CAAC,UAAV,GAA0B,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,QAAnB,EAA6B;YAAC,EAAA,EAAI,MAAM,CAAC,UAAZ;WAA7B,CAA1B,GAAqF,MAAM,CAAC,QAAS,CAAA,CAAA;UAC/H,MAAM,CAAC,SAAP,CAAA;UACA,EAAA,CAAG,eAAH,EAAoB,kBAApB;iBACA,UAAU,CAAC,YAAX,CAAA;QAJwC,CAA5B,EADpB;OAAA,MAAA;QAOI,MAAM,CAAC,MAAP,GAAgB,MAAM,CAAC;QACvB,MAAM,CAAC,MAAM,CAAC,QAAd,GAAyB,CAAC,MAAM,CAAC,WAAR;QACzB,MAAM,CAAC,gBAAP,GAA0B,MAAM,CAAC,MAAM,CAAC,QAAS,CAAA,CAAA;eACjD,UAAU,CAAC,YAAX,CAAA,EAVJ;;IATK,CAAT;IAqBA,gBAAA,GAAmB,SAAA;aAKf,WAAW,CAAC,MAAZ,CAAmB,MAAM,CAAC,aAA1B;IALe;IAOnB,MAAM,CAAC,YAAP,GAAsB,SAAA;AAClB,UAAA;MAAA,MAAA,GAAS;MACT,IAAG,MAAM,CAAC,aAAV;QACI,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,aAAa,CAAC,SAA5B,EAAuC,SAAC,KAAD,EAAQ,QAAR;iBACnC,MAAM,CAAC,IAAP,CAAY,QAAA,CAAS,MAAM,CAAC,aAAa,CAAC,MAA9B,EAAsC,QAAtC,CAAZ;QADmC,CAAvC;eAEA,OAHJ;;IAFkB;IAQtB,MAAM,CAAC,SAAP,GAAmB,SAAA;AACf,UAAA;MAAA,MAAA,GAAS,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAArB,CAA2B,GAA3B;MACT,MAAM,CAAC,KAAP,CAAA;MACA,IAAG,MAAO,CAAA,CAAA,CAAV;QACI,MAAM,CAAC,aAAP,GAAuB,QAAA,CAAS,MAAM,CAAC,gBAAgB,CAAC,KAAjC,EAAwC,MAAO,CAAA,CAAA,CAA/C,EAD3B;;MAEA,IAAG,MAAO,CAAA,CAAA,CAAP,IAAc,MAAM,CAAC,aAAxB;eACI,MAAM,CAAC,mBAAP,GAA6B,QAAA,CAAS,MAAM,CAAC,aAAa,CAAC,WAA9B,EAA2C,MAAO,CAAA,CAAA,CAAlD,EADjC;;IALe;IAQnB,MAAM,CAAC,aAAP,GAAuB,SAAA;MACnB,IAAG,MAAM,CAAC,mBAAmB,CAAC,OAA9B;eACI,OAAO,CAAC,QAAD,CAAP,CAAe,MAAM,CAAC,mBAAmB,CAAC,OAA1C,EAAmD,SAAA;iBAC/C,OAAO,MAAM,CAAC,mBAAmB,CAAC;QADa,CAAnD,EADJ;OAAA,MAAA;eAII,OAAO,CAAC,IAAR,CACI;UAAA,aAAA,EAAe,MAAM,CAAC,mBAAmB,CAAC,EAA1C;SADJ,EAEE,SAAC,QAAD;iBACE,MAAM,CAAC,mBAAmB,CAAC,OAA3B,GAAqC;QADvC,CAFF,EAJJ;;IADmB;IAUvB,MAAM,CAAC,YAAP,GAAsB,SAAA;MAClB,IAAG,MAAM,CAAC,mBAAmB,CAAC,MAA9B;eACI,MAAM,CAAC,QAAD,CAAN,CAAc,MAAM,CAAC,mBAAmB,CAAC,MAAzC,EAAiD,SAAA;iBAC7C,OAAO,MAAM,CAAC,mBAAmB,CAAC;QADW,CAAjD,EADJ;OAAA,MAAA;eAII,MAAM,CAAC,IAAP,CACI;UAAA,aAAA,EAAe,MAAM,CAAC,mBAAmB,CAAC,EAA1C;SADJ,EAEE,SAAC,QAAD;iBACE,MAAM,CAAC,mBAAmB,CAAC,MAA3B,GAAoC;QADtC,CAFF,EAJJ;;IADkB;IAUtB,MAAM,CAAC,gBAAP,GAA0B,SAAC,QAAD;AACtB,UAAA;MAAA,iBAAA,GAAoB;MACpB,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,MAAM,CAAC,QAArB,EAA+B,SAAC,KAAD,EAAQ,OAAR;QAC3B,IAAU,iBAAV;AAAA,iBAAA;;eACA,CAAC,CAAC,IAAF,CAAO,OAAO,CAAC,KAAf,EAAsB,SAAC,KAAD,EAAQ,IAAR;iBAClB,CAAC,CAAC,IAAF,CAAO,IAAI,CAAC,WAAZ,EAAyB,SAAC,KAAD,EAAQ,UAAR;YACrB,IAA4B,QAAA,CAAS,UAAU,CAAC,QAApB,CAAA,KAAiC,QAAA,CAAS,QAAT,CAA7D;qBAAA,iBAAA,GAAoB,KAApB;;UADqB,CAAzB;QADkB,CAAtB;MAF2B,CAA/B;aAKA;IAPsB;IAS1B,MAAM,CAAC,gBAAP,GAA0B,SAAC,UAAD;aACtB,MAAM,CAAC,mBAAP,GAA6B;IADP;IAG1B,MAAM,CAAC,OAAP,GAAiB,SAAA;aACb,MAAM,CAAC,MAAP,CAAc,aAAd;IADa;IAGjB,MAAM,CAAC,OAAP,GAAiB,SAAC,IAAD;MACb,MAAM,CAAC,aAAP,GAAuB;MACvB,IAAwB,MAAM,CAAC,QAA/B;QAAA,MAAM,CAAC,WAAP,CAAA,EAAA;;aACA,OAAO,MAAM,CAAC;IAHD;IAKjB,MAAM,CAAC,UAAP,GAAoB,SAAC,UAAD;aAChB,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,gBAAgB,CAAC,KAApC,EAA2C;QAAC,UAAA,EAAY,QAAA,CAAS,UAAT,CAAb;OAA3C,CAAA,KAAoF;IADpE;IAGpB,MAAM,CAAC,aAAP,GAAuB,SAAC,OAAD;MACnB,MAAM,CAAC,gBAAP,GAA0B;aAC1B,OAAO,MAAM,CAAC;IAFK;IAIvB,MAAM,CAAC,cAAP,GAAwB,SAAA;MACpB,WAAW,CAAC,IAAZ,CACI;QAAA,UAAA,EAAY,MAAM,CAAC,gBAAgB,CAAC,EAApC;QACA,QAAA,EAAU,MAAM,CAAC,aADjB;OADJ,EAGE,SAAC,IAAD;QACE,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,IAA9B,CAAmC,IAAnC;eACA,MAAM,CAAC,aAAP,GAAuB;MAFzB,CAHF;MAOA,OAAO,MAAM,CAAC;MACd,SAAA,CAAU,eAAV;MACA,CAAA,CAAE,cAAF,CAAiB,CAAC,KAAlB,CAAwB,MAAxB;IAVoB;IAaxB,MAAM,CAAC,YAAP,GAAsB,SAAA;MAClB,MAAM,CAAC,aAAa,CAAC,SAAS,CAAC,IAA/B,CAAoC,MAAM,CAAC,aAA3C;aACA,WAAW,CAAC,MAAZ,CACI;QAAA,EAAA,EAAI,MAAM,CAAC,aAAa,CAAC,EAAzB;QACA,SAAA,EAAW,MAAM,CAAC,aAAa,CAAC,SADhC;OADJ,EAGE,SAAA;QAEE,OAAO,MAAM,CAAC;eACd,CAAA,CAAE,YAAF,CAAe,CAAC,KAAhB,CAAsB,MAAtB;MAHF,CAHF;IAFkB;IAUtB,MAAM,CAAC,aAAP,GAAuB,SAAC,QAAD;MACnB,SAAA,CAAA;aACA,UAAU,CAAC,IAAX,CACI;QAAA,KAAA,EAAO,MAAM,CAAC,MAAM,CAAC,KAArB;QACA,QAAA,EAAU,QADV;QAEA,QAAA,EAAU,MAAM,CAAC,aAAa,CAAC,QAF/B;QAGA,eAAA,EAAiB,MAAM,CAAC,aAAa,CAAC,EAHtC;QAIA,SAAA,EAAW,MAAM,CAAC,MAAM,CAAC,EAJzB;OADJ,EAME,SAAC,cAAD;QACE,OAAA,CAAA;QACA,IAAG,cAAc,CAAC,EAAlB;UACI,MAAM,CAAC,mBAAP,GAA6B;iBAC7B,MAAM,CAAC,aAAa,CAAC,WAAW,CAAC,IAAjC,CAAsC,cAAtC,EAFJ;;MAFF,CANF;IAFmB;IAcvB,MAAM,CAAC,UAAP,GAAoB,SAAA;AAChB,UAAA;MAAA,WAAA,GAAkB,IAAA,OAAA,CACd;QAAA,SAAA,EAAW,MAAM,CAAC,EAAlB;OADc;MAGlB,SAAA,CAAA;aACA,WAAW,CAAC,KAAZ,CAAA,CACI,CAAC,IADL,CACU,SAAC,IAAD;QACF,OAAA,CAAA;QACA,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,IAAvB,CAA4B,IAA5B;QACA,MAAM,CAAC,gBAAP,GAA0B;eAC1B,aAAA,CAAc,KAAd,EAAqB,IAArB,EAA2B,IAA3B;MAJE,CADV;IALgB;IAYpB,MAAM,CAAC,aAAP,GAAuB,SAAA;aACnB,OAAO,CAAC,OAAR,CAAgB,wCAAhB,EAA0D,SAAC,QAAD;QACtD,IAAG,QAAA,KAAY,IAAf;iBACI,OAAO,CAAC,QAAD,CAAP,CAAe;YAAC,EAAA,EAAI,MAAM,CAAC,gBAAgB,CAAC,EAA7B;WAAf,EAAiD,SAAA;YAC7C,MAAM,CAAC,MAAM,CAAC,QAAd,GAAyB,UAAA,CAAW,MAAM,CAAC,MAAM,CAAC,QAAzB,EAAmC,MAAM,CAAC,gBAAgB,CAAC,EAA3D;mBACzB,aAAA,CAAc,IAAd,EAAoB,IAApB,EAA0B,IAA1B;UAF6C,CAAjD,EADJ;;MADsD,CAA1D;IADmB;IAOvB,MAAM,CAAC,eAAP,GAAyB,SAAA;aACrB,CAAA,CAAE,mBAAF,CAAsB,CAAC,KAAvB,CAA6B,MAA7B;IADqB;IAGzB,MAAM,CAAC,iBAAP,GAA2B,SAAA;MACvB,CAAA,CAAE,mBAAF,CAAsB,CAAC,KAAvB,CAA6B,MAA7B;MACA,SAAA,CAAA;aACA,KAAK,CAAC,IAAN,CAAW,wBAAA,GAAyB,MAAM,CAAC,gBAAgB,CAAC,EAA5D,EACI;QAAA,SAAA,EAAW,MAAM,CAAC,kBAAlB;OADJ,CAEA,CAAC,IAFD,CAEM,SAAC,QAAD;QACF,OAAA,CAAA;QACA,OAAO,CAAC,GAAR,CAAY,QAAZ;QACA,IAAG,QAAQ,CAAC,IAAT,KAAmB,EAAtB;iBAA8B,QAAQ,CAAC,MAAT,CAAA,EAA9B;SAAA,MAAA;iBAAqD,OAAO,CAAC,KAAR,CAAc,sBAAd,EAArD;;MAHE,CAFN;IAHuB;IAW3B,aAAA,GAAgB,SAAC,OAAD,EAAkB,IAAlB,EAAgC,UAAhC;;QAAC,UAAU;;;QAAO,OAAO;;;QAAO,aAAa;;MACzD,IAAkC,OAAlC;QAAA,MAAM,CAAC,gBAAP,GAA0B,KAA1B;;MACA,IAA+B,IAA/B;QAAA,MAAM,CAAC,aAAP,GAAuB,KAAvB;;MACA,IAAqC,UAArC;eAAA,MAAM,CAAC,mBAAP,GAA6B,KAA7B;;IAHY;IAKhB,MAAM,CAAC,UAAP,GAAoB,SAAA;aAChB,OAAO,CAAC,OAAR,CAAgB,wCAAhB,EAA0D,SAAC,QAAD;QACtD,IAAG,QAAA,KAAY,IAAf;iBACI,WAAW,CAAC,QAAD,CAAX,CAAmB;YAAC,EAAA,EAAI,MAAM,CAAC,aAAa,CAAC,EAA1B;WAAnB,EAAkD,SAAA;YAC9C,MAAM,CAAC,gBAAgB,CAAC,KAAxB,GAAgC,UAAA,CAAW,MAAM,CAAC,gBAAgB,CAAC,KAAnC,EAA0C,MAAM,CAAC,aAAa,CAAC,EAA/D;YAChC,OAAO,MAAM,CAAC;mBACd,aAAA,CAAc,KAAd,EAAqB,IAArB,EAA2B,IAA3B;UAH8C,CAAlD,EADJ;;MADsD,CAA1D;IADgB;IAQpB,MAAM,CAAC,gBAAP,GAA0B,SAAA;aACtB,OAAO,CAAC,OAAR,CAAgB,0CAAhB,EAA4D,SAAC,QAAD;QACxD,IAAG,QAAA,KAAY,IAAf;iBACI,UAAU,CAAC,QAAD,CAAV,CAAkB;YAAC,EAAA,EAAI,MAAM,CAAC,mBAAmB,CAAC,EAAhC;WAAlB,EAAuD,SAAA;YACnD,MAAM,CAAC,aAAa,CAAC,WAArB,GAAmC,UAAA,CAAW,MAAM,CAAC,aAAa,CAAC,WAAhC,EAA6C,MAAM,CAAC,mBAAmB,CAAC,EAAxE;YACnC,OAAO,MAAM,CAAC;mBACd,aAAA,CAAc,KAAd,EAAqB,KAArB,EAA4B,IAA5B;UAHmD,CAAvD,EADJ;;MADwD,CAA5D;IADsB;IAS1B,MAAM,CAAC,MAAP,CAAc,0BAAd,EAA0C,SAAC,MAAD,EAAS,MAAT;AACtC,UAAA;MAAA,IAAU,MAAA,KAAU,MAAV,IAAwB,MAAA,KAAU,MAA5C;AAAA,eAAA;;MACA,IAAmB,MAAA,KAAU,MAA7B;QAAA,MAAA,GAAS,OAAT;;MACA,MAAM,CAAC,iBAAP,GAA2B;MAC3B,OAAA,GAAU,MAAM,CAAC,KAAP,CAAa,mBAAb;aACV,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,SAAC,KAAD,EAAQ,KAAR;AACZ,YAAA;QAAA,QAAA,GAAW,KAAK,CAAC,KAAN,CAAY,SAAZ;eACX,MAAM,CAAC,iBAAiB,CAAC,IAAzB,CAA8B,QAAA,CAAS,QAAT,CAA9B;MAFY,CAAhB;IALsC,CAA1C;IAUA,MAAM,CAAC,MAAP,CAAc,qBAAd,EAAqC,SAAC,MAAD,EAAS,MAAT;MACjC,IAAU,MAAA,KAAU,MAApB;AAAA,eAAA;;MACA,IAAgD,MAAA,KAAU,MAA1D;QAAA,EAAA,CAAG,qBAAH,EAA0B,kBAA1B,EAAA;;MACA,IAAmC,MAAA,KAAY,MAA/C;QAAA,SAAA,CAAU,qBAAV,EAAA;;aACA,WAAA,CAAA;IAJiC,CAArC;IAMA,MAAM,CAAC,MAAP,CAAc,eAAd,EAA+B,SAAC,MAAD,EAAS,MAAT;MAC3B,IAAmB,MAAA,KAAU,MAAV,IAAwB,MAAA,KAAY,MAAvD;eAAA,aAAA,CAAA,EAAA;;IAD2B,CAA/B;IAOA,MAAM,CAAC,SAAP,GAAmB;IACnB,MAAM,CAAC,UAAP,GAAoB;IAEpB,aAAA,GAAgB,SAAA;AACZ,UAAA;MAAA,WAAA,GAAc;MACd,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,MAAM,CAAC,OAArB,EAA8B,SAAC,KAAD,EAAQ,MAAR;eAC1B,WAAW,CAAC,IAAZ,CAAiB,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,KAAf,EAAsB,KAAtB,EAA6B,MAA7B,EAAqC,QAArC,EAA+C,WAA/C,CAAjB;MAD0B,CAA9B;aAEA,MAAM,CAAC,MAAM,CAAC,OAAd,GAAwB;IAJZ;IAOhB,MAAM,CAAC,GAAP,CAAW,gBAAX,EAA6B,SAAC,KAAD,EAAQ,GAAR;AACzB,UAAA;MAAA,GAAG,CAAC,MAAJ,GAAa,MAAM,CAAC;MACpB,IAAG,MAAM,CAAC,UAAP,KAAqB,CAAxB;QAEI,MAAM,CAAC,IAAP,GAAc;QAEd,MAAM,CAAC,WAAP,CAAA;QAEA,WAAA,GACI;UAAA,GAAA,EAAK,OAAL;UACA,GAAA,EAAK,OADL;;QAEJ,MAAM,CAAC,YAAP,GAA0B,IAAC,MAAM,CAAC,IAAI,CAAC,YAAb,CAA+B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,WAAW,CAAC,GAAZ,GAAkB,GAAvC,EAA4C,WAAW,CAAC,GAAZ,GAAkB,GAA9D,CAA/B,EAAuG,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,WAAW,CAAC,GAAZ,GAAkB,GAAvC,EAA4C,WAAW,CAAC,GAAZ,GAAkB,GAA9D,CAAvG;QAC1B,MAAM,CAAC,QAAP,GAAkB,IAAK,MAAM,CAAC,IAAI,CAAC;QAEnC,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,GAA9B,EAAmC,OAAnC,EAA4C,SAAC,KAAD;iBACxC,MAAM,CAAC,aAAP,CAAqB,KAArB;QADwC,CAA5C,EAZJ;OAAA,MAAA;QAgBI,MAAM,CAAC,KAAP,GAAe;QAGf,MAAM,CAAC,KAAK,CAAC,SAAb,CAA2B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,OAArB,EAA8B,OAA9B,CAA3B;QACA,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,EAArB,EApBJ;;aAqBA,MAAM,CAAC,UAAP;IAvByB,CAA7B;IA0BA,MAAM,CAAC,OAAP,GAAiB,SAAA;AACb,UAAA;MAAA,CAAA,CAAE,aAAF,CAAgB,CAAC,KAAjB,CAAuB,MAAvB;MAEA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAlB,CAA0B,MAAM,CAAC,IAAjC,EAAuC,QAAvC;MAGA,MAAM,CAAC,IAAI,CAAC,SAAZ,CAA0B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,OAArB,EAA8B,OAA9B,CAA1B;MACA,MAAM,CAAC,IAAI,CAAC,OAAZ,CAAoB,EAApB;MAGA,CAAA,CAAE,aAAF,CAAgB,CAAC,GAAjB,CAAqB,EAArB;MAGA,IAAG,MAAM,CAAC,cAAP,IAA0B,MAAM,CAAC,cAAc,CAAC,MAAnD;QACI,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,cAAd,EAA8B,SAAC,CAAD,EAAI,MAAJ;iBAC1B,MAAM,CAAC,MAAP,CAAc,IAAd;QAD0B,CAA9B;QAEA,MAAM,CAAC,cAAP,GAAwB,GAH5B;;MAMA,IAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAzB;QAEI,MAAA,GAAS,IAAK,MAAM,CAAC,IAAI,CAAC;QAE1B,aAAA,GAAgB;QAEhB,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,MAAM,CAAC,OAArB,EAA8B,SAAC,KAAD,EAAQ,MAAR;UAC1B,aAAA;iBAGA,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,QAArB;QAJ0B,CAA9B;QAMA,IAAG,aAAA,GAAgB,CAAnB;UACI,MAAM,CAAC,IAAI,CAAC,SAAZ,CAAsB,MAAtB;UACA,MAAM,CAAC,IAAI,CAAC,WAAZ,CAAwB,MAAxB;iBACA,MAAM,CAAC,IAAI,CAAC,OAAZ,CAAoB,EAApB,EAHJ;SAZJ;;IAnBa;IAoCjB,MAAM,CAAC,aAAP,GAAuB,SAAC,KAAD;AAGnB,UAAA;MAAA,MAAA,GAAS,SAAA,CAAU,MAAM,CAAC,SAAP,EAAV,EAA8B,KAAK,CAAC,MAApC,EAA4C,MAAM,CAAC,IAAnD;MAGT,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,IAAtB,CAA2B,MAA3B;MAGA,MAAM,CAAC,MAAP,CAAc,MAAM,CAAC,IAArB;MAGA,UAAU,CAAC,KAAX,CAAiB,SAAjB,EACI;QAAA,GAAA,EAAK,MAAM,CAAC,GAAZ;QACA,GAAA,EAAK,MAAM,CAAC,GADZ;OADJ,CAGA,CAAC,IAHD,CAGM,SAAC,QAAD;eACF,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC;MADvB,CAHN;MAOA,MAAM,CAAC,gBAAP,CAAwB,MAAxB;aACA,MAAM,CAAC,oBAAP,CAA4B,MAA5B;IApBmB;IAuBvB,MAAM,CAAC,gBAAP,GAA0B,SAAC,MAAD;aACtB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,UAAtC,EAAkD,SAAC,KAAD;AAC9C,YAAA;QAAA,CAAA,GAAI;QAEJ,CAAC,CAAC,MAAF,CAAS,IAAT;eAEA,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,MAAM,CAAC,OAArB,EAA8B,SAAC,KAAD,EAAQ,CAAR;UAC1B,IAAG,CAAA,KAAO,MAAP,IAAqB,CAAC,CAAC,EAAF,KAAQ,CAAC,CAAC,EAAlC;YAEI,IAAG,CAAC,CAAC,SAAF,KAAiB,MAApB;cACI,SAAA,CAAA;cACA,MAAM,CAAC,QAAD,CAAN,CAAc;gBAAC,EAAA,EAAI,CAAC,CAAC,SAAP;eAAd,EACE,SAAA;uBACE,OAAA,CAAA;cADF,CADF,EAFJ;;mBAKA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,MAAtB,CAA6B,KAA7B,EAAoC,CAApC,EAPJ;;QAD0B,CAA9B;MAL8C,CAAlD;IADsB;IAgB1B,MAAM,CAAC,oBAAP,GAA8B,SAAC,MAAD;aAC1B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,OAAtC,EAA+C,SAAC,KAAD;QAC3C,IAAG,IAAC,CAAA,IAAD,KAAS,OAAZ;UACI,IAAC,CAAA,IAAD,GAAQ;UACR,IAAC,CAAA,OAAD,CAAS,QAAT,EAFJ;SAAA,MAGK,IAAG,IAAC,CAAA,IAAD,KAAS,KAAZ;UACD,IAAC,CAAA,IAAD,GAAQ;UACR,IAAC,CAAA,OAAD,CAAS,SAAT,EAFC;SAAA,MAAA;UAID,IAAC,CAAA,IAAD,GAAQ;UACR,IAAC,CAAA,OAAD,CAAS,UAAT,EALC;;QAML,IAAG,MAAM,CAAC,SAAP,KAAsB,MAAzB;UACI,SAAA,CAAA;iBACA,MAAM,CAAC,MAAP,CAAc;YAAC,EAAA,EAAI,MAAM,CAAC,SAAZ;YAAuB,IAAA,EAAM,IAAC,CAAA,IAA9B;WAAd,EACE,SAAA;mBACE,OAAA,CAAA;UADF,CADF,EAFJ;;MAV2C,CAA/C;IAD0B;IAkB9B,MAAM,CAAC,SAAP,GAAmB,SAAC,OAAD;aACf,MAAM,CAAC,QAAQ,CAAC,OAAhB,CAAwB;QACpB,OAAA,EAAS,OAAA,GAAU,sBADC;QAEpB,MAAA,EAAQ,MAAM,CAAC,YAFK;QAGpB,qBAAA,EACI;UAAA,OAAA,EAAS,IAAT;UACA,kBAAA,EAAoB,QADpB;SAJgB;OAAxB,EAMG,SAAC,OAAD,EAAU,MAAV;AACC,YAAA;QAAA,IAAG,MAAA,KAAU,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAxC;UAEI,WAAA,GAAc;UAEd,oBAAA,GAAuB,IAAK,MAAM,CAAC,IAAI,CAAC;UACxC,CAAC,CAAC,IAAF,CAAO,OAAP,EAAgB,SAAC,CAAD,EAAI,MAAJ;AACZ,gBAAA;YAAA,IAAU,CAAA,IAAK,WAAf;AAAA,qBAAA;;YAEA,oBAAoB,CAAC,MAArB,CAA4B,MAAM,CAAC,QAAQ,CAAC,QAA5C;YAEA,aAAA,GAAoB,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAChB;cAAA,GAAA,EAAK,MAAM,CAAC,IAAZ;cACA,QAAA,EAAU,MAAM,CAAC,QAAQ,CAAC,QAD1B;cAEA,IAAA,EAAM,WAFN;aADgB;YAKpB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,aAA9B,EAA6C,OAA7C,EAAsD,SAAC,KAAD;cAClD,IAAC,CAAA,MAAD,CAAQ,IAAR;qBACA,MAAM,CAAC,aAAP,CAAqB,KAArB;YAFkD,CAAtD;YAGA,MAAM,CAAC,cAAP,GAAwB,YAAA,CAAa,MAAM,CAAC,cAApB;mBACxB,MAAM,CAAC,cAAc,CAAC,IAAtB,CAA2B,aAA3B;UAdY,CAAhB;UAiBA,IAAG,OAAO,CAAC,MAAR,GAAiB,CAApB;YACI,MAAM,CAAC,IAAI,CAAC,SAAZ,CAAsB,oBAAtB;YACA,MAAM,CAAC,IAAI,CAAC,WAAZ,CAAwB,oBAAxB;YACA,IAAG,OAAO,CAAC,MAAR,KAAkB,CAArB;qBACI,MAAM,CAAC,IAAI,CAAC,OAAZ,CAAoB,EAApB,EADJ;aAHJ;WAAA,MAAA;mBAMI,CAAA,CAAE,aAAF,CAAgB,CAAC,QAAjB,CAA0B,WAA1B,CAAsC,CAAC,KAAvC,CAAA,EANJ;WAtBJ;;MADD,CANH;IADe;IAuCnB,MAAM,CAAC,WAAP,GAAqB,SAAC,MAAD;MACjB,IAAG,MAAM,CAAC,OAAP,KAAkB,EAAlB,IAAwB,MAAM,CAAC,IAAP,KAAe,OAA1C;QAEI,IAAG,CAAA,CAAE,aAAF,CAAgB,CAAC,GAAjB,CAAA,CAAA,KAA0B,EAA7B;UACI,CAAA,CAAE,aAAF,CAAgB,CAAC,QAAjB,CAA0B,WAA1B,CAAsC,CAAC,KAAvC,CAAA,EADJ;SAAA,MAAA;UAGI,CAAA,CAAE,aAAF,CAAgB,CAAC,WAAjB,CAA6B,WAA7B,EAHJ;;eAIA,MAAM,CAAC,SAAP,CAAiB,CAAA,CAAE,aAAF,CAAgB,CAAC,GAAjB,CAAA,CAAjB,EANJ;;IADiB;IAUrB,MAAM,CAAC,WAAP,GAAqB,SAAA;aACjB,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,IAA9B,CAAmC,SAAA;AAC/B,YAAA;QAAA,OAAA,GAAU;QACV,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,MAAM,CAAC,OAArB,EAA8B,SAAC,KAAD,EAAQ,MAAR;AAG1B,cAAA;UAAA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,SAAP,EAAV,EAAkC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlC,EAA8E,MAAM,CAAC,IAArF,EAA2F,MAAM,CAAC,IAAlG,EAAwG,MAAM,CAAC,EAA/G;UACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;UAG3B,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,IAAzB;UACA,OAAO,CAAC,GAAR,CAAY,eAAZ,EAA6B,MAAM,CAAC,IAApC;UAGA,MAAM,CAAC,gBAAP,CAAwB,UAAxB;UACA,MAAM,CAAC,oBAAP,CAA4B,UAA5B;iBACA,OAAO,CAAC,IAAR,CAAa,UAAb;QAb0B,CAA9B;eAcA,MAAM,CAAC,MAAM,CAAC,OAAd,GAAwB;MAhBO,CAAnC;IADiB;IAoBrB,MAAM,CAAC,WAAP,GAAqB,SAAA;aACjB,CAAA,CAAE,aAAF,CAAgB,CAAC,KAAjB,CAAuB,MAAvB;IADiB;IAUrB,MAAM,CAAC,OAAP,GAAiB,SAAA;MACb,MAAM,CAAC,QAAP,GAAkB,CAAI,MAAM,CAAC;aAC7B,MAAM,CAAC,WAAP,CAAA;IAFa;IAKjB,MAAM,CAAC,KAAP,GAAe,SAAC,QAAD;aACX,aAAY,MAAM,CAAC,SAAS,CAAC,GAAjB,CAAqB,MAArB,CAAZ,EAAA,QAAA;IADW;IAIf,eAAA,GAAkB,SAAA;aACd,CAAA,CAAE,kBAAF,CAAqB,CAAC,SAAtB,CACI;QAAA,WAAA,EAAa,QAAb;QACA,MAAA,EAAQ,SAAC,KAAD;UACJ,IAAe,KAAf;AAAA,mBAAO,KAAP;;UACA,MAAM,CAAC,UAAP,GAAsB,UAAA,CAAW,MAAM,CAAC,UAAlB,EAA8B,MAAM,CAAC,cAAc,CAAC,EAApD;UACtB,MAAM,CAAC,SAAP,GAAsB,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,SAAS,CAAC,GAAjB,CAAqB,MAArB,CAAV,EAAwC,MAAM,CAAC,cAAc,CAAC,EAA9D;UACtB,MAAM,CAAC,MAAP,CAAA;iBACA,aAAA,CAAA;QALI,CADR;OADJ;IADc;IAWlB,MAAM,CAAC,aAAP,GAAuB,SAAC,KAAD;aACnB,MAAM,CAAC,cAAP,GAAwB;IADL;IAGvB,eAAA,GAAkB,SAAA;AACd,UAAA;MAAA,eAAA,CAAA;MACA,MAAM,CAAC,UAAP,GAAoB;MAEpB,MAAM,CAAC,UAAP,GAAoB;MAEpB,MAAA,GAAS,IAAK,MAAM,CAAC,IAAI,CAAC;MAE1B,aAAA,GAAgB;MAChB,MAAM,CAAC,QAAP,GAAkB;MAGlB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,OAAlB,CAA0B,MAAM,CAAC,KAAjC,EAAwC,QAAxC;MAGA,MAAM,CAAC,KAAK,CAAC,SAAb,CAA2B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,OAArB,EAA8B,OAA9B,CAA3B;MACA,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,EAArB;MAMA,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAtB,CAA8B,SAAC,MAAD;QAC1B,aAAA;eACA,MAAM,CAAC,MAAP,CAAkB,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlB;MAF0B,CAA9B;MAIA,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,OAA5B,CAAoC,SAAC,KAAD;eAChC,KAAK,CAAC,OAAO,CAAC,OAAd,CAAsB,SAAC,MAAD;AAClB,cAAA;UAAA,aAAA;UACA,MAAM,CAAC,MAAP,CAAkB,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlB;UAGA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,UAAP,EAAV,EAAmC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAnC,EAA+E,MAAM,CAAC,KAAtF,EAA6F,MAAM,CAAC,IAApG;UACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;UAC3B,UAAU,CAAC,KAAX,GAAmB;UAGnB,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,KAAzB;UAGA,qBAAA,CAAsB,UAAtB;iBACA,MAAM,CAAC,QAAQ,CAAC,IAAhB,CAAqB,UAArB;QAdkB,CAAtB;MADgC,CAApC;MAkBA,IAAG,aAAA,GAAgB,CAAnB;QACI,MAAM,CAAC,KAAK,CAAC,SAAb,CAAuB,MAAvB;QACA,MAAM,CAAC,KAAK,CAAC,WAAb,CAAyB,MAAzB;QACA,MAAM,CAAC,KAAK,CAAC,OAAb,CAAqB,EAArB,EAHJ;;aAKA,MAAM,CAAC,KAAK,CAAC,KAAb,CAAmB,GAAnB,EAAwB,CAAxB;IAjDc;IAmDlB,eAAA,GAAkB,SAAA;aACd,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAtB,CAA8B,SAAC,MAAD;AAE1B,YAAA;QAAA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,UAAP,EAAV,EAAmC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAnC,EAA+E,MAAM,CAAC,KAAtF,EAA6F,OAA7F;QACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;eAC3B,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,KAAzB;MAJ0B,CAA9B;IADc;IAOlB,eAAA,GAAkB,SAAA;MAEd,IAAG,MAAM,CAAC,QAAP,KAAqB,MAAxB;eACI,MAAM,CAAC,QAAQ,CAAC,OAAhB,CAAwB,SAAC,MAAD;iBACpB,MAAM,CAAC,MAAP,CAAc,IAAd;QADoB,CAAxB,EADJ;;IAFc;IAMlB,qBAAA,GAAwB,SAAC,MAAD;MAEpB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,OAAtC,EAA+C,SAAC,KAAD;AAE3C,YAAA;QAAA,UAAG,MAAM,CAAC,KAAP,EAAA,aAAgB,MAAM,CAAC,UAAvB,EAAA,GAAA,MAAH;UACI,MAAM,CAAC,UAAP,GAAoB,UAAA,CAAW,MAAM,CAAC,UAAlB,EAA8B,MAAM,CAAC,KAAK,CAAC,EAA3C,EADxB;SAAA,MAAA;UAGI,MAAM,CAAC,aAAP,GAAuB;UACvB,MAAM,CAAC,UAAU,CAAC,IAAlB,CAAuB,MAAM,CAAC,KAA9B,EAJJ;;QAKA,MAAM,CAAC,WAAP,CAAmB,MAAM,CAAC,KAAK,CAAC,EAAhC;QACA,MAAM,CAAC,MAAP,CAAA;eACA,eAAA,CAAA;MAT2C,CAA/C;MAWA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,WAAtC,EAAmD,SAAC,KAAD;AAC/C,YAAA;QAAA,UAAU,MAAM,CAAC,KAAP,EAAA,aAAgB,MAAM,CAAC,UAAvB,EAAA,GAAA,MAAV;AAAA,iBAAA;;QACA,MAAM,CAAC,aAAP,GAAuB,MAAM,CAAC;eAC9B,MAAM,CAAC,MAAP,CAAA;MAH+C,CAAnD;aAKA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,UAAtC,EAAkD,SAAC,KAAD;QAC9C,MAAM,CAAC,aAAP,GAAuB;eACvB,MAAM,CAAC,MAAP,CAAA;MAF8C,CAAlD;IAlBoB;IAuBxB,MAAM,CAAC,WAAP,GAAqB,SAAC,QAAD;MACjB,QAAA,GAAW,QAAA,CAAS,QAAT;MACX,IAAyB,MAAM,CAAC,SAAP,KAAoB,MAA7C;QAAA,MAAM,CAAC,SAAP,GAAmB,GAAnB;;MACA,IAAG,aAAY,MAAM,CAAC,SAAS,CAAC,GAAjB,CAAqB,MAArB,CAAZ,EAAA,QAAA,MAAH;QACI,MAAM,CAAC,SAAP,GAAmB,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,SAAS,CAAC,GAAjB,CAAqB,MAArB,CAAV,EAAwC,QAAxC,EADvB;OAAA,MAAA;QAGI,MAAM,CAAC,SAAS,CAAC,IAAjB,CAAsB,QAAtB,EAHJ;;aAIA,aAAA,CAAA;IAPiB;IASrB,aAAA,GAAgB,SAAA;aACZ,MAAM,CAAC,QAAQ,CAAC,OAAhB,CAAwB,SAAC,MAAD;AACpB,YAAA;QAAA,IAAG,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,EAAA,aAAmB,MAAM,CAAC,SAAS,CAAC,GAAjB,CAAqB,MAArB,CAAnB,EAAA,GAAA,MAAA,CAAA,IAAoD,CAAI,MAAM,CAAC,MAAlE;UACI,MAAM,CAAC,MAAP,GAAgB;UAChB,MAAM,CAAC,OAAP,CAAe,SAAf,EAFJ;;QAGA,IAAG,QAAA,MAAM,CAAC,KAAK,CAAC,EAAb,EAAA,aAAuB,MAAM,CAAC,SAAS,CAAC,GAAjB,CAAqB,MAArB,CAAvB,EAAA,IAAA,KAAA,CAAA,IAAwD,MAAM,CAAC,MAAlE;UACI,MAAM,CAAC,MAAP,GAAgB;iBAChB,MAAM,CAAC,OAAP,CAAe,aAAA,CAAc,MAAM,CAAC,IAArB,CAAf,EAFJ;;MAJoB,CAAxB;IADY;WAShB,MAAM,CAAC,WAAP,GAAqB,SAAA;aACjB,QAAA,CAAS,SAAA;QACL,eAAA,CAAA;eACA,eAAA,CAAA;MAFK,CAAT;IADiB;EA7kBE,CAnC/B;AAAA;;;ACAA;EAAA,OACA,CAAC,MADD,CACQ,QADR,CAEA,CAAC,UAFD,CAEY,eAFZ,EAE6B,SAAC,MAAD,EAAS,KAAT,EAAgB,WAAhB;WAC5B,aAAA,CAAc,MAAd,EAAsB,SAAtB;EAD4B,CAF7B,CAKA,CAAC,UALD,CAKY,cALZ,EAK4B,SAAC,MAAD,EAAS,KAAT,EAAgB,QAAhB,EAA0B,WAA1B;IAC3B,aAAA,CAAc,MAAd,EAAsB,SAAtB;IAEA,MAAM,CAAC,IAAP,GAAc,SAAA;MACb,SAAA,CAAA;MACA,MAAM,CAAC,MAAP,GAAgB;MAChB,MAAM,CAAC,aAAP,GAAuB,MAAM,CAAC,MAAM,CAAC,QAAd,CAAA;aACvB,KAAK,CAAC,IAAN,CAAW,UAAX,EACC;QAAA,aAAA,EAAe,MAAM,CAAC,aAAtB;QACA,aAAA,EAAe,MAAM,CAAC,aADtB;OADD,CAGA,CAAC,IAHD,CAGM,SAAC,QAAD;QACL,OAAA,CAAA;eACA,MAAM,CAAC,MAAP,GAAgB;MAFX,CAHN;IAJa;WAWd,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;aAC/B,QAAA,CAAS,SAAA;QACR,MAAM,CAAC,MAAP,GAAgB,GAAG,CAAC,IAAJ,CAAS,QAAT;eAChB,MAAM,CAAC,MAAM,CAAC,UAAd,CAAA,CAA0B,CAAC,OAA3B,CAAmC,eAAnC;MAFQ,CAAT,EAGE,GAHF;IAD+B,CAAhC;EAd2B,CAL5B;AAAA;;;ACAA;AAAA,MAAA;;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,UAFL,CAEgB,SAFhB,EAE2B,SAAC,MAAD,EAAS,QAAT,EAAmB,YAAnB,EAAiC,KAAjC,EAAwC,QAAxC,EAAkD,KAAlD;AACnB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IAGA,kBAAA,GAAqB;IAGrB,MAAA,GAAS;IAGT,eAAA,GAAkB;IAGlB,MAAM,CAAC,IAAP,GAAc;IAGd,MAAM,CAAC,OAAP,GAAiB;IAGjB,MAAM,CAAC,MAAP,GAAgB;IAEhB,MAAM,CAAC,SAAP,GAAmB;IAEnB,MAAM,CAAC,QAAP,GAAsB;IACtB,MAAM,CAAC,WAAP,GAAsB;IAEtB,MAAM,CAAC,MAAP,CAAc,MAAd,EAAsB,SAAC,MAAD,EAAS,MAAT;MAClB,IAAG,MAAA,KAAU,QAAV,IAAuB,MAAM,CAAC,OAAP,KAAkB,MAA5C;eACI,YAAY,CAAC,UAAb,CAAA,CAAyB,CAAC,IAA1B,CAA+B,SAAC,QAAD;iBAC3B,MAAM,CAAC,OAAP,GAAiB,QAAQ,CAAC;QADC,CAA/B,EADJ;;IADkB,CAAtB;IAKA,MAAM,CAAC,aAAP,GAAuB,SAAA;AACnB,UAAA;MAAA,GAAA,GAAM;MACN,MAAA,GAAY,MAAM,CAAC,IAAP,KAAe,MAAlB,GAA8B,MAAM,CAAC,MAArC,GAAiD,MAAM,CAAC;MACjE,CAAC,CAAC,IAAF,CAAO,MAAP,EAAe,SAAC,KAAD,EAAQ,KAAR;AACX,YAAA;QAAA,IAAG,KAAK,CAAC,iBAAN,KAA6B,IAAhC;UACI,IAAA,GAAO,KAAK,CAAC,iBAAiB,CAAC;iBAC/B,GAAA,IAAU,KAAK,CAAC,iBAAiB,CAAC,SAA3B,GAA0C,CAAC,IAA3C,GAAqD,CAAC,KAFjE;;MADW,CAAf;aAIA;QACI,SAAA,EAAc,GAAA,GAAM,CAAT,GAAgB,CAAhB,GAAuB,CADtC;QAEI,IAAA,EAAM,IAAI,CAAC,GAAL,CAAS,GAAT,CAFV;;IAPmB;IAYvB,MAAM,CAAC,WAAP,GAAqB,SAAC,KAAD;MACjB,KAAK,CAAC,kBAAN,GAA2B;aAC3B,KAAK,CAAC,YAAN,GAAqB,KAAK,CAAC;IAFV;IAIrB,MAAM,CAAC,YAAP,GAAsB,SAAC,KAAD;MAClB,KAAK,CAAC,kBAAN,GAA2B;aAC3B,KAAK,CAAC,gBAAN,GAAyB,KAAK,CAAC;IAFb;IAItB,MAAM,CAAC,YAAP,GAAsB,SAAC,KAAD;MAClB,KAAK,CAAC,kBAAN,GAA2B;MAC3B,KAAK,CAAC,gBAAN,GAAyB,KAAK,CAAC;aAC/B,QAAA,CAAS,SAAA;eACL,CAAA,CAAE,gBAAA,GAAiB,KAAK,CAAC,EAAzB,CAA8B,CAAC,KAA/B,CAAA;MADK,CAAT;IAHkB;IAMtB,MAAM,CAAC,WAAP,GAAsB,SAAC,KAAD,EAAQ,KAAR;MAClB,IAAG,KAAK,CAAC,OAAN,KAAiB,EAApB;eACI,KAAK,CAAC,MAAN,CACI;UAAA,EAAA,EAAI,KAAK,CAAC,EAAV;UACA,YAAA,EAAc,KAAK,CAAC,YADpB;SADJ,EAGE,SAAC,QAAD;UACE,KAAK,CAAC,gBAAN,GAAyB,KAAK,CAAC;iBAC/B,CAAA,CAAE,KAAK,CAAC,MAAR,CAAe,CAAC,IAAhB,CAAA;QAFF,CAHF,EADJ;;IADkB;IAStB,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;aAC5B,CAAA,CAAE,iBAAF,CAAoB,CAAC,SAArB,CAAA;IAD4B,CAAhC;IAGA,MAAM,CAAC,IAAP,GAAc,SAAA;MACV,MAAM,CAAC,OAAP,GAAiB;aACjB,YAAY,CAAC,UAAb,CAAwB;QAAC,MAAA,EAAQ,MAAM,CAAC,MAAhB;OAAxB,CACI,CAAC,IADL,CACU,SAAC,QAAD;QACF,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC;QACzB,OAAO,CAAC,OAAR,CAAgB,MAAM,CAAC,MAAvB,EAA+B,SAAC,KAAD;UAC3B,IAAG,KAAK,CAAC,iBAAT;mBACI,KAAK,CAAC,SAAN,GAAqB,KAAK,CAAC,iBAAiB,CAAC,SAA3B,GAA0C,KAAK,CAAC,iBAAiB,CAAC,IAAlE,GAA4E,CAAC,KAAK,CAAC,iBAAiB,CAAC,KAD3H;WAAA,MAAA;mBAGI,KAAK,CAAC,SAAN,GAAkB,EAHtB;;QAD2B,CAA/B;QAKA,eAAA,CAAA;eACA,MAAM,CAAC,OAAP,GAAiB;MARf,CADV;IAFU;IAcd,MAAM,CAAC,KAAP,GAAe,SAAC,QAAD;aACX,aAAY,MAAM,CAAC,SAAnB,EAAA,QAAA;IADW;IAIf,eAAA,GAAkB,SAAA;aACd,CAAA,CAAE,kBAAF,CAAqB,CAAC,SAAtB,CACI;QAAA,WAAA,EAAa,QAAb;QACA,MAAA,EAAQ,SAAC,KAAD;UACJ,IAAe,KAAf;AAAA,mBAAO,KAAP;;UACA,MAAM,CAAC,UAAP,GAAsB,UAAA,CAAW,MAAM,CAAC,UAAlB,EAA8B,MAAM,CAAC,cAAc,CAAC,EAApD;UACtB,MAAM,CAAC,SAAP,GAAsB,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,SAAjB,EAA4B,MAAM,CAAC,cAAc,CAAC,EAAlD;UACtB,MAAM,CAAC,MAAP,CAAA;iBACA,aAAA,CAAA;QALI,CADR;OADJ;IADc;IAWlB,MAAM,CAAC,aAAP,GAAuB,SAAC,KAAD;aACnB,MAAM,CAAC,cAAP,GAAwB;IADL;IAGvB,eAAA,GAAkB,SAAA;MACd,eAAA,CAAA;MACA,MAAM,CAAC,SAAP,GAAmB;MAGnB,MAAM,CAAC,UAAP,GAAoB;MAEpB,MAAM,CAAC,OAAP,GAAiB;MACjB,MAAM,CAAC,MAAM,CAAC,OAAd,CAAsB,SAAC,KAAD;eAClB,KAAK,CAAC,OAAO,CAAC,OAAd,CAAsB,SAAC,MAAD;AAElB,cAAA;UAAA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,SAAP,EAAV,EAAkC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlC,EAA8E,MAAM,CAAC,GAArF,EAA0F,MAAM,CAAC,IAAjG;UACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;UAC3B,UAAU,CAAC,KAAX,GAAmB;UAGnB,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,GAAzB;UAGA,qBAAA,CAAsB,UAAtB;iBACA,MAAM,CAAC,OAAO,CAAC,IAAf,CAAoB,UAApB;QAXkB,CAAtB;MADkB,CAAtB;aAcA,eAAA,GAAsB,IAAA,eAAA,CAAgB,MAAM,CAAC,GAAvB,EAA4B,MAAM,CAAC,OAAnC,EAClB;QAAA,QAAA,EAAU,EAAV;QAEA,SAAA,EAAW,sBAFX;OADkB;IAtBR;IA2BlB,eAAA,GAAkB,SAAA;aACd,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAtB,CAA8B,SAAC,MAAD;AAE1B,YAAA;QAAA,UAAA,GAAa,SAAA,CAAU,MAAM,CAAC,SAAP,EAAV,EAAkC,IAAA,MAAM,CAAC,IAAI,CAAC,MAAZ,CAAmB,MAAM,CAAC,GAA1B,EAA+B,MAAM,CAAC,GAAtC,CAAlC,EAA8E,MAAM,CAAC,GAArF,EAA0F,OAA1F;QACb,UAAU,CAAC,MAAX,GAAoB,MAAM,CAAC;eAC3B,UAAU,CAAC,MAAX,CAAkB,MAAM,CAAC,GAAzB;MAJ0B,CAA9B;IADc;IAOlB,eAAA,GAAkB,SAAA;MAEd,IAAG,MAAM,CAAC,OAAP,KAAoB,MAAvB;QACI,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;iBACnB,MAAM,CAAC,MAAP,CAAc,IAAd;QADmB,CAAvB,EADJ;;MAIA,IAAG,eAAA,KAAqB,MAAxB;eACI,eAAe,CAAC,YAAhB,CAAA,EADJ;;IANc;IASlB,sBAAA,GAAyB,SAAA;MACrB,IAAG,MAAM,CAAC,MAAM,CAAC,WAAd,KAA6B,KAAhC;QAEI,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;UACnB,MAAM,CAAC,YAAP,GAAsB;iBACtB,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,OAAtB,CAA8B,SAAC,aAAD;mBAC1B,aAAa,CAAC,MAAM,CAAC,OAArB,CAA6B,SAAC,YAAD;AACzB,kBAAA;cAAA,UAAG,YAAY,CAAC,UAAU,CAAC,QAAxB,CAAA,CAAA,EAAA,aAAsC,MAAM,CAAC,KAAK,CAAC,OAAnD,EAAA,GAAA,MAAH;gBACI,MAAM,CAAC,YAAP,GAAsB;gBACtB,MAAM,CAAC,KAAK,CAAC,YAAb,GAA4B,KAFhC;;YADyB,CAA7B;UAD0B,CAA9B;QAFmB,CAAvB;eASA,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;UACnB,IAAyC,CAAI,MAAM,CAAC,YAApD;mBAAA,MAAM,CAAC,UAAP,CAAkB,kBAAlB,EAAA;;QADmB,CAAvB,EAXJ;;IADqB;IAgBzB,MAAM,CAAC,kBAAP,GAA4B,SAAA;aACxB,CAAC,CAAC,KAAF,CAAQ,MAAM,CAAC,MAAf,EAAuB;QAAE,YAAA,EAAc,IAAhB;OAAvB;IADwB;IAI5B,MAAM,CAAC,qBAAP,GAA+B,SAAA;aAC3B,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,MAAhB,EAAwB,SAAC,KAAD;eACpB,CAAC,CAAC,WAAF,CAAc,KAAK,CAAC,YAApB;MADoB,CAAxB;IAD2B;IAK/B,qBAAA,GAAwB,SAAC,MAAD;MAEpB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,OAAtC,EAA+C,SAAC,KAAD;AAE3C,YAAA;QAAA,UAAG,MAAM,CAAC,KAAP,EAAA,aAAgB,MAAM,CAAC,UAAvB,EAAA,GAAA,MAAH;UACI,MAAM,CAAC,UAAP,GAAoB,UAAA,CAAW,MAAM,CAAC,UAAlB,EAA8B,MAAM,CAAC,KAAK,CAAC,EAA3C,EADxB;SAAA,MAAA;UAGI,MAAM,CAAC,aAAP,GAAuB;UACvB,MAAM,CAAC,UAAU,CAAC,IAAlB,CAAuB,MAAM,CAAC,KAA9B,EAJJ;;QAKA,MAAM,CAAC,WAAP,CAAmB,MAAM,CAAC,KAAK,CAAC,EAAhC;QACA,MAAM,CAAC,MAAP,CAAA;eACA,eAAA,CAAA;MAT2C,CAA/C;MAWA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,WAAtC,EAAmD,SAAC,KAAD;AAC/C,YAAA;QAAA,UAAU,MAAM,CAAC,KAAP,EAAA,aAAgB,MAAM,CAAC,UAAvB,EAAA,GAAA,MAAV;AAAA,iBAAA;;QACA,MAAM,CAAC,aAAP,GAAuB,MAAM,CAAC;eAC9B,MAAM,CAAC,MAAP,CAAA;MAH+C,CAAnD;aAKA,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAlB,CAA8B,MAA9B,EAAsC,UAAtC,EAAkD,SAAC,KAAD;QAC9C,MAAM,CAAC,aAAP,GAAuB;eACvB,MAAM,CAAC,MAAP,CAAA;MAF8C,CAAlD;IAlBoB;IAuBxB,MAAM,CAAC,WAAP,GAAqB,SAAC,QAAD;MACjB,QAAA,GAAW,QAAA,CAAS,QAAT;MACX,IAAG,aAAY,MAAM,CAAC,SAAnB,EAAA,QAAA,MAAH;QACI,MAAM,CAAC,SAAP,GAAmB,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,SAAjB,EAA4B,QAA5B,EADvB;OAAA,MAAA;QAGI,MAAM,CAAC,SAAS,CAAC,IAAjB,CAAsB,QAAtB,EAHJ;;aAIA,aAAA,CAAA;IANiB;IAQrB,aAAA,GAAgB,SAAA;aACZ,MAAM,CAAC,OAAO,CAAC,OAAf,CAAuB,SAAC,MAAD;AACnB,YAAA;QAAA,IAAG,OAAA,MAAM,CAAC,KAAK,CAAC,EAAb,EAAA,aAAmB,MAAM,CAAC,SAA1B,EAAA,GAAA,MAAA,CAAA,IAAwC,CAAI,MAAM,CAAC,MAAtD;UACI,MAAM,CAAC,MAAP,GAAgB;UAChB,MAAM,CAAC,OAAP,CAAe,SAAf,EAFJ;;QAGA,IAAG,QAAA,MAAM,CAAC,KAAK,CAAC,EAAb,EAAA,aAAuB,MAAM,CAAC,SAA9B,EAAA,IAAA,KAAA,CAAA,IAA4C,MAAM,CAAC,MAAtD;UACI,MAAM,CAAC,MAAP,GAAgB;iBAChB,MAAM,CAAC,OAAP,CAAe,aAAA,CAAc,MAAM,CAAC,IAArB,CAAf,EAFJ;;MAJmB,CAAvB;IADY;WAUhB,MAAM,CAAC,GAAP,CAAW,gBAAX,EAA6B,SAAC,KAAD,EAAQ,GAAR;AAEzB,UAAA;MAAA,MAAM,CAAC,IAAP,GAAc;MAGd,WAAA,GACI;QAAA,GAAA,EAAK,OAAL;QACA,GAAA,EAAK,OADL;;MAEJ,MAAM,CAAC,YAAP,GAA0B,IAAC,MAAM,CAAC,IAAI,CAAC,YAAb,CAA+B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,WAAW,CAAC,GAAZ,GAAkB,GAAvC,EAA4C,WAAW,CAAC,GAAZ,GAAkB,GAA9D,CAA/B,EAAuG,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,WAAW,CAAC,GAAZ,GAAkB,GAAvC,EAA4C,WAAW,CAAC,GAAZ,GAAkB,GAA9D,CAAvG;MAC1B,MAAM,CAAC,QAAP,GAAkB,IAAK,MAAM,CAAC,IAAI,CAAC;MAGnC,MAAM,CAAC,IAAI,CAAC,SAAZ,CAA0B,IAAC,MAAM,CAAC,IAAI,CAAC,MAAb,CAAqB,OAArB,EAA8B,OAA9B,CAA1B;aACA,MAAM,CAAC,IAAI,CAAC,OAAZ,CAAoB,EAApB;IAbyB,CAA7B;EAlNmB,CAF3B;AAAA;;;ACAA;EAAA,OAAO,CAAC,MAAR,CAAe,QAAf,CACI,CAAC,UADL,CACgB,WADhB,EAC6B,SAAA,GAAA,CAD7B;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,UAFL,CAEgB,iBAFhB,EAEmC,SAAC,MAAD,EAAS,QAAT,EAAmB,KAAnB,EAA0B,UAA1B,EAAsC,MAAtC;AAC3B,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IAEA,MAAM,CAAC,UAAP,GAAoB;IAEpB,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;aAC5B,QAAA,CAAS,SAAA;QACL,MAAM,CAAC,IAAP,CAAA;QAEA,MAAM,CAAC,EAAP,CAAA,CAAW,CAAC,IAAZ,CAAiB,mBAAjB,CAAqC,CAAC,IAAtC,CAA2C,SAAC,KAAD,EAAQ,EAAR;UACvC,CAAA,CAAE,EAAF,CAAK,CAAC,EAAN,CAAS,YAAT,EAAuB,SAAA;YACnB,MAAM,CAAC,kBAAP,GAA4B,QAAA,CAAS,CAAA,CAAE,IAAF,CAAI,CAAC,IAAL,CAAU,IAAV,CAAe,CAAC,OAAhB,CAAwB,QAAxB,EAAkC,EAAlC,CAAT;mBAC5B,MAAM,CAAC,MAAP,CAAA;UAFmB,CAAvB;iBAGA,CAAA,CAAE,EAAF,CAAK,CAAC,EAAN,CAAS,YAAT,EAAuB,SAAA;YACnB,MAAM,CAAC,kBAAP,GAA4B;mBAC5B,MAAM,CAAC,MAAP,CAAA;UAFmB,CAAvB;QAJuC,CAA3C;QAQA,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,aAAnB,GAAmC,SAAC,EAAD;UAC/B,IAAG,MAAM,CAAC,GAAG,CAAC,WAAX,CAAA,CAAwB,CAAC,MAAzB,GAAkC,CAArC;YACI,MAAM,CAAC,GAAG,CAAC,WAAX,CAAA;YACA,MAAM,CAAC,GAAG,CAAC,MAAX,CAAkB,EAAlB,EAFJ;;iBAGA,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,GAAG,CAAC,WAAX,CAAA;QAJa;eAMnC,MAAM,CAAC,UAAP,GAAoB;MAjBf,CAAT,EAkBE,GAlBF;IAD4B,CAAhC;IAqBA,MAAM,CAAC,MAAP,CAAc,UAAd,EAA0B,SAAC,MAAD,EAAS,MAAT;MACtB,IAAU,MAAA,KAAU,MAApB;AAAA,eAAA;;MACA,IAAG,MAAM,CAAC,MAAP,KAAiB,CAApB;eACI,MAAM,CAAC,YAAP,GAAsB,WAAA,CAAY,MAAO,CAAA,CAAA,CAAnB,EAAuB,MAAO,CAAA,CAAA,CAA9B,EAD1B;;IAFsB,CAA1B;IAKA,MAAM,CAAC,MAAP,CAAc,oBAAd,EAAoC,SAAC,MAAD,EAAS,MAAT;AAChC,UAAA;MAAA,IAAG,MAAA,KAAY,MAAf;QACI,eAAA,GAAkB,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,SAAhB,EAA2B,SAAC,QAAD;iBACzC,QAAQ,CAAC,IAAT,KAAiB,MAAjB,IAA2B,QAAQ,CAAC,EAAT,KAAe;QADD,CAA3B;QAKlB,MAAM,CAAC,eAAP,GAAyB,CAAC,CAAC,GAAF,CAAM,eAAN,EAAuB,CAAC,CAAC,KAAzB;eAEzB,OAAO,CAAC,OAAR,CAAgB,MAAM,CAAC,eAAvB,EAAwC,SAAC,QAAD;AACnC,cAAA;UAAA,IAAG,QAAQ,CAAC,IAAT,KAAmB,MAAtB;YACI,WAAA,GAAc,QAAQ,CAAC;YACvB,QAAQ,CAAC,IAAT,GAAgB;mBAChB,QAAQ,CAAC,EAAT,GAAc,YAHlB;;QADmC,CAAxC,EARJ;;IADgC,CAApC;IAgBA,MAAM,CAAC,IAAP,GAAc,SAAA;AACV,UAAA;MAAA,IAAA,GAAO,MAAM,CAAC,QAAS,CAAA,CAAA;MACvB,EAAA,GAAK,MAAM,CAAC,QAAS,CAAA,CAAA;MACrB,UAAU,CAAC,SAAX,CAAA;aACA,KAAK,CAAC,IAAN,CAAW,YAAX,EACI;QAAA,IAAA,EAAM,IAAN;QACA,EAAA,EAAI,EADJ;QAEA,QAAA,EAAU,MAAM,CAAC,YAFjB;OADJ,CAIA,CAAC,IAJD,CAIM,SAAA;AACF,YAAA;QAAA,QAAA,GAAW,iBAAA,CAAkB,IAAlB,EAAwB,EAAxB;QACX,IAAG,QAAA,KAAY,MAAf;UACI,MAAM,CAAC,SAAS,CAAC,IAAjB,CACI;YAAA,IAAA,EAAM,IAAN;YACA,EAAA,EAAI,EADJ;YAEA,QAAA,EAAU,MAAM,CAAC,YAFjB;WADJ,EADJ;SAAA,MAAA;UAMI,QAAQ,CAAC,QAAT,GAAoB,MAAM,CAAC,aAN/B;;eAOA,UAAU,CAAC,OAAX,CAAA;MATE,CAJN;IAJU;IAoBd,MAAM,CAAC,QAAD,CAAN,GAAgB,SAAA;AACZ,UAAA;MAAA,IAAA,GAAO,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,QAAS,CAAA,CAAA,CAAzB,EAA6B,MAAM,CAAC,QAAS,CAAA,CAAA,CAA7C;MACP,EAAA,GAAK,IAAI,CAAC,GAAL,CAAS,MAAM,CAAC,QAAS,CAAA,CAAA,CAAzB,EAA6B,MAAM,CAAC,QAAS,CAAA,CAAA,CAA7C;MAEL,UAAU,CAAC,SAAX,CAAA;aACA,KAAK,CAAC,IAAN,CAAW,cAAX,EACI;QAAA,IAAA,EAAM,IAAN;QACA,EAAA,EAAI,EADJ;OADJ,CAGA,CAAC,IAHD,CAGM,SAAA;QACF,UAAU,CAAC,OAAX,CAAA;QACA,MAAM,CAAC,SAAP,GAAmB,CAAC,CAAC,OAAF,CAAU,MAAM,CAAC,SAAjB,EAA4B,CAAC,CAAC,SAAF,CAAY,MAAM,CAAC,SAAnB,EAA8B;UAAC,IAAA,EAAM,IAAP;UAAa,EAAA,EAAI,EAAjB;SAA9B,CAA5B;QACnB,MAAM,CAAC,QAAP,GAAkB;eAClB,MAAM,CAAC,GAAG,CAAC,WAAX,CAAA;MAJE,CAHN;IALY;IAchB,WAAA,GAAc,SAAC,IAAD,EAAO,EAAP;AACV,UAAA;MAAA,QAAA,GAAW,iBAAA,CAAkB,IAAlB,EAAwB,EAAxB;MACX,IAAG,QAAA,KAAY,MAAf;eAA8B,OAA9B;OAAA,MAAA;eAA6C,QAAQ,CAAC,SAAtD;;IAFU;WAId,iBAAA,GAAoB,SAAC,IAAD,EAAO,EAAP;MAChB,IAAA,GAAO,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,EAAf;MACP,EAAA,GAAK,IAAI,CAAC,GAAL,CAAS,IAAT,EAAe,EAAf;aACL,CAAC,CAAC,IAAF,CAAO,MAAM,CAAC,SAAd,EAAyB;QAAC,IAAA,EAAM,IAAP;QAAa,EAAA,EAAI,EAAjB;OAAzB;IAHgB;EArFO,CAFnC;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,UAFL,CAEgB,WAFhB,EAE6B,SAAC,MAAD,EAAS,KAAT;IACrB,OAAO,CAAC,OAAR,CAAgB,QAAhB,CAAyB,CAAC,KAA1B,CAAgC,SAAA;aAC5B,MAAM,CAAC,CAAP,GAAW,KAAK,CAAC,MAAN,CAAa,QAAQ,CAAC,aAAT,CAAuB,eAAvB,CAAb;IADiB,CAAhC;WAGA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,MAAM,CAAC,CAAC,CAAC,KAAT,CAAA;MACA,SAAA,CAAA;MACA,MAAM,CAAC,UAAP,GAAoB;aACpB,KAAK,CAAC,IAAN,CAAW,OAAX,EACI;QAAA,KAAA,EAAO,MAAM,CAAC,KAAd;QACA,QAAA,EAAU,MAAM,CAAC,QADjB;OADJ,CAGA,CAAC,IAHD,CAGM,SAAC,QAAD;QACF,IAAG,QAAQ,CAAC,IAAT,KAAiB,IAApB;iBACI,QAAQ,CAAC,MAAT,CAAA,EADJ;SAAA,MAAA;UAGI,MAAM,CAAC,UAAP,GAAoB;UACpB,OAAA,CAAA;UACA,MAAM,CAAC,CAAC,CAAC,IAAT,CAAA;iBACA,WAAA,CAAY,gCAAZ,EANJ;;MADE,CAHN;IAJiB;EAJA,CAF7B;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,UAFL,CAEgB,WAFhB,EAE6B,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,WAAtC,EAAmD,QAAnD,EAA6D,UAA7D;AACrB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,MAAP,GAAgB,SAAC,IAAD;aACZ,IAAI,CAAC,KAAL,CAAW,IAAX;IADY;IAGhB,MAAM,CAAC,aAAP,GAAuB,SAAA;aACnB,QAAA,CAAS,SAAA;QACL,CAAA,CAAE,sBAAF,CAAyB,CAAC,IAA1B,CAA+B,SAAC,KAAD,EAAQ,EAAR;UAC3B,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;iBACA,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;QAF2B,CAA/B;eAGA,CAAA,CAAE,eAAF,CAAkB,CAAC,YAAnB,CAAgC,SAAhC;MAJK,CAAT,EAKE,GALF;IADmB;IAQvB,MAAM,CAAC,MAAP,GAAgB,SAAA;MACZ,CAAC,CAAC,MAAF,CAAS,MAAT,EAAiB,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,MAAtB,CAAjB,EAAgD;QAAE,OAAA,EAAS,GAAX;QAAgB,IAAA,EAAM,GAAtB;OAAhD;MACA,MAAM,CAAC,YAAP,GAAsB;aACtB,MAAM,CAAC,WAAP,CAAA;IAHY;IAKhB,MAAM,CAAC,SAAP,GAAmB,SAAC,KAAD;MACf,IAAmB,KAAK,CAAC,OAAN,KAAiB,EAApC;eAAA,MAAM,CAAC,MAAP,CAAA,EAAA;;IADe;IAGnB,QAAA,CAAS,SAAA;MACL,MAAM,CAAC,MAAP,GAAmB,CAAC,CAAC,MAAF,CAAS,MAAT,CAAH,GAAyB,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,MAAF,CAAS,MAAT,CAAX,CAAzB,GAA2D;MAC3E,IAAA,CAAK,MAAM,CAAC,IAAZ;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAHxB,CAAT;IAKA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,IAAA,CAAK,MAAM,CAAC,YAAZ;aACA,QAAA,CAAS,MAAT,EAAiB,MAAM,CAAC,YAAxB;IAHiB;WAKrB,IAAA,GAAO,SAAC,IAAD;AACH,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,UAAA,GAAY,MAAtB,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,OAAO,CAAC,GAAR,CAAY,QAAZ;QACA,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAC9B,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAI,CAAC;QAC5B,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACjC,UAAU,CAAC,gBAAX,GAA8B;eAC9B,MAAM,CAAC,aAAP,CAAA;MANE,CADN;IAHG;EAjCc,CAF7B;AAAA;;;ACAA;EAAA,OACA,CAAC,MADD,CACQ,QADR,CAEA,CAAC,UAFD,CAEY,oBAFZ,EAEkC,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,gBAAtC,EAAwD,iBAAxD,EAA2E,WAA3E,EAAwF,MAAxF;AACjC,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,OAAP,GAAiB,SAAC,IAAD,EAAO,IAAP;aAChB,MAAA,CAAO,IAAP,CAAY,CAAC,GAAb,CAAiB;QAAC,GAAA,EAAM,IAAP;OAAjB;IADgB;IAGjB,MAAM,CAAC,QAAP,GAAkB,SAAC,IAAD;MACjB,IAAG,IAAA,IAAS,CAAC,IAAI,CAAC,GAAL,CAAA,CAAA,GAAiB,IAAA,IAAA,CAAK,IAAL,CAAlB,CAAA,IAAiC,CAA7C;eAAoD,KAApD;OAAA,MAAA;eAA8D,MAA9D;;IADiB;IAGlB,aAAA,GAAgB,SAAA;aACf,QAAA,CAAS,SAAA;QACR,CAAA,CAAE,sBAAF,CAAyB,CAAC,IAA1B,CAA+B,SAAC,KAAD,EAAQ,EAAR;UAC9B,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;iBACA,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;QAF8B,CAA/B;eAGA,CAAA,CAAE,eAAF,CAAkB,CAAC,YAAnB,CAAgC,SAAhC;MAJQ,CAAT,EAKE,GALF;IADe;IAQhB,MAAM,CAAC,MAAP,GAAgB,SAAA;MACf,CAAC,CAAC,MAAF,CAAS,eAAT,EAA0B,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,MAAtB,CAA1B,EAAyD;QAAE,OAAA,EAAS,GAAX;QAAgB,IAAA,EAAM,GAAtB;OAAzD;MACA,MAAM,CAAC,YAAP,GAAsB;aACtB,MAAM,CAAC,WAAP,CAAA;IAHe;IAKhB,MAAM,CAAC,WAAP,GAAqB,SAAC,QAAD;MACpB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,MAAM,CAAC,WAAP,GAAqB;MACrB,MAAM,CAAC,YAAP,GAAsB;MACtB,eAAA,CAAgB,MAAM,CAAC,YAAvB;aACA,MAAM,CAAC,OAAO,CAAC,SAAf,CAAyB,QAAzB,EAAmC,EAAnC,EAAuC,gBAAA,GAAmB,QAAQ,CAAC,WAAT,CAAA,CAA1D;IALoB;IAOrB,MAAM,CAAC,SAAP,GAAmB,SAAC,UAAD;AAClB,UAAA;MAAA,IAAgB,iBAAiB,CAAC,QAAlB,CAA2B,UAA3B,CAAA,KAA4C,KAA5D;AAAA,eAAO,MAAP;;MACA,KAAA,GAAQ,MAAA,CAAA,CAAQ,CAAC,MAAT,CAAgB,YAAhB;MACR,IAAG,UAAU,CAAC,eAAd;eACC,UAAU,CAAC,qBAAX,KAAoC,CAApC,IAA0C,UAAU,CAAC,iBAAX,IAAgC,MAD3E;OAAA,MAAA;eAGE,MAAM,CAAC,OAAP,CAAe,UAAU,CAAC,aAA1B,EAAyC,CAAzC,CAA2C,CAAC,MAA5C,CAAmD,YAAnD,CAAA,IAAoE,MAHtE;;IAHkB;IASnB,QAAA,CAAS,SAAA;MACR,MAAM,CAAC,MAAP,GAAmB,CAAC,CAAC,MAAF,CAAS,eAAT,CAAH,GAAkC,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,MAAF,CAAS,eAAT,CAAX,CAAlC,GAA6E;MAC7F,eAAA,CAAgB,MAAM,CAAC,IAAvB;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAHrB,CAAT;IAKA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACpB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,UAAU,CAAC,WAAX,GAAyB;MACzB,eAAA,CAAgB,MAAM,CAAC,YAAvB;aACA,QAAA,CAAS,eAAT,EAA0B,MAAM,CAAC,YAAjC;IAJoB;WAMrB,eAAA,GAAkB,SAAC,IAAD;AACjB,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,uBAAA,GAAyB,MAAnC,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACL,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAI,CAAC;QAC5B,MAAM,CAAC,WAAP,GAAqB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACxC,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAC9B,UAAU,CAAC,gBAAX,GAA8B;eAC9B,aAAA,CAAA;MALK,CADN;IAHiB;EAlDe,CAFlC;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAGI,CAAC,UAHL,CAGgB,cAHhB,EAGgC,SAAC,MAAD,EAAS,QAAT,EAAmB,UAAnB,EAA+B,KAA/B,EAAsC,cAAtC,EAAsD,SAAtD;AACxB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IAEA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,QAAA,CAAS,SAAA;MACL,IAAA,CAAK,MAAM,CAAC,IAAZ;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAFxB,CAAT;IAIA,aAAA,GAAgB,SAAC,GAAD;MACZ,IAAG,GAAG,CAAC,OAAJ,CAAY,GAAZ,CAAA,KAAsB,CAAC,CAA1B;QACI,GAAA,GAAM,GAAG,CAAC,KAAJ,CAAU,GAAV,CAAe,CAAA,CAAA;QACd,IAAG,GAAH;iBAAY,QAAA,CAAS,GAAT,EAAZ;SAAA,MAAA;iBAA+B,EAA/B;SAFX;OAAA,MAAA;AAII,eAAO,IAAI,CAAC,KAAL,CAAW,QAAA,CAAS,GAAT,CAAA,GAAgB,GAA3B,EAJX;;IADY;IAOhB,MAAM,CAAC,eAAP,GAAyB,SAAC,OAAD;AACrB,UAAA;MAAA,gBAAA,GAAmB;MACnB,CAAC,CAAC,IAAF,CAAO,OAAO,CAAC,IAAf,EAAqB,SAAC,KAAD,EAAQ,YAAR;eACjB,CAAC,CAAC,IAAF,CAAO,YAAP,EAAqB,SAAC,KAAD,EAAQ,GAAR;UACjB,IAA0C,GAAA,KAAS,EAAnD;mBAAA,gBAAA,IAAoB,aAAA,CAAc,GAAd,EAApB;;QADiB,CAArB;MADiB,CAArB;aAGA;IALqB;IAOzB,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,IAAA,CAAK,MAAM,CAAC,YAAZ;aACA,QAAA,CAAS,SAAT,EAAoB,MAAM,CAAC,YAA3B;IAFiB;WAIrB,IAAA,GAAO,SAAC,IAAD;AACH,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,aAAA,GAAe,MAAzB,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,UAAU,CAAC,YAAX,CAAA;QACA,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC;eACvB,MAAM,CAAC,OAAP,GAAiB,MAAM,CAAC,IAAI,CAAC;MAH3B,CADN;IAHG;EA3BiB,CAHhC;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,UAFL,CAEgB,eAFhB,EAEiC,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,OAAtC,EAA+C,aAA/C,EAA8D,OAA9D,EAAuE,YAAvE,EAAqF,WAArF,EAAkG,MAAlG,EAA0G,QAA1G,EAAoH,aAApH;AACzB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,CAAC,CAAC,MAAF,CAAS,aAAT,EAAwB;MAAE,GAAA,EAAM,KAAR;KAAxB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,OAAP,GAAiB,YAAY,CAAC,OAAb,CAAqB,wBAArB;IAEjB,aAAa,CAAC,IAAd,CAAmB,oBAAnB,EAAyC,SAAC,IAAD;AACrC,UAAA;MAAA,IAAG,OAAA,GAAU,QAAA,CAAS,MAAM,CAAC,QAAhB,EAA0B,IAAI,CAAC,UAA/B,CAAb;QACI,OAAO,CAAC,OAAR,GAAkB,IAAI,CAAC;eACvB,MAAM,CAAC,MAAP,CAAA,EAFJ;;IADqC,CAAzC;IAKA,MAAM,CAAC,UAAP,GAAoB,SAAC,UAAD;AAChB,UAAA;MAAA,GAAA,GAAM,MAAA,CAAO,IAAI,CAAC,GAAL,CAAA,CAAP;MACN,UAAA,GAAa,MAAA,CAAW,IAAA,IAAA,CAAK,UAAL,CAAgB,CAAC,OAAjB,CAAA,CAAX;MACb,IAAA,GAAO,GAAG,CAAC,IAAJ,CAAS,UAAT,EAAqB,MAArB;MACP,KAAA,GAAQ,GAAG,CAAC,IAAJ,CAAS,UAAT,EAAqB,OAArB,CAAA,GAAgC,CAAC,IAAA,GAAO,EAAR;aACxC;QAAC,IAAA,EAAM,IAAP;QAAa,KAAA,EAAO,KAApB;;IALgB;IAOpB,MAAM,CAAC,UAAP,GAAoB,SAAC,QAAD;MAChB,MAAM,CAAC,eAAP,GAAyB;MACzB,MAAM,CAAC,YAAP,GAAsB;MACtB,UAAU,CAAC,eAAX,GAA6B;MAC7B,UAAU,CAAC,gBAAX,GAA8B;MAE9B,SAAA,CAAA;MACA,YAAA,CAAa,CAAb;MACA,OAAA,CAAA;aAEA,MAAM,CAAC,OAAO,CAAC,SAAf,CAAyB,WAAA,GAAc,QAAQ,CAAC,WAAT,CAAA,CAAvC,EAA+D,EAA/D,EAAmE,WAAA,GAAc,QAAQ,CAAC,WAAT,CAAA,CAAjF;IAVgB;IAYpB,mBAAA,GAAsB,SAAA;MAClB,MAAM,CAAC,wBAAP,GAAkC,OAAO,CAAC,IAAR,CAAa,MAAM,CAAC,aAApB;aAClC,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,wBAAhB,EAA0C;QAAE,GAAA,EAAM,KAAR;OAA1C;IAFkB;IAItB,QAAA,CAAS,SAAA;MACL,mBAAA,CAAA;MACA,YAAA,CAAa,MAAM,CAAC,IAApB;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAHxB,CAAT;IAKA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,UAAU,CAAC,eAAX,GAA6B;MAC7B,YAAA,CAAa,MAAM,CAAC,YAApB;aACA,QAAA,CAAS,WAAA,GAAc,MAAM,CAAC,eAA9B,EAA+C,MAAM,CAAC,YAAtD;IAJiB;IAMrB,YAAA,GAAe,SAAC,IAAD;AACX,UAAA;MAAA,IAAkC,CAAI,MAAM,CAAC,eAA7C;QAAA,MAAM,CAAC,eAAP,GAAyB,MAAzB;;MAEA,MAAA,GAAS,QAAA,GAAW;MACpB,MAAA,IAAU,SAAA,GAAY,MAAM,CAAC;MAC7B,IAA4C,MAAM,CAAC,OAAP,KAAoB,EAAhE;QAAA,MAAA,IAAU,WAAA,GAAa,MAAM,CAAC,QAA9B;;MAGA,KAAK,CAAC,GAAN,CAAU,cAAA,GAAgB,MAA1B,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC;QACvB,MAAM,CAAC,QAAP,GAAkB,MAAM,CAAC,IAAI,CAAC;QAG9B,MAAM,CAAC,QAAQ,CAAC,OAAhB,CAAwB,SAAC,OAAD;iBACpB,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,OAAvB,CAA+B,SAAC,MAAD;mBAC3B,MAAM,CAAC,MAAP,GAAgB,CAAC,CAAC,MAAF,CAAS,MAAM,CAAC,MAAhB,EAAwB,SAAC,CAAD;qBACpC,CAAC,CAAC;YADkC,CAAxB;UADW,CAA/B;QADoB,CAAxB;eAKA,UAAU,CAAC,gBAAX,GAA8B;MAV5B,CADN;aAaA,KAAK,CAAC,IAAN,CAAW,qBAAX,EACI;QAAA,KAAA,EAAO,MAAM,CAAC,eAAd;QACA,OAAA,EAAS,MAAM,CAAC,OADhB;OADJ,CAGA,CAAC,IAHD,CAGM,SAAC,QAAD;QACF,MAAM,CAAC,oBAAP,GAA8B,QAAQ,CAAC,IAAI,CAAC;QAC5C,MAAM,CAAC,WAAP,GAA8B,QAAQ,CAAC,IAAI,CAAC;QAC5C,OAAO,CAAC,GAAR,CAAY,gBAAZ;eACA,QAAA,CAAS,SAAA;UACL,CAAA,CAAE,2CAAF,CAA8C,CAAC,IAA/C,CAAoD,SAAC,KAAD,EAAQ,EAAR;YAChD,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;mBACA,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;UAFgD,CAApD;iBAGA,CAAA,CAAE,6BAAF,CAAgC,CAAC,YAAjC,CAA8C,SAA9C;QAJK,CAAT;MAJE,CAHN;IArBW;IAkCf,MAAM,CAAC,cAAP,GAAwB,SAAA;aACpB,CAAC,CAAC,MAAF,CAAS,WAAW,CAAC,cAAZ,CAAA,CAAT,EAAuC,SAAC,CAAD;eACnC,MAAM,CAAC,WAAP,IAAuB,MAAM,CAAC,WAAY,CAAA,CAAC,CAAC,EAAF,CAAnB,KAA8B,MAArD,IAAmE,MAAM,CAAC,WAAY,CAAA,CAAC,CAAC,EAAF,CAAnB,GAA2B;MAD3D,CAAvC,CAEC,CAAC;IAHkB;IAKxB,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,YAAY,CAAC,OAAb,CAAqB,sBAArB,EAA6C,MAAM,CAAC,KAApD;aACA,MAAM,CAAC,UAAP,CAAkB,MAAM,CAAC,KAAzB;IAFiB;IAIrB,MAAM,CAAC,UAAP,GAAoB,SAAA;MAChB,YAAY,CAAC,OAAb,CAAqB,wBAArB,EAA+C,MAAM,CAAC,OAAtD;aACA,MAAM,CAAC,UAAP,CAAkB,MAAM,CAAC,eAAzB;IAFgB;WAcpB,MAAM,CAAC,WAAP,GAAqB,SAAC,OAAD;AACjB,UAAA;MAAA,WAAA,GAAc,OAAO,CAAC,IAAR,CAAa,OAAb;MACd,UAAU,CAAC,UAAX,CAAsB,WAAtB,EAAmC,OAAnC,EAA4C,aAA5C;aAEA,MAAM,CAAC,OAAO,CAAC,MAAf,CACI;QAAA,EAAA,EAAI,WAAW,CAAC,EAAhB;QACA,KAAA,EAAO,WAAW,CAAC,KADnB;OADJ,EAGE,SAAC,QAAD;eACE,UAAU,CAAC,UAAX,CAAsB,OAAtB,EAA+B,OAA/B,EAAwC,aAAxC;MADF,CAHF;IAJiB;EAvGI,CAFjC,CAkHI,CAAC,UAlHL,CAkHgB,cAlHhB,EAkHgC,SAAC,MAAD;WACxB,OAAO,CAAC,GAAR,CAAY,MAAZ;EADwB,CAlHhC;AAAA;;;ACAA;EAAA,OACI,CAAC,MADL,CACY,QADZ,CAEI,CAAC,UAFL,CAEgB,cAFhB,EAEgC,SAAC,UAAD,EAAa,MAAb,EAAqB,QAArB,EAA+B,KAA/B,EAAsC,SAAtC,EAAiD,YAAjD,EAA+D,QAA/D,EAAyE,YAAzE,EAAuF,WAAvF,EAAoG,YAApG;AACxB,QAAA;IAAA,aAAA,CAAc,MAAd,EAAsB,SAAtB;IACA,UAAU,CAAC,gBAAX,GAA8B;IAE9B,MAAM,CAAC,kBAAP,GAA4B,SAAA;MACxB,MAAM,CAAC,sBAAP,GAAgC;aAChC,KAAK,CAAC,IAAN,CAAW,0BAAX,EAAuC;QAAC,KAAA,EAAO,SAAR;OAAvC;IAFwB;IAI5B,aAAA,GAAgB,SAAA;aACZ,QAAA,CAAS,SAAA;QACL,CAAA,CAAE,sBAAF,CAAyB,CAAC,IAA1B,CAA+B,SAAC,KAAD,EAAQ,EAAR;UAC3B,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;iBACA,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,SAAX,EAAsB,CAAA,CAAE,EAAF,CAAK,CAAC,IAAN,CAAW,cAAX,CAAtB;QAF2B,CAA/B;eAGA,CAAA,CAAE,eAAF,CAAkB,CAAC,YAAnB,CAAgC,SAAhC;MAJK,CAAT,EAKE,GALF;IADY;IAQhB,MAAM,CAAC,MAAP,GAAgB,SAAA;MACZ,CAAC,CAAC,MAAF,CAAS,SAAT,EAAoB,IAAI,CAAC,SAAL,CAAe,MAAM,CAAC,MAAtB,CAApB,EAAmD;QAAE,OAAA,EAAS,GAAX;QAAgB,IAAA,EAAM,GAAtB;OAAnD;MACA,MAAM,CAAC,YAAP,GAAsB;aACtB,MAAM,CAAC,WAAP,CAAA;IAHY;IAKhB,QAAA,CAAS,SAAA;MACL,MAAM,CAAC,MAAP,GAAmB,CAAC,CAAC,MAAF,CAAS,SAAT,CAAH,GAA4B,IAAI,CAAC,KAAL,CAAW,CAAC,CAAC,MAAF,CAAS,SAAT,CAAX,CAA5B,GAAiE;MACjF,IAAA,CAAK,MAAM,CAAC,IAAZ;aACA,MAAM,CAAC,YAAP,GAAsB,MAAM,CAAC;IAHxB,CAAT;IAKA,MAAM,CAAC,WAAP,GAAqB,SAAA;MACjB,UAAU,CAAC,gBAAX,GAA8B;MAC9B,IAAA,CAAK,MAAM,CAAC,YAAZ;aACA,QAAA,CAAS,SAAT,EAAoB,MAAM,CAAC,YAA3B;IAHiB;WAKrB,IAAA,GAAO,SAAC,IAAD;AACH,UAAA;MAAA,MAAA,GAAS,QAAA,GAAW;aAEpB,KAAK,CAAC,GAAN,CAAU,aAAA,GAAe,MAAzB,CACA,CAAC,IADD,CACM,SAAC,QAAD;QACF,OAAO,CAAC,GAAR,CAAY,QAAZ;QACA,MAAM,CAAC,MAAP,GAAgB,QAAQ,CAAC,IAAI,CAAC;QAC9B,MAAM,CAAC,IAAP,GAAc,QAAQ,CAAC,IAAI,CAAC;QAC5B,MAAM,CAAC,WAAP,GAAqB,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC;QACxC,UAAU,CAAC,gBAAX,GAA8B;eAC9B,aAAA,CAAA;MANE,CADN;IAHG;EA/BiB,CAFhC;AAAA","file":"app.js","sourcesContent":["angular.module(\"Egerep\", ['ngSanitize', 'ngResource', 'ngMaterial', 'ngMap', 'ngAnimate', 'ui.sortable', 'ui.bootstrap', 'angular-ladda', 'mwl.calendar'])\n    .config [\n        '$compileProvider'\n        ($compileProvider) ->\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\n\t]\n    .filter 'cut', ->\n        (value, wordwise, max, nothing = '', tail = '…') ->\n            return nothing if !value or value is ''\n            max = parseInt(max, 10)\n            return value if !max\n            return value if value.length <= max\n            value = value.substr(0, max)\n            if wordwise\n                lastspace = value.lastIndexOf(' ')\n                if lastspace != -1\n                    #Also remove . and , so its gives a cleaner result.\n                    if value.charAt(lastspace - 1) == '.' or value.charAt(lastspace - 1) == ','\n                        lastspace = lastspace - 1\n                    value = value.substr(0, lastspace)\n            value + tail\n    .filter 'hideZero', ->\n        (item) ->\n            if item > 0 then item else null\n    .run ($rootScope, $q, PusherService) ->\n        $rootScope.laroute = laroute\n\n        PusherService.bind 'IncomingRequest', (data) ->\n            request_count = $('#request-count')\n            request_counter = $('#request-counter')\n            animate_speed = 7000\n            request_counter.removeClass('text-success').removeClass('text-danger').css('opacity', 1)\n            if data.delete\n                request_count.text(parseInt(request_count.text()) - 1)\n                request_count.animate({'background-color': '#158E51'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\n                request_counter.text('-1').addClass('text-success').animate({opacity: 0}, animate_speed)\n            else\n                request_count.text(parseInt(request_count.text()) + 1)\n                request_count.animate({'background-color': '#A94442'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\n                request_counter.text('+1').addClass('text-danger').animate({opacity: 0}, animate_speed)\n\n        PusherService.bind 'AttachmentCountChanged', (data) ->\n            attachment_count   = $('#attachment-count')\n            attachment_counter = $('#attachment-counter')\n            animate_speed = 7000\n            attachment_counter.removeClass('text-success').removeClass('text-danger').css('opacity', 1)\n            if data.delete\n                attachment_count.text(parseInt(attachment_count.text()) - 1)\n                attachment_count.animate({'background-color': '#A94442'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\n                attachment_counter.text('-1').addClass('text-danger').animate({opacity: 0}, animate_speed)\n            else\n                attachment_count.text(parseInt(attachment_count.text()) + 1)\n                attachment_count.animate({'background-color': '#158E51'}, animate_speed / 2).animate({'background-color': '#777'}, animate_speed / 2)\n                attachment_counter.text('+1').addClass('text-success').animate({opacity: 0}, animate_speed)\n\n        # отвечает за загрузку данных\n        $rootScope.dataLoaded = $q.defer()\n        # конец анимации front-end загрузки и rebind маск\n        $rootScope.frontendStop = (rebind_masks = true) ->\n            $rootScope.frontend_loading = false\n            $rootScope.dataLoaded.resolve(true)\n            rebindMasks() if rebind_masks\n\n        $rootScope.range = (min, max, step) ->\n          step = step or 1\n          input = []\n          i = min\n          while i <= max\n            input.push i\n            i += step\n          input\n\n          # skip_values – какие значения в enum пропускать\n          # allowed_user_ids – пользователи, которым разрешено выбирать значения\n          # recursion – функция была запущена рекурсивно (внизу)\n        $rootScope.toggleEnum = (ngModel, status, ngEnum, skip_values = [], allowed_user_ids = [], recursion = false) ->\n            # если установлено значение, которое пропускается для обычных пользователей,\n            # то запрещать его смену\n            return if not recursion and (parseInt(ngModel[status]) in skip_values or (isNaN(parseInt(ngModel[status])) and skip_values.indexOf(ngModel[status]) isnt -1)) and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n            ngModel[status] = statuses[status_id]\n            # if in skip_values\n            $rootScope.toggleEnum(ngModel, status, ngEnum, skip_values, allowed_user_ids, true) if ((isNaN(parseInt(ngModel[status])) and skip_values.indexOf(ngModel[status]) isnt -1) or status_id in skip_values) and $rootScope.$$childHead.user.id not in allowed_user_ids\n\n        # обновить + ждать ответа от сервера\n        # раньше я неправильно понимал алгоритм, поэтому без restricted_fields, freeze_restricted тоже можно было toggleить. при необходимости можно менять и переделать как $scope.enumToggles\n        $rootScope.toggleEnumServer = (ngModel, status, ngEnum, Resource, skip_values = [], restricted_fields = [], freeze_restricted = false) ->\n            return if ngModel[status] in restricted_fields and freeze_restricted #если запрешено менять значение\n\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n\n            loop\n                status_id++\n                status_id = 0 if status_id > (statuses.length - 1)\n                value = if isNaN parseInt ngModel[status] then statuses[status_id] else status_id\n                unless value in skip_values or value in restricted_fields\n                    break\n\n            update_data = {id: ngModel.id}\n            update_data[status] = value\n\n            Resource.update update_data, ->\n                ngModel[status] = value\n\n        $rootScope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $rootScope.formatDate = (date, full_year = false) ->\n            return '' if not date\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.formatTimestamp = (timestamp, full_year = false) ->\n            timestamp = +(timestamp + '000') if typeof timestamp is 'string'\n            return '' if not timestamp\n            moment(timestamp).format \"DD.MM.YY в HH:mm\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.dialog = (id) ->\n            $(\"##{id}\").modal 'show'\n            return\n\n        $rootScope.closeDialog = (id) ->\n            $(\"##{id}\").modal 'hide'\n            return\n\n        $rootScope.ajaxStart = ->\n            ajaxStart()\n            $rootScope.saving = true\n\n        $rootScope.ajaxEnd = ->\n            ajaxEnd()\n            $rootScope.saving = false\n\n        $rootScope.findById = (object, id) ->\n            _.findWhere(object, {id: parseInt(id)})\n\n        # prop2 – второй уровень вложенности\n        $rootScope.total = (array, prop, prop2 = false) ->\n            sum = 0\n            $.each array, (index, value) ->\n                v = value[prop]\n                v = v[prop2] if prop2\n                sum += v\n            sum\n\n        $rootScope.deny = (ngModel, prop) ->\n            ngModel[prop] = +(!ngModel[prop])\n\n        $rootScope.formatBytes = (bytes) ->\n          if bytes < 1024\n            bytes + ' Bytes'\n          else if bytes < 1048576\n            (bytes / 1024).toFixed(1) + ' KB'\n          else if bytes < 1073741824\n            (bytes / 1048576).toFixed(1) + ' MB'\n          else\n            (bytes / 1073741824).toFixed(1) + ' GB'\n","angular\n    .module 'Egerep'\n\n    .factory 'Model', ($resource) ->\n        $resource 'api/models/:id', {},\n            update:\n                method: 'PUT'\n\n\n\n    #\n    #   LIST CONTROLLER\n    #\n    .controller \"ModelsIndex\", ($scope, $timeout, Model) ->\n        $scope.models = Model.query()\n\n\n\n    #\n    #   ADD/EDIT CONTROLLER\n    #\n    .controller \"ModelsForm\", ($scope, $timeout, $interval, Model) ->\n        # get teacher\n        $timeout ->\n            $scope.model = Model.get {id: $scope.id} if $scope.id > 0\n","angular.module('Egerep')\n    .controller 'AccountsHiddenCtrl', ($scope, Grades, Attachment) ->\n        bindArguments($scope, arguments)\n        angular.element(document).ready ->\n            bindDraggable()\n\n        # draggable\n        bindDraggable = ->\n            $(\".client-draggable\").draggable\n                helper: 'clone'\n                revert: 'invalid'\n                appendTo: 'body'\n                activeClass: 'drag-active'\n                start: (event, ui) ->\n                    $(this).css \"visibility\", \"hidden\"\n                stop: (event, ui) ->\n                    $(this).css \"visibility\", \"visible\"\n\n            $(\".client-droppable\").droppable\n                tolerance: 'pointer'\n                hoverClass: 'client-droppable-hover'\n                drop: (event, ui) ->\n                    # ui.draggable.remove()\n                    client_id      = $(ui.draggable).data('id')\n                    client         = $scope.findById($scope.clients, client_id)\n                    if client.archive_state isnt 'possible'\n                        $scope.clients = removeById($scope.clients, client_id)\n\n                        Attachment.update\n                            id: client.attachment_id\n                            hide: 0\n\n                        $scope.visible_clients_count++\n                    $scope.$apply()\n    .controller 'AccountsCtrl', ($rootScope, $scope, $http, $timeout, Account, PaymentMethods, Archive, Grades, Attachment, AttachmentState, AttachmentStates, Weekdays, PhoneService, AttachmentVisibility, DebtTypes, YesNo, Tutor, ArchiveStates, Checked) ->\n        bindArguments($scope, arguments)\n        $scope.current_scope  = $scope\n        $scope.current_period = 0\n        $scope.all_displayed  = false\n\n        $scope.updateArchive = (field, set) ->\n            # просто update выдавал ошибку field doesnt exists\n            fillables = ['id', 'state', 'checked']\n            archive = {}\n            for fillable in fillables\n                 archive[fillable] = $scope.popup_attachment.archive[fillable]\n            $rootScope.toggleEnum(archive, field, set)\n            $scope.Archive.update archive\n            , (response)->\n                _.extendOwn($scope.popup_attachment.archive, archive)\n\n        angular.element(document).ready ->\n            $scope.loadPage()\n\n        # get index\n        $scope.getIndex = (a, b) ->\n            return b if a is 0\n            index = 0\n            $.each $scope.tutor.last_accounts, (i, account) ->\n                return if i >= a\n                index += $scope.getDates(i).length\n            index + b\n\n        $scope.loadPage = (type) ->\n            $rootScope.frontend_loading = true\n            $http.get \"api/accounts/#{$scope.tutor_id}\" + (if $scope.current_period then \"?date_limit=#{$scope.date_limit}\" else \"\")\n            .success (response) ->\n                    renderData(response)\n                    $scope.current_period++\n\n        renderData = (data) ->\n            # если у нового tutor last_accounts=null, то загрузили всё\n            if data.account is null\n                $scope.date_limit = $scope.first_attachment_date\n                $scope.all_displayed = true\n            else\n                if not $scope.current_period\n                    $scope.tutor = data\n                else\n                    $scope.tutor.last_accounts.unshift(data.account)\n                    $scope.date_limit = moment(data.account.date_end).subtract(7, 'days').format('YYYY-MM-DD')\n                    $scope.left       = data.left\n                    if data.accounts_in_week.length\n                        $scope.tutor.last_accounts = data.accounts_in_week.concat($scope.tutor.last_accounts)\n            $rootScope.frontend_loading = false\n            $('.accounts-table').stickyTableHeaders('destroy')\n            $timeout ->\n                $('.accounts-table').stickyTableHeaders()\n                bindDraggable()\n                $('.right-table-scroll').scroll ->\n                    $(window).trigger('resize.stickyTableHeaders')\n\n        getAccountStartDate = (index) ->\n            if index > 0\n                moment($scope.tutor.last_accounts[index - 1].date_end).add(1, 'days').toDate()\n            else\n                new Date $scope.date_limit\n\n        getAccountEndDate = (index) ->\n            if (index + 1) is $scope.tutor.last_accounts.length\n                ''\n            else\n                moment($scope.tutor.last_accounts[index + 1].date_end).subtract(1, 'days').toDate()\n\n        $scope.getDay = (date) ->\n            moment(date).day()\n\n        $scope.accountInfo = (client) ->\n            $scope.popup_attachment = null\n            $('#account-info').modal 'show'\n\n            $scope.selected_client = client\n\n            Attachment.get {id: client.attachment_id}, (response) ->\n                $scope.popup_attachment = response\n\n        $scope.changeDateDialog = (index) ->\n            $('#date-end-change').datepicker('destroy')\n            $('#date-end-change').datepicker\n                language\t: 'ru'\n                autoclose\t: true\n                orientation\t: 'bottom auto'\n                startDate   : getAccountStartDate(index)\n                endDate     : getAccountEndDate(index)\n\n            $scope.selected_account = $scope.tutor.last_accounts[index]\n            $scope.change_date_end = $scope.formatDate($scope.selected_account.date_end, true)\n            $scope.dialog 'change-account-date'\n\n        $scope.changeDate = ->\n            $scope.selected_account.date_end = convertDate($scope.change_date_end)\n            Account.update\n                id: $scope.selected_account.id\n                date_end: $scope.selected_account.date_end\n            # , (response) ->\n            #     $scope.selected_account = response\n            $scope.closeDialog 'change-account-date'\n\n        $scope.remove = (account) ->\n            bootbox.confirm 'Удалить встречу?', (result) ->\n                if result is true\n                    Account.delete {id: account.id}, ->\n                        $scope.tutor.last_accounts = removeById($scope.tutor.last_accounts, account.id)\n\n\n        $scope.save = ->\n            $.each $scope.tutor.last_accounts, (index, account) ->\n                Account.update account\n\n        $scope.getFakeDates = ->\n            dates = []\n            current_date = moment().subtract(60, 'days').format('YYYY-MM-DD')\n            while current_date <= moment().format('YYYY-MM-DD')\n                dates.push current_date\n                current_date = moment(current_date).add(1, 'days').format('YYYY-MM-DD')\n            dates\n\n\n        $scope.getDates = (index) ->\n            dates = []\n            # если нулевой элемент, то отсчитываем от даты первой стыковки (самой ранней стыковки)\n            # иначе отсчитываем от даты конца предыдущего периода\n            if not index\n                current_date = $scope.date_limit\n            else\n                current_date = moment($scope.tutor.last_accounts[index - 1].date_end).add(1, 'days').format('YYYY-MM-DD')\n\n            while (current_date <= $scope.tutor.last_accounts[index].date_end)\n                dates.push current_date\n                current_date = moment(current_date).add(1, 'days').format('YYYY-MM-DD')\n            dates\n\n        # откуда можно выбирать дату в календаре\n        getCalendarStartDate = ->\n            if $scope.tutor.last_accounts.length > 0\n                date_end = $scope.tutor.last_accounts[$scope.tutor.last_accounts.length - 1].date_end\n                moment(date_end).add(1, 'days').toDate()\n            else\n                new Date $scope.date_limit\n\n        $scope.addAccountDialog = ->\n            $scope.new_account_date_end = ''\n            # @todo: узнать, как делается refresh\n            $('#date-end').datepicker('destroy')\n            $('#date-end').datepicker\n                language\t: 'ru'\n                startDate   : getCalendarStartDate()\n                autoclose\t: true\n                orientation\t: 'bottom auto'\n\n            $scope.dialog 'add-account'\n\n        $scope.addAccount = ->\n            Account.save\n                date_end: convertDate($scope.new_account_date_end)\n                tutor_id: $scope.tutor.id\n            , (new_account) ->\n                $scope.tutor.last_accounts.push(new_account)\n                $scope.closeDialog 'add-account'\n\n        getCommission = (val) ->\n            if val.indexOf('/') isnt -1\n                val = val.split('/')[1]\n                return if val then parseInt(val) else 0\n            else\n                return Math.round(parseInt(val) * .25)\n\n        # всего занятий\n        $scope.totalLessons = (account, client_id) ->\n            lessons_count = 0\n            $.each $scope.tutor.last_accounts, (index, account) ->\n                lessons_count += $scope.periodLessons(account, client_id)\n            lessons_count || null\n\n        # всего занятий в периоде\n        $scope.periodLessons = (account, client_id) ->\n            return null if not account.data[client_id]\n            lessons_count = 0\n            $.each account.data[client_id], (index, value) ->\n                lessons_count++ if value\n            lessons_count || null\n            # if account.data[client_id] then Object.keys(account.data[client_id]).length else 0\n\n        $scope.totalCommission = (account) ->\n            total_commission = 0\n            $.each account.data, (index, account_data) ->\n                $.each account_data, (index, val) ->\n                    total_commission += getCommission(val) if val isnt ''\n            total_commission\n\n\n\n        ## Управление кареткой ##\n\n        $scope.selectRow = (date) ->\n            $('.tr-' + date).addClass 'selected'\n            return\n        $scope.deselectRow = (date) ->\n            $('.tr-' + date).removeClass 'selected'\n            return\n\n\n        ###\n        * Перевести курсор, если элемент существует\n        ###\n\n        moveCursor = (x, y, direction) ->\n            # Определяем направление и изменяем координаты соответствующим образом\n            switch direction\n                when \"left\"     then x--\n                when \"right\"    then x++\n                when \"up\"       then y = moment(y).subtract('days', 1).format 'YYYY-MM-DD'\n                when \"down\"     then y = moment(y).add('days', 1).format 'YYYY-MM-DD'\n\n            # Если двигаемся в несуществующие поля\n            return if x < 0 or not $('#i-' + y + '-' + x).length\n\n            # Получаем новый элемент\n            el = $('#i-' + y + '-' + x)\n\n            # Если элемент существует, двигаемся туда\n            if el.length\n                $scope.caret = 0\n                el.focus()\n            else\n                moveCursor x, y, direction\n                # Если не получилось, пытаемся передвинуться еще раз (перепрыгнуть через несколько ячеек сразу)\n            return\n\n        $scope.caret = 0 # Позиция каретки\n        $scope.periodsCursor = (y, x, event, account_data, date) ->\n            # console.log y, x, event, $(\"#\" + y + \"-\" + x)\n            # Получаем начальный элемент (с которого возможно сдвинемся)\n            original_element = $(\"#i-#{y}-#{x}\")\n\n            # Если был нажат 0, то подхватываем значение поля сверху\n            if original_element.val() is \"0\" and original_element.val().length\n                while true\n                    d = moment(d or y).subtract('days', 1).format 'YYYY-MM-DD'\n                    new_element = $('#i-' + d + '-' + x)\n                    break if not new_element.length\n                    # Поверяем существует ли поле сверху\n                    if new_element.val()\n                        # Присваеваем текущему элементу значение сверху\n                        event.preventDefault()\n                        account_data[date] = new_element.val()\n                        break\n\n            # Если внутри цифр, то не прыгаем к следующему элементу\n            if original_element.caret() != $scope.caret\n                $scope.caret = original_element.caret()\n                return\n\n            switch event.which\n                # ВЛЕВО\n                when 37 then moveCursor(x, y, \"left\")\n                # ВВЕРХ\n                when 38 then moveCursor(x, y, \"up\")\n                # ВПРАВО\n                when 39 then moveCursor(x, y, \"right\")\n                # ВНИЗ\n                when 13, 40 then moveCursor(x, y, \"down\")\n\n\n        # draggable\n        bindDraggable = ->\n            $(\".client-draggable\").draggable\n                helper: 'clone'\n                revert: 'invalid'\n                appendTo: 'body'\n                activeClass: 'drag-active'\n                start: (event, ui) ->\n                    $(this).css \"visibility\", \"hidden\"\n                stop: (event, ui) ->\n                    $(this).css \"visibility\", \"visible\"\n\n            $(\".client-droppable\").droppable\n                tolerance: 'pointer'\n                hoverClass: 'client-droppable-hover'\n                drop: (event, ui) ->\n                    # ui.draggable.remove()\n                    client_id      = $(ui.draggable).data('id')\n                    client         = $scope.findById($scope.clients, client_id)\n                    if client.archive_state isnt 'possible'\n                        $scope.clients = removeById($scope.clients, client_id)\n\n                        ajaxStart()\n                        Attachment.update\n                            id: client.attachment_id\n                            hide: 1\n                        , ->\n                            ajaxEnd()\n\n                        $scope.hidden_clients_count++\n                    $scope.$apply()\n","angular.module 'Egerep'\n    .controller 'AddToList', ($scope, Genders, Grades, Subjects, TutorStates, Destinations, TutorService, PhoneService, RequestList) ->\n        bindArguments($scope, arguments)\n\n        # transparent marker opacity\n        TRANSPARENT_MARKER = 0.3\n\n        # differentiate single & double click\n        clicks = 0\n\n        # marker clusterer\n        markerClusterer = undefined\n\n        # mode: 'map' | 'list'\n        $scope.mode = 'map'\n\n        # loading map\n        $scope.loading = false\n\n        angular.element(document).ready ->\n            $scope.list = new RequestList($scope.list)\n            $('.map-tutor-list').droppable()\n\n        $scope.getHours = (minutes) ->\n            Math.floor(minutes / 60)\n\n        $scope.getMinutes = (minutes) ->\n            minutes % 60\n\n        $scope.find = ->\n            $scope.loading = true\n            TutorService.getFiltered {search: $scope.search, client_marker: $scope.client.markers[0]}\n                .then (response) ->\n                    $scope.tutors = response.data\n                    showTutorsOnMap()\n                    findIntersectingMetros()\n                    repaintChosen()\n                    $scope.loading = false\n\n        # determine whether tutor had already been added\n        $scope.added = (tutor_id) ->\n            tutor_id in $scope.list.tutor_ids.map(Number)\n\n        # rebind draggable\n        rebindDraggable = ->\n            $('.temporary-tutor').draggable\n                containment: 'window'\n                revert: (valid) ->\n                    return true if valid\n                    $scope.tutor_list = removeById($scope.tutor_list, $scope.dragging_tutor.id)\n                    $scope.$apply()\n\n        # remember dragging tutor\n        $scope.startDragging = (tutor) ->\n            $scope.dragging_tutor = tutor\n\n        showTutorsOnMap = ->\n            unsetAllMarkers()\n            $scope.marker_id = 1\n\n            # временный список репетиторов\n            $scope.tutor_list = []\n\n            $scope.markers = []\n            $scope.tutors.forEach (tutor) ->\n                tutor.markers.forEach (marker) ->\n                    # Создаем маркер\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\n                    new_marker.metros = marker.metros\n                    new_marker.tutor = tutor\n\n                    # Добавляем маркер на карту\n                    new_marker.setMap($scope.map)\n\n                    # Добавляем ивент удаления маркера\n                    bindTutorMarkerEvents(new_marker)\n                    $scope.markers.push new_marker\n            # @todo: consider using Marker Clusterer\n            markerClusterer = new MarkerClusterer $scope.map, $scope.markers,\n                gridSize: 10\n                # maxZoom: 12\n                imagePath: 'img/maps/clusterer/m'\n\n        showClientOnMap = ->\n            $scope.client.markers.forEach (marker) ->\n                # Создаем маркер\n                new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, 'white')\n                new_marker.metros = marker.metros\n                new_marker.setMap($scope.map)\n\n        unsetAllMarkers = ->\n            # unset markers\n            if $scope.markers isnt undefined\n                $scope.markers.forEach (marker) ->\n                    marker.setMap null\n            # unset clusterer\n            if markerClusterer isnt undefined\n                markerClusterer.clearMarkers()\n\n        findIntersectingMetros = ->\n            if $scope.search.destination is 'r_k'\n                # find intersecting markers\n                $scope.markers.forEach (marker) ->\n                    marker.intersecting = false\n                    $scope.client.markers.forEach (client_marker) ->\n                        client_marker.metros.forEach (client_metro) ->\n                            if client_metro.station_id.toString() in marker.tutor.svg_map\n                                marker.intersecting = true\n                                marker.tutor.intersecting = true\n                                return\n                # paint non-intersecting with half opacity\n                $scope.markers.forEach (marker) ->\n                    marker.setOpacity(TRANSPARENT_MARKER) if not marker.intersecting\n\n        # получить репетиторов, которые выезжают на ближайшую станцию метро клиента\n        $scope.intersectingTutors = ->\n            _.where($scope.tutors, { intersecting: true })\n\n        # получить репетиторов, которые НЕ доезжают до ближайшей станции\n        $scope.notIntersectingTutors = ->\n            _.filter $scope.tutors, (tutor) ->\n                _.isUndefined(tutor.intersecting)\n\n\n        bindTutorMarkerEvents = (marker) ->\n            # double click custom handler with delay\n            google.maps.event.addListener marker, 'click', (event) ->\n                clicks++\n                if clicks is 1\n                    setTimeout ->\n                        if clicks is 1\n                            # single click\n                            if marker.tutor in $scope.tutor_list\n                                $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\n                            else\n                                $scope.hovered_tutor = null\n                                $scope.tutor_list.push marker.tutor\n                            $scope.$apply()\n                            rebindDraggable()\n                        else\n                            # double click\n                            $scope.addOrRemove(marker.tutor.id)\n                        clicks = 0\n                    , 250\n\n            google.maps.event.addListener marker, 'dblclick', (event) ->\n                clicks++\n\n            google.maps.event.addListener marker, 'mouseover', (event) ->\n                return if marker.tutor in $scope.tutor_list\n                $scope.hovered_tutor = marker.tutor\n                $scope.$apply()\n\n            google.maps.event.addListener marker, 'mouseout', (event) ->\n                $scope.hovered_tutor = null\n                $scope.$apply()\n\n        # add or remove tutor from list\n        $scope.addOrRemove = (tutor_id) ->\n            tutor_id = parseInt(tutor_id)\n            if tutor_id in $scope.list.tutor_ids.map(Number)\n                $scope.list.tutor_ids = _.without($scope.list.tutor_ids.map(Number), tutor_id)\n            else\n                $scope.list.tutor_ids.push(tutor_id)\n            repaintChosen()\n            $scope.list.$update()\n\n        repaintChosen = ->\n            $scope.markers.forEach (marker) ->\n                if marker.tutor.id in $scope.list.tutor_ids.map(Number) and not marker.chosen\n                    marker.chosen = true\n                    marker.setOpacity(1)\n                    marker.setIcon ICON_BLUE\n                if marker.tutor.id not in $scope.list.tutor_ids.map(Number) and marker.chosen\n                    marker.chosen = false\n                    marker.setOpacity if marker.intersecting then 1 else TRANSPARENT_MARKER\n                    marker.setIcon getMarkerType(marker.type)\n\n\n        $scope.$on 'mapInitialized', (event, map) ->\n            # Запоминаем карту после инициалицации\n            $scope.gmap = map\n\n            # generate recommended search bounds\n            INIT_COORDS =\n                lat: 55.7387\n                lng: 37.6032\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\n            $scope.geocoder = new (google.maps.Geocoder)\n\n            # Зум и центр карты по умолчанию\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n            $scope.gmap.setZoom 11\n\n            showClientOnMap()\n            $scope.tutors = $scope.list.tutors\n            showTutorsOnMap()\n            repaintChosen()\n","angular\n.module 'Egerep'\n.factory 'Archives', ($resource) ->\n\t$resource 'api/archives/:id', {},\n\t\tupdate:\n\t\t\tmethod: 'PUT'\n.controller 'ArchivesIndex', ($rootScope, $scope, $timeout, $http, AttachmentService, UserService, PhoneService, Subjects, Grades, Presence, YesNo, AttachmentVisibility, AttachmentErrors, ArchiveStates, Checked) ->\n\tbindArguments($scope, arguments)\n\t$rootScope.frontend_loading = true\n\n\trefreshCounts = ->\n\t\t$timeout ->\n\t\t\t$('.selectpicker option').each (index, el) ->\n\t\t\t\t$(el).data 'subtext', $(el).attr 'data-subtext'\n\t\t\t\t$(el).data 'content', $(el).attr 'data-content'\n\t\t\t$('.selectpicker').selectpicker 'refresh'\n\t\t, 100\n\t$scope.keyFilter = (event) ->\n\t\t$scope.filter() if event.keyCode is 13\n        \n\t$scope.filter = ->\n\t\t$.cookie('archives', JSON.stringify($scope.search), { expires: 365, path: '/' });\n\t\t$scope.current_page = 1\n\t\t$scope.pageChanged()\n\n\t$scope.changeState = (state_id) ->\n\t\t$rootScope.frontend_loading = true\n\t\t$scope.archives = []\n\t\t$scope.current_page = 1\n\t\tloadArchives $scope.current_page\n\t\twindow.history.pushState(state_id, '', 'archives/' + state_id.toLowerCase());\n\n\t$timeout ->\n\t\t$scope.search = if $.cookie('archives') then JSON.parse($.cookie('archives')) else {}\n\t\tloadArchives $scope.page\n\t\t$scope.current_page = $scope.page\n\n\t$scope.pageChanged = ->\n\t\t$rootScope.frontend_loading = true\n\t\t$rootScope.archives = []\n\t\tloadArchives $scope.current_page\n\t\tpaginate('archives', $scope.current_page)\n\n\tloadArchives = (page) ->\n\t\tparams = '?page=' + page\n\n\t\t$http.get \"api/archives#{ params }\"\n\t\t.then (response) ->\n\t\t\t$scope.data = response.data.data\n\t\t\t$scope.archives = response.data.data.data\n\t\t\t$scope.counts = response.data.counts\n\t\t\t$rootScope.frontend_loading = false\n\t\t\trefreshCounts()\n","angular\n    .module 'Egerep'\n    .factory 'Attachment', ($resource) ->\n        $resource 'api/attachments/:id', {},\n            update:\n                method: 'PUT'\n    .controller 'AttachmentsStats', ($scope, $rootScope, $http, $timeout, Months, UserService) ->\n        $scope.getYears = ->\n            count = 4\n            i = 0\n            years = []\n            while i < count\n                years.push moment().subtract('year', i).format('YYYY')\n                i++\n            years\n\n        $scope.getUsersByYear = (year) ->\n            _.chain($scope.data).where({year: parseInt(year)}).pluck('user_id').uniq().value()\n\n        $scope.getDays = ->\n            _.range(1, 32)\n\n        $scope.dayExtremum = (day, year, val, mode) ->\n            return false if not val\n\n            condition = {year: parseInt(year)}\n            condition.day = parseInt(day) if day isnt null\n\n            data = _.where $scope.data, condition\n\n            max = -999\n            min = 999\n\n            data.forEach (d) ->\n                max = d.count if d.count > max\n                min = d.count if d.count < min\n\n            extremum = if mode is 'max' then max else min\n            console.log(extremum, val, year) if day is null\n            val == extremum\n\n        $scope.totalExtremum = (year, val) ->\n            return false if not val\n\n            user_ids = $scope.getUsersByYear(year)\n            return false if not user_ids.length\n\n            max = -9999\n\n            user_ids.forEach (user_id) ->\n                v = $scope.getUserTotal(year, user_id)\n                max = v if v > max\n\n            val == max\n\n        $scope.getUserTotal = (year, user_id) ->\n            data = _.where $scope.data,\n                year: parseInt(year)\n                user_id: parseInt(user_id)\n            sum = 0\n            data.forEach (d) ->\n                sum += d.count\n            sum or ''\n\n        $scope.getDayTotal = (year, day = null) ->\n            condition = {year: parseInt(year)}\n            condition.day = parseInt(day) if day isnt null\n            data = _.where $scope.data, condition\n            sum = 0\n            data.forEach (d) ->\n                sum += d.count\n            sum or ''\n\n        $scope.getValue = (day, year, user_id) ->\n            d = _.find scope.data,\n                day: parseInt(day)\n                year: parseInt(year)\n                user_id: parseInt(user_id)\n            if d isnt undefined then d.count else ''\n\n        $scope.$watch 'month', (newVal, oldVal) ->\n            $rootScope.frontend_loading = true\n            $http.post 'api/attachments/stats', {month: newVal}\n            .then (response) ->\n                $rootScope.frontend_loading = false\n                $scope.data = response.data\n        bindArguments($scope, arguments)\n    .controller 'AttachmentsIndex', ($rootScope, $scope, $timeout, $http, AttachmentStates, AttachmentService, UserService, PhoneService, Subjects, Grades, Presence, YesNo, AttachmentVisibility, AttachmentErrors) ->\n        bindArguments($scope, arguments)\n        $rootScope.frontend_loading = true\n\n        $scope.recalcAttachmentErrors = ->\n            $scope.attachment_errors_updating = true\n            $http.post 'api/command/model-errors', {model: 'attachments'}\n\n        refreshCounts = ->\n            $timeout ->\n                $('.selectpicker option').each (index, el) ->\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\n                    $(el).data 'content', $(el).attr 'data-content'\n                $('.selectpicker').selectpicker 'refresh'\n\n                $('.attachment-filters button').css 'background', 'none'\n                $('.attachment-filters select > option[value!=\"\"]:selected').parent('select').siblings('button').css('background', '#dceee5')\n            , 100\n\n        $scope.filter = ->\n            $.cookie(\"attachments\", JSON.stringify($scope.search), { expires: 365, path: '/' });\n            $scope.current_page = 1\n            $scope.pageChanged()\n\n        $scope.changeState = (state_id) ->\n            $rootScope.frontend_loading = true\n            $scope.attachments = []\n            $scope.current_page = 1\n            loadAttachments($scope.current_page)\n            window.history.pushState(state_id, '', 'attachments/' + state_id.toLowerCase());\n\n        $timeout ->\n            $scope.search = if $.cookie(\"attachments\") then JSON.parse($.cookie(\"attachments\")) else {}\n            loadAttachments $scope.page\n            $scope.current_page = $scope.page\n\n        $scope.pageChanged = ->\n            $rootScope.frontend_loading = true\n            $rootScope.attachments = []\n            loadAttachments $scope.current_page\n            paginate('attachments', $scope.current_page)\n\n        loadAttachments = (page) ->\n            params = '?page=' + page\n\n            $http.get \"api/attachments#{ params }\"\n            .then (response) ->\n                $scope.data = response.data.data\n                $scope.attachments = response.data.data.data\n                $scope.counts = response.data.counts\n                $rootScope.frontend_loading = false\n                refreshCounts()\n    .controller 'AttachmentsNew', ($rootScope, $scope, $timeout, $http, AttachmentStates, AttachmentService, UserService, PhoneService, Subjects, Grades, Presence, YesNo, AttachmentVisibility, AttachmentErrors) ->\n        bindArguments($scope, arguments)\n        $rootScope.frontend_loading = true\n\n        # track comment loading.\n        $rootScope.loaded_comments = 0\n        $scope.$watch () ->\n            console.log $rootScope.loaded_comments\n            $rootScope.loaded_comments\n        , (val) ->\n            console.log val\n            $rootScope.frontend_loading = false if $scope.attachments and $scope.attachments.length == val\n        # /track comment loading.\n\n        $scope.daysAgo = (date) ->\n            now = moment(Date.now())\n            date = moment(new Date(date).getTime())\n            now.diff(date, 'days')\n\n        $timeout ->\n            load $scope.page\n            $scope.current_page = $scope.page\n\n        $scope.pageChanged = ->\n            $rootScope.frontend_loading = true\n            $rootScope.loaded_comments = 0\n            load $scope.current_page\n            paginate('attachments/new', $scope.current_page)\n\n        load = (page) ->\n            params = '?page=' + page\n\n            $http.get \"api/attachments/new#{ params }\"\n            .then (response) ->\n                console.log response\n                $scope.counts = response.data.counts\n                $scope.data = response.data\n                $scope.attachments = response.data.data\n                $rootScope.frontend_loading = false if not $scope.attachments.length\n","angular\n.module 'Egerep'\n#\n#   LIST CONTROLLER\n#\n.controller \"CallsMissed\", ($scope, $http, PhoneService) ->\n\tbindArguments($scope, arguments)\n\n\t$scope.deleteCall = (call) ->\n\t\tajaxStart()\n\t\t$http.delete \"calls/\" + call.entry_id, {}\n\t\t.then (response) ->\n\t\t\tajaxEnd()\n\t\t\t$scope.calls = _.without $scope.calls, call","angular\n    .module 'Egerep'\n\n\n\n    #\n    #   LIST CONTROLLER\n    #\n    .controller \"ClientsIndex\", ($scope, $rootScope, $timeout, $http, Client, RequestStates, Request) ->\n        $rootScope.frontend_loading = true\n\n        $scope.pageChanged = ->\n            load $scope.current_page\n            paginate('clients', $scope.current_page)\n\n        load = (page) ->\n            $rootScope.frontend_loading = true\n            params = '?page=' + page\n            params += \"&global_search=#{ $scope.global_search }\" if $scope.global_search\n\n            # update repetitors\n            # @todo: why ugly params? maybe use $http.post instead?\n            $http.get \"api/clients#{ params }\"\n                .then (response) ->\n                    $rootScope.frontendStop()\n                    $scope.data = response.data\n                    $scope.clients = $scope.data.data\n\n        $timeout ->\n            load $scope.page\n            $scope.current_page = $scope.page\n\n    #\n    #   ADD/EDIT CONTROLLER\n    #\n    .controller \"ClientsForm\", ($scope, $rootScope, $timeout, $interval, $http, Client, Request, RequestList, User, RequestStates, Subjects, Grades, Attachment, ReviewStates, ArchiveStates, AttachmentStates, ReviewScores, Archive, Review, ApiService, UserService, RecommendationService, AttachmentService, AttachmentVisibility, Marker, YesNo, Checked) ->\n        bindArguments($scope, arguments)\n        $rootScope.frontend_loading = true\n\n        $scope.is_dragging_teacher = false\n        $scope.sortableOptions =\n            tolerance: 'pointer'\n            activeClass: 'drag-active'\n            helper: 'clone'\n            appendTo: 'body'\n            # drag: (event, ui) ->\n            #     ui.helper.offset(ui.position)\n            start: (e, ui) ->\n                $scope.is_dragging_teacher = true\n                $scope.$apply()\n            stop: (e, ui) ->\n                $scope.is_dragging_teacher = false\n                $scope.$apply()\n                saveSelectedList()\n\n        # Save everything\n        $scope.edit = ->\n            filterMarkers()\n            $scope.ajaxStart()\n            $scope.client.$update()\n                .then ->\n                    $scope.ajaxEnd()\n\n        # Save everything\n        $scope.save = ->\n            filterMarkers()\n            $scope.ajaxStart()\n            $scope.Client.save $scope.client, (response)->\n                window.location = \"requests/#{response.id}/edit\"\n\n        bindDroppable = ->\n            $timeout ->\n                $('.teacher-remove-droppable').droppable\n                    tolerance: 'pointer'\n                    hoverClass: 'drop-hover'\n                    drop: (e, ui) ->\n                        tutor_id = $(ui.draggable).data 'id'\n                        $timeout ->\n                            $scope.selected_list.tutor_ids = _.without($scope.selected_list.tutor_ids, tutor_id.toString())\n                            saveSelectedList()\n\n        # get teacher\n        $timeout ->\n            $scope.users = User.query()\n\n            $http.get 'api/tutors/list'\n                .success (tutors) ->\n                    $scope.tutors = tutors\n\n            # $rootScope.frontendStop() - 2 раза потому что Client.get загружает клиента асинхронно. если сделать общим\n            # рендер телефонных номеров может сломаться, т. к. она сработает как только frontendStopped.\n            if $scope.id > 0\n                $scope.client = Client.get {id: $scope.id}, (client) ->\n                    $scope.selected_request = if $scope.request_id then _.findWhere(client.requests, {id: $scope.request_id}) else client.requests[0]\n                    $scope.parseHash()\n                    sp 'list-subjects', 'выберите предмет'\n                    $rootScope.frontendStop()\n            else\n                $scope.client = $scope.new_client\n                $scope.client.requests = [$scope.new_request]\n                $scope.selected_request = $scope.client.requests[0]\n                $rootScope.frontendStop()\n\n        saveSelectedList = ->\n            # tutor_ids = []\n            # $.each $scope.selected_list.tutors, (index, tutor) ->\n            #     tutor_ids.push tutor.id\n            # $scope.selected_list.tutor_ids = tutor_ids\n            RequestList.update $scope.selected_list\n\n        $scope.getTutorList = ->\n            tutors = []\n            if $scope.selected_list\n                $.each $scope.selected_list.tutor_ids, (index, tutor_id) ->\n                    tutors.push findById($scope.selected_list.tutors, tutor_id)\n                tutors\n\n        # Если в ссылке указан хэш, то это #id_списка#id_стыковки\n        $scope.parseHash = ->\n            values = window.location.hash.split('#')\n            values.shift()\n            if values[0]\n                $scope.selected_list = findById($scope.selected_request.lists, values[0])\n            if values[1] and $scope.selected_list\n                $scope.selected_attachment = findById($scope.selected_list.attachments, values[1])\n\n        $scope.toggleArchive = ->\n            if $scope.selected_attachment.archive\n                Archive.delete $scope.selected_attachment.archive, ->\n                    delete $scope.selected_attachment.archive\n            else\n                Archive.save\n                    attachment_id: $scope.selected_attachment.id\n                , (response) ->\n                    $scope.selected_attachment.archive = response\n\n        $scope.toggleReview = ->\n            if $scope.selected_attachment.review\n                Review.delete $scope.selected_attachment.review, ->\n                    delete $scope.selected_attachment.review\n            else\n                Review.save\n                    attachment_id: $scope.selected_attachment.id\n                , (response) ->\n                    $scope.selected_attachment.review = response\n\n        $scope.attachmentExists = (tutor_id) ->\n            attachment_exists = false\n            $.each $scope.client.requests, (index, request) ->\n                return if attachment_exists\n                $.each request.lists, (index, list) ->\n                    $.each list.attachments, (index, attachment) ->\n                        attachment_exists = true if parseInt(attachment.tutor_id) is parseInt(tutor_id)\n            attachment_exists\n\n        $scope.selectAttachment = (attachment) ->\n            $scope.selected_attachment = attachment\n\n        $scope.addList = ->\n            $scope.dialog('add-subject')\n\n        $scope.setList = (list) ->\n            $scope.selected_list = list\n            $scope.showListMap() if $scope.list_map\n            delete $scope.selected_attachment\n\n        $scope.listExists = (subject_id) ->\n            _.findWhere($scope.selected_request.lists, {subject_id: parseInt(subject_id)}) isnt undefined\n\n        $scope.selectRequest = (request) ->\n            $scope.selected_request = request\n            delete $scope.selected_list\n\n        $scope.addListSubject = ->\n            RequestList.save\n                request_id: $scope.selected_request.id\n                subjects: $scope.list_subjects\n            , (data) ->\n                $scope.selected_request.lists.push data\n                $scope.selected_list = data\n\n            delete $scope.list_subjects\n            spRefresh 'list-subjects'\n            $('#add-subject').modal 'hide'\n            return\n\n        $scope.addListTutor = ->\n            $scope.selected_list.tutor_ids.push $scope.list_tutor_id\n            RequestList.update\n                id: $scope.selected_list.id\n                tutor_ids: $scope.selected_list.tutor_ids\n            , ->\n            # $scope.client.lists[$scope.selected_list_id].push $scope.list_tutor_id\n                delete $scope.list_tutor_id\n                $('#add-tutor').modal 'hide'\n\n        $scope.newAttachment = (tutor_id) ->\n            ajaxStart()\n            Attachment.save\n                grade: $scope.client.grade\n                tutor_id: tutor_id\n                subjects: $scope.selected_list.subjects\n                request_list_id: $scope.selected_list.id\n                client_id: $scope.client.id\n            , (new_attachment) ->\n                ajaxEnd()\n                if new_attachment.id\n                    $scope.selected_attachment = new_attachment\n                    $scope.selected_list.attachments.push new_attachment\n\n        $scope.addRequest = ->\n            new_request = new Request\n                client_id: $scope.id\n\n            ajaxStart()\n            new_request.$save()\n                .then (data) ->\n                    ajaxEnd()\n                    $scope.client.requests.push(data)\n                    $scope.selected_request = data\n                    unsetSelected(false, true, true)\n\n        $scope.removeRequest = ->\n            bootbox.confirm 'Вы уверены, что хотите удалить заявку?', (response) ->\n                if response is true\n                    Request.delete {id: $scope.selected_request.id}, ->\n                        $scope.client.requests = removeById $scope.client.requests, $scope.selected_request.id\n                        unsetSelected(true, true, true)\n\n        $scope.transferRequest = ->\n            $('#transfer-request').modal 'show'\n\n        $scope.transferRequestGo = ->\n            $('#transfer-request').modal 'hide'\n            ajaxStart()\n            $http.post \"api/requests/transfer/#{$scope.selected_request.id}\",\n                client_id: $scope.transfer_client_id\n            .then (response) ->\n                ajaxEnd()\n                console.log response\n                if response.data isnt '' then location.reload() else bootbox.alert('Клиент не существует')\n\n        # Снять выбор с выбранной комбинации\n        unsetSelected = (request = false, list = false, attachment = false) ->\n            $scope.selected_request = null if request\n            $scope.selected_list = null if list\n            $scope.selected_attachment = null if attachment\n\n        $scope.removeList = ->\n            bootbox.confirm 'Вы уверены, что хотите удалить список?', (response) ->\n                if response is true\n                    RequestList.delete {id: $scope.selected_list.id}, ->\n                        $scope.selected_request.lists = removeById $scope.selected_request.lists, $scope.selected_list.id\n                        delete $scope.selected_list\n                        unsetSelected(false, true, true)\n\n        $scope.removeAttachment = ->\n            bootbox.confirm 'Вы уверены, что хотите удалить стыковку?', (response) ->\n                if response is true\n                    Attachment.delete {id: $scope.selected_attachment.id}, ->\n                        $scope.selected_list.attachments = removeById $scope.selected_list.attachments, $scope.selected_attachment.id\n                        delete $scope.selected_attachment\n                        unsetSelected(false, false, true)\n\n        # parse textarea for tutor IDS\n        $scope.$watch 'selected_request.comment', (newVal, oldVal) ->\n            return if newVal is undefined and oldVal is undefined\n            newVal = oldVal if newVal is undefined\n            $scope.request_tutor_ids = []\n            matches = newVal.match /Репетитор [\\d]+/gi\n            $.each matches, (index, match) ->\n                tutor_id = match.match /[\\d]+/gi\n                $scope.request_tutor_ids.push parseInt(tutor_id)\n\n        # refresh selectpicker on $selected_attachment update\n        $scope.$watch 'selected_attachment', (newVal, oldVal) ->\n            return if newVal is undefined\n            sp 'attachment-subjects', 'выберите предмет' if oldVal is undefined\n            spRefresh 'attachment-subjects' if oldVal isnt undefined\n            rebindMasks()\n\n        $scope.$watch 'selected_list', (newVal, oldVal) ->\n            bindDroppable() if oldVal is undefined and newVal isnt undefined\n\n\n        #\n        # ПОСЛЕ ЗАГРУЗКИ КАРТЫ\n        #\n        $scope.marker_id = 1\n        $scope.map_number = 0\n\n        filterMarkers = ->\n            new_markers = []\n            $.each $scope.client.markers, (index, marker) ->\n                new_markers.push _.pick(marker, 'lat', 'lng', 'type', 'metros', 'server_id')\n            $scope.client.markers = new_markers\n\n\n        $scope.$on 'mapInitialized', (event, map) ->\n            map.number = $scope.map_number\n            if $scope.map_number is 0\n                # Запоминаем карту после инициалицации\n                $scope.gmap = map\n                # Добавляем существующие метки\n                $scope.loadMarkers()\n                # generate recommended search bounds\n                INIT_COORDS =\n                    lat: 55.7387\n                    lng: 37.6032\n                $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\n                $scope.geocoder = new (google.maps.Geocoder)\n                # События добавления меток\n                google.maps.event.addListener map, 'click', (event) ->\n                    $scope.gmapAddMarker event\n            else\n                # Запоминаем карту после инициалицации\n                $scope.gmap2 = map\n\n                # Зум и центр карты по умолчанию\n                $scope.gmap2.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n                $scope.gmap2.setZoom 11\n            $scope.map_number++\n\n        # Показать карту\n        $scope.showMap = ->\n            $('#gmap-modal').modal 'show'\n            # Показываем карту\n            google.maps.event.trigger $scope.gmap, 'resize'\n\n            # Зум и центр карты по умолчанию\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n            $scope.gmap.setZoom 11\n\n            # Обнуляем значение поиска\n            $('#map-search').val ''\n\n            # Удаляем все маркеры поиска\n            if $scope.search_markers and $scope.search_markers.length\n                $.each $scope.search_markers, (i, marker) ->\n                    marker.setMap null\n                $scope.search_markers = []\n\n            # Если уже есть добавленные маркеры\n            if $scope.client.markers.length\n                # отображать только метки с выбранным типом\n                bounds = new (google.maps.LatLngBounds)\n                # есть отображаемые маркеры\n                markers_count = 0\n                # отображаем маркеры по одному\n                $.each $scope.client.markers, (index, marker) ->\n                    markers_count++\n                    # отображаемые маркеры есть\n                    # marker.setVisible true\n                    bounds.extend marker.position\n                # если отображаемые маркеры есть, делаем зум на них\n                if markers_count > 0\n                    $scope.gmap.fitBounds bounds\n                    $scope.gmap.panToBounds bounds\n                    $scope.gmap.setZoom 11\n\n        $scope.gmapAddMarker = (event) ->\n            # Создаем маркер\n            # var marker = newMarker($scope.marker_id++, $scope.marker_type, event.latLng)\n            marker = newMarker($scope.marker_id++, event.latLng, $scope.gmap)\n\n            # Добавляем маркер в маркеры\n            $scope.client.markers.push(marker)\n\n            # Добавляем маркер на карту\n            marker.setMap($scope.gmap)\n\n            # Ищем ближайшие станции метро к маркеру\n            ApiService.metro 'closest',\n                lat: marker.lat\n                lng: marker.lng\n            .then (response) ->\n                marker.metros = response.data\n\n            # Добавляем ивент удаления маркера\n            $scope.bindMarkerDelete(marker)\n            $scope.bindMarkerChangeType(marker)\n\n        # Добавляем ивент удаления маркера\n        $scope.bindMarkerDelete = (marker) ->\n            google.maps.event.addListener marker, 'dblclick', (event) ->\n                t = this\n                # удаляем маркер с карты\n                t.setMap null\n                # удаляем маркер из коллекции\n                $.each $scope.client.markers, (index, m) ->\n                    if m isnt undefined and t.id == m.id\n                        # удаляем маркер с сервера, если нужно\n                        if m.server_id isnt undefined\n                            ajaxStart()\n                            Marker.delete {id: m.server_id}\n                            , ->\n                                ajaxEnd()\n                        $scope.client.markers.splice index, 1\n\n        $scope.bindMarkerChangeType = (marker) ->\n            google.maps.event.addListener marker, 'click', (event) ->\n                if @type == 'green'\n                    @type = 'red'\n                    @setIcon ICON_RED\n                else if @type == 'red'\n                    @type = 'blue'\n                    @setIcon ICON_BLUE\n                else\n                    @type = 'green'\n                    @setIcon ICON_GREEN\n                if marker.server_id isnt undefined\n                    ajaxStart()\n                    Marker.update {id: marker.server_id, type: @type}\n                    , ->\n                        ajaxEnd()\n\n        # Поиск по карте\n        $scope.searchMap = (address) ->\n            $scope.geocoder.geocode {\n                address: address + ', московская область'\n                bounds: $scope.RECOM_BOUNDS\n                componentRestrictions:\n                    country: 'RU'\n                    administrativeArea: 'Moscow'\n            }, (results, status) ->\n                if status == google.maps.GeocoderStatus.OK\n                    # максимальное кол-во результатов\n                    max_results = 3\n                    # масштаб поиска\n                    search_result_bounds = new (google.maps.LatLngBounds)\n                    $.each results, (i, result) ->\n                        return if i >= max_results\n\n                        search_result_bounds.extend result.geometry.location\n                        # границы карты в зависимости от поставленных меток\n                        search_marker = new (google.maps.Marker)(\n                            map: $scope.gmap\n                            position: result.geometry.location\n                            icon: ICON_SEARCH)\n\n                        google.maps.event.addListener search_marker, 'click', (event) ->\n                            @setMap null\n                            $scope.gmapAddMarker event\n                        $scope.search_markers = initIfNotSet($scope.search_markers)\n                        $scope.search_markers.push search_marker\n\n                    # если отображаемые маркеры есть, делаем зум на них\n                    if results.length > 0\n                        $scope.gmap.fitBounds search_result_bounds\n                        $scope.gmap.panToBounds search_result_bounds\n                        if results.length == 1\n                            $scope.gmap.setZoom 12\n                    else\n                        $('#map-search').addClass('has-error').focus()\n\n        # Запуск поиска по карте\n        $scope.gmapsSearch = ($event) ->\n            if $event.keyCode == 13 or $event.type == 'click'\n                # prevent empty\n                if $('#map-search').val() == ''\n                    $('#map-search').addClass('has-error').focus()\n                else\n                    $('#map-search').removeClass 'has-error'\n                $scope.searchMap $('#map-search').val()\n\n        # Загрузить метки\n        $scope.loadMarkers = ->\n            $rootScope.dataLoaded.promise.then ->\n                markers = []\n                $.each $scope.client.markers, (index, marker) ->\n                    # Создаем маркер\n                    # @todo: сделать так, чтобы type и metros и еще дургие можно было передавать массивом в последнем параметре\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.gmap, marker.type, marker.id)\n                    new_marker.metros = marker.metros\n\n                    # Добавляем маркер на карту\n                    new_marker.setMap($scope.gmap)\n                    console.log 'adding marker', $scope.gmap\n\n                    # Добавляем ивент удаления маркера\n                    $scope.bindMarkerDelete(new_marker)\n                    $scope.bindMarkerChangeType(new_marker)\n                    markers.push new_marker\n                $scope.client.markers = markers\n\n        # Сохранить метки\n        $scope.saveMarkers = ->\n            $('#gmap-modal').modal 'hide'\n\n\n\n\n\n        #\n        # КАРТА СПИСКА\n        #\n        $scope.listMap = ->\n            $scope.list_map = not $scope.list_map\n            $scope.showListMap()\n\n        # determine whether tutor had already been added\n        $scope.added = (tutor_id) ->\n            tutor_id in $scope.tutor_ids.map(Number)\n\n        # rebind draggable\n        rebindDraggable = ->\n            $('.temporary-tutor').draggable\n                containment: 'window'\n                revert: (valid) ->\n                    return true if valid\n                    $scope.tutor_list   = removeById($scope.tutor_list, $scope.dragging_tutor.id)\n                    $scope.tutor_ids    = _.without($scope.tutor_ids.map(Number), $scope.dragging_tutor.id)\n                    $scope.$apply()\n                    repaintChosen()\n\n        # remember dragging tutor\n        $scope.startDragging = (tutor) ->\n            $scope.dragging_tutor = tutor\n\n        showTutorsOnMap = ->\n            unsetAllMarkers()\n            $scope.marker_id2 = 1\n            # временный список репетиторов\n            $scope.tutor_list = []\n            # отображать только метки с выбранным типом\n            bounds = new (google.maps.LatLngBounds)\n            # есть отображаемые маркеры\n            markers_count = 0\n            $scope.markers2 = []\n\n            # Показываем карту\n            google.maps.event.trigger $scope.gmap2, 'resize'\n\n            # Зум и центр карты по умолчанию\n            $scope.gmap2.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n            $scope.gmap2.setZoom 11\n\n            # $.each $scope.client.markers, (marker) ->\n            #     markers_count++\n            #     bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\n\n            $scope.client.markers.forEach (marker) ->\n                markers_count++\n                bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\n\n            $scope.selected_list.tutors.forEach (tutor) ->\n                tutor.markers.forEach (marker) ->\n                    markers_count++\n                    bounds.extend(new google.maps.LatLng(marker.lat, marker.lng))\n\n                    # Создаем маркер\n                    new_marker = newMarker($scope.marker_id2++, new google.maps.LatLng(marker.lat, marker.lng), $scope.gmap2, marker.type)\n                    new_marker.metros = marker.metros\n                    new_marker.tutor = tutor\n\n                    # Добавляем маркер на карту\n                    new_marker.setMap($scope.gmap2)\n\n                    # Добавляем ивент удаления маркера\n                    bindTutorMarkerEvents(new_marker)\n                    $scope.markers2.push new_marker\n\n            # если отображаемые маркеры есть, делаем зум на них\n            if markers_count > 0\n                $scope.gmap2.fitBounds bounds\n                $scope.gmap2.panToBounds bounds\n                $scope.gmap2.setZoom 10\n\n            $scope.gmap2.panBy(150, 0)\n\n        showClientOnMap = ->\n            $scope.client.markers.forEach (marker) ->\n                # Создаем маркер\n                new_marker = newMarker($scope.marker_id2++, new google.maps.LatLng(marker.lat, marker.lng), $scope.gmap2, 'white')\n                new_marker.metros = marker.metros\n                new_marker.setMap($scope.gmap2)\n\n        unsetAllMarkers = ->\n            # unset markers\n            if $scope.markers2 isnt undefined\n                $scope.markers2.forEach (marker) ->\n                    marker.setMap null\n\n        bindTutorMarkerEvents = (marker) ->\n            # double click custom handler with delay\n            google.maps.event.addListener marker, 'click', (event) ->\n                # single click\n                if marker.tutor in $scope.tutor_list\n                    $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\n                else\n                    $scope.hovered_tutor = null\n                    $scope.tutor_list.push marker.tutor\n                $scope.addOrRemove(marker.tutor.id)\n                $scope.$apply()\n                rebindDraggable()\n\n            google.maps.event.addListener marker, 'mouseover', (event) ->\n                return if marker.tutor in $scope.tutor_list\n                $scope.hovered_tutor = marker.tutor\n                $scope.$apply()\n\n            google.maps.event.addListener marker, 'mouseout', (event) ->\n                $scope.hovered_tutor = null\n                $scope.$apply()\n\n        # add or remove tutor from list\n        $scope.addOrRemove = (tutor_id) ->\n            tutor_id = parseInt(tutor_id)\n            $scope.tutor_ids = [] if $scope.tutor_ids is undefined\n            if tutor_id in $scope.tutor_ids.map(Number)\n                $scope.tutor_ids = _.without($scope.tutor_ids.map(Number), tutor_id)\n            else\n                $scope.tutor_ids.push(tutor_id)\n            repaintChosen()\n\n        repaintChosen = ->\n            $scope.markers2.forEach (marker) ->\n                if marker.tutor.id in $scope.tutor_ids.map(Number) and not marker.chosen\n                    marker.chosen = true\n                    marker.setIcon ICON_BLUE\n                if marker.tutor.id not in $scope.tutor_ids.map(Number) and marker.chosen\n                    marker.chosen = false\n                    marker.setIcon getMarkerType(marker.type)\n\n        $scope.showListMap = ->\n            $timeout ->\n                showTutorsOnMap()\n                showClientOnMap()\n","angular\n.module 'Egerep'\n.controller 'ContractIndex', ($scope, $http, UserService) ->\n\tbindArguments($scope, arguments)\n\n.controller 'ContractEdit', ($scope, $http, $timeout, UserService) ->\n\tbindArguments($scope, arguments)\n\n\t$scope.save = ->\n\t\tajaxStart()\n\t\t$scope.saving = true\n\t\t$scope.contract_html = $scope.editor.getValue()\n\t\t$http.post \"contract\",\n\t\t\tcontract_html: $scope.contract_html\n\t\t\tcontract_date: $scope.contract_date\n\t\t.then (response) ->\n\t\t\tajaxEnd()\n\t\t\t$scope.saving = false\n\n\tangular.element(document).ready ->\n\t\t$timeout ->\n\t\t\t$scope.editor = ace.edit 'editor'\n\t\t\t$scope.editor.getSession().setMode 'ace/mode/html'\n\t\t, 300\n","angular\n    .module 'Egerep'\n    .controller 'DebtMap', ($scope, $timeout, TutorService, Tutor, Subjects, YesNo) ->\n        bindArguments($scope, arguments)\n\n        # transparent marker opacity\n        TRANSPARENT_MARKER = 0.3\n\n        # differentiate single & double click\n        clicks = 0\n\n        # marker clusterer\n        markerClusterer = undefined\n\n        # mode: 'map' | 'list'\n        $scope.mode = 'map'\n\n        # loading map\n        $scope.loading = false\n\n        # search params\n        $scope.search = {}\n\n        $scope.tutor_ids = []\n\n        $scope.sortType     = 'debt_calc'\n        $scope.sortReverse  = false\n\n        $scope.$watch 'mode', (newVal, oldVal) ->\n            if newVal is 'debtor' and $scope.debtors is undefined\n                TutorService.getDebtors().then (response) ->\n                    $scope.debtors = response.data\n\n        $scope.totalLastDebt = ->\n            sum = 0\n            tutors = if $scope.mode == 'list' then $scope.tutors else $scope.debtors\n            $.each tutors, (index, tutor) ->\n                if tutor.last_account_info isnt null\n                    debt = tutor.last_account_info.debt\n                    sum += if tutor.last_account_info.debt_type then +debt else -debt\n            {\n                debt_type: if sum < 0 then 0 else 1\n                debt: Math.abs(sum)\n            }\n\n        $scope.blurComment = (tutor) ->\n            tutor.is_being_commented = false\n            tutor.debt_comment = tutor.old_debt_comment\n\n        $scope.focusComment = (tutor) ->\n            tutor.is_being_commented = true\n            tutor.old_debt_comment = tutor.debt_comment\n\n        $scope.startComment = (tutor) ->\n            tutor.is_being_commented = true\n            tutor.old_debt_comment = tutor.debt_comment\n            $timeout ->\n                $(\"#list-comment-#{tutor.id}\").focus()\n\n        $scope.saveComment =  (event, tutor) ->\n            if event.keyCode is 13\n                Tutor.update\n                    id: tutor.id\n                    debt_comment: tutor.debt_comment\n                , (response) ->\n                    tutor.old_debt_comment = tutor.debt_comment\n                    $(event.target).blur()\n\n        angular.element(document).ready ->\n            $('.map-tutor-list').droppable()\n\n        $scope.find = ->\n            $scope.loading = true\n            TutorService.getDebtMap {search: $scope.search}\n                .then (response) ->\n                    $scope.tutors = response.data\n                    angular.forEach $scope.tutors, (tutor) ->\n                        if tutor.last_account_info\n                            tutor.last_debt = if tutor.last_account_info.debt_type then tutor.last_account_info.debt else -tutor.last_account_info.debt\n                        else\n                            tutor.last_debt = 0\n                    showTutorsOnMap()\n                    $scope.loading = false\n\n        # determine whether tutor had already been added\n        $scope.added = (tutor_id) ->\n            tutor_id in $scope.tutor_ids\n\n        # rebind draggable\n        rebindDraggable = ->\n            $('.temporary-tutor').draggable\n                containment: 'window'\n                revert: (valid) ->\n                    return true if valid\n                    $scope.tutor_list   = removeById($scope.tutor_list, $scope.dragging_tutor.id)\n                    $scope.tutor_ids    = _.without($scope.tutor_ids, $scope.dragging_tutor.id)\n                    $scope.$apply()\n                    repaintChosen()\n\n        # remember dragging tutor\n        $scope.startDragging = (tutor) ->\n            $scope.dragging_tutor = tutor\n\n        showTutorsOnMap = ->\n            unsetAllMarkers()\n            $scope.marker_id = 1\n\n            # временный список репетиторов\n            $scope.tutor_list = []\n\n            $scope.markers = []\n            $scope.tutors.forEach (tutor) ->\n                tutor.markers.forEach (marker) ->\n                    # Создаем маркер\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\n                    new_marker.metros = marker.metros\n                    new_marker.tutor = tutor\n\n                    # Добавляем маркер на карту\n                    new_marker.setMap($scope.map)\n\n                    # Добавляем ивент удаления маркера\n                    bindTutorMarkerEvents(new_marker)\n                    $scope.markers.push new_marker\n            # @todo: consider using Marker Clusterer\n            markerClusterer = new MarkerClusterer $scope.map, $scope.markers,\n                gridSize: 10\n                # maxZoom: 12\n                imagePath: 'img/maps/clusterer/m'\n\n        showClientOnMap = ->\n            $scope.client.markers.forEach (marker) ->\n                # Создаем маркер\n                new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, 'white')\n                new_marker.metros = marker.metros\n                new_marker.setMap($scope.map)\n\n        unsetAllMarkers = ->\n            # unset markers\n            if $scope.markers isnt undefined\n                $scope.markers.forEach (marker) ->\n                    marker.setMap null\n            # unset clusterer\n            if markerClusterer isnt undefined\n                markerClusterer.clearMarkers()\n\n        findIntersectingMetros = ->\n            if $scope.search.destination is 'r_k'\n                # find intersecting markers\n                $scope.markers.forEach (marker) ->\n                    marker.intersecting = false\n                    $scope.client.markers.forEach (client_marker) ->\n                        client_marker.metros.forEach (client_metro) ->\n                            if client_metro.station_id.toString() in marker.tutor.svg_map\n                                marker.intersecting = true\n                                marker.tutor.intersecting = true\n                                return\n                # paint non-intersecting with half opacity\n                $scope.markers.forEach (marker) ->\n                    marker.setOpacity(TRANSPARENT_MARKER) if not marker.intersecting\n\n        # получить репетиторов, которые выезжают на ближайшую станцию метро клиента\n        $scope.intersectingTutors = ->\n            _.where($scope.tutors, { intersecting: true })\n\n        # получить репетиторов, которые НЕ доезжают до ближайшей станции\n        $scope.notIntersectingTutors = ->\n            _.filter $scope.tutors, (tutor) ->\n                _.isUndefined(tutor.intersecting)\n\n\n        bindTutorMarkerEvents = (marker) ->\n            # double click custom handler with delay\n            google.maps.event.addListener marker, 'click', (event) ->\n                # single click\n                if marker.tutor in $scope.tutor_list\n                    $scope.tutor_list = removeById($scope.tutor_list, marker.tutor.id)\n                else\n                    $scope.hovered_tutor = null\n                    $scope.tutor_list.push marker.tutor\n                $scope.addOrRemove(marker.tutor.id)\n                $scope.$apply()\n                rebindDraggable()\n\n            google.maps.event.addListener marker, 'mouseover', (event) ->\n                return if marker.tutor in $scope.tutor_list\n                $scope.hovered_tutor = marker.tutor\n                $scope.$apply()\n\n            google.maps.event.addListener marker, 'mouseout', (event) ->\n                $scope.hovered_tutor = null\n                $scope.$apply()\n\n        # add or remove tutor from list\n        $scope.addOrRemove = (tutor_id) ->\n            tutor_id = parseInt(tutor_id)\n            if tutor_id in $scope.tutor_ids\n                $scope.tutor_ids = _.without($scope.tutor_ids, tutor_id)\n            else\n                $scope.tutor_ids.push(tutor_id)\n            repaintChosen()\n\n        repaintChosen = ->\n            $scope.markers.forEach (marker) ->\n                if marker.tutor.id in $scope.tutor_ids and not marker.chosen\n                    marker.chosen = true\n                    marker.setIcon ICON_BLUE\n                if marker.tutor.id not in $scope.tutor_ids and marker.chosen\n                    marker.chosen = false\n                    marker.setIcon getMarkerType(marker.type)\n\n\n        $scope.$on 'mapInitialized', (event, map) ->\n            # Запоминаем карту после инициалицации\n            $scope.gmap = map\n\n            # generate recommended search bounds\n            INIT_COORDS =\n                lat: 55.7387\n                lng: 37.6032\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\n            $scope.geocoder = new (google.maps.Geocoder)\n\n            # Зум и центр карты по умолчанию\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n            $scope.gmap.setZoom 11\n","angular.module('Egerep')\n    .controller 'EmptyCtrl', ->\n","angular\n    .module 'Egerep'\n    .controller 'GraphController', ($scope, $timeout, $http, $rootScope, SvgMap) ->\n        bindArguments($scope, arguments)\n\n        $scope.map_loaded = false\n\n        angular.element(document).ready ->\n            $timeout ->\n                SvgMap.show()\n\n                SvgMap.el().find('#stations > g > g').each (index, el) ->\n                    $(el).on 'mouseenter', ->\n                        $scope.hovered_station_id = parseInt($(@).attr('id').replace(/[^\\d]/g, ''))\n                        $scope.$apply()\n                    $(el).on 'mouseleave', ->\n                        $scope.hovered_station_id = undefined\n                        $scope.$apply()\n\n                SvgMap.map.options.clickCallback = (id) ->\n                    if SvgMap.map.getSelected().length > 2\n                        SvgMap.map.deselectAll()\n                        SvgMap.map.select id\n                    $scope.selected = SvgMap.map.getSelected()\n\n                $scope.map_loaded = true\n            , 500\n\n        $scope.$watch 'selected', (newVal, oldVal) ->\n            return if newVal is undefined\n            if newVal.length is 2\n                $scope.new_distance = getDistance(newVal[0], newVal[1])\n\n        $scope.$watch 'hovered_station_id', (newVal, oldVal) ->\n            if newVal isnt undefined\n                found_distances = _.filter $scope.distances, (distance) ->\n                    distance.from is newVal or distance.to is newVal\n\n                # 1. objects in js are copied by ref\n                # 2. _.clone - shallow copy\n                $scope.found_distances = _.map found_distances, _.clone\n\n                angular.forEach $scope.found_distances, (distance) ->\n                     if distance.from isnt newVal\n                         from_buffer = distance.from\n                         distance.from = newVal\n                         distance.to = from_buffer\n\n\n        $scope.save = ->\n            from = $scope.selected[0]\n            to = $scope.selected[1]\n            $rootScope.ajaxStart()\n            $http.post 'graph/save',\n                from: from\n                to: to\n                distance: $scope.new_distance\n            .then ->\n                distance = getDistanceObject(from, to)\n                if distance is undefined\n                    $scope.distances.push\n                        from: from\n                        to: to\n                        distance: $scope.new_distance\n                else\n                    distance.distance = $scope.new_distance\n                $rootScope.ajaxEnd()\n\n\n        $scope.delete = ->\n            from = Math.min($scope.selected[0], $scope.selected[1])\n            to = Math.max($scope.selected[0], $scope.selected[1])\n\n            $rootScope.ajaxStart()\n            $http.post 'graph/delete',\n                from: from\n                to: to\n            .then ->\n                $rootScope.ajaxEnd()\n                $scope.distances = _.without($scope.distances, _.findWhere($scope.distances, {from: from, to: to}))\n                $scope.selected = []\n                SvgMap.map.deselectAll()\n\n        getDistance = (from, to) ->\n            distance = getDistanceObject(from, to)\n            if distance is undefined then undefined else distance.distance\n\n        getDistanceObject = (from, to) ->\n            from = Math.min(from, to)\n            to = Math.max(from, to)\n            _.find($scope.distances, {from: from, to: to})\n","angular\n    .module 'Egerep'\n    .controller 'LoginCtrl', ($scope, $http) ->\n        angular.element(document).ready ->\n            $scope.l = Ladda.create(document.querySelector('#login-submit'))\n\n        $scope.checkFields = ->\n            $scope.l.start()\n            ajaxStart()\n            $scope.in_process = true\n            $http.post 'login',\n                login: $scope.login\n                password: $scope.password\n            .then (response) ->\n                if response.data is true\n                    location.reload()\n                else\n                    $scope.in_process = false\n                    ajaxEnd()\n                    $scope.l.stop()\n                    notifyError \"Неправильная пара логин-пароль\"","angular\n    .module 'Egerep'\n    .controller 'LogsIndex', ($rootScope, $scope, $timeout, $http, UserService, LogTypes, LogColumns) ->\n        bindArguments($scope, arguments)\n        $rootScope.frontend_loading = true\n\n        $scope.toJson = (data)->\n            JSON.parse(data)\n\n        $scope.refreshCounts = ->\n            $timeout ->\n                $('.selectpicker option').each (index, el) ->\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\n                    $(el).data 'content', $(el).attr 'data-content'\n                $('.selectpicker').selectpicker 'refresh'\n            , 100\n\n        $scope.filter = ->\n            $.cookie(\"logs\", JSON.stringify($scope.search), { expires: 365, path: '/' });\n            $scope.current_page = 1\n            $scope.pageChanged()\n\n        $scope.keyFilter = (event) ->\n            $scope.filter() if event.keyCode is 13\n\n        $timeout ->\n            $scope.search = if $.cookie(\"logs\") then JSON.parse($.cookie(\"logs\")) else {}\n            load $scope.page\n            $scope.current_page = $scope.page\n\n        $scope.pageChanged = ->\n            $rootScope.frontend_loading = true\n            load $scope.current_page\n            paginate('logs', $scope.current_page)\n\n        load = (page) ->\n            params = '?page=' + page\n\n            $http.get \"api/logs#{ params }\"\n            .then (response) ->\n                console.log response\n                $scope.counts = response.data.counts\n                $scope.data = response.data.data\n                $scope.logs = response.data.data.data\n                $rootScope.frontend_loading = false\n                $scope.refreshCounts()\n","angular\n.module 'Egerep'\n.controller 'NotificationsIndex', ($rootScope, $scope, $timeout, $http, AttachmentStates, AttachmentService, UserService, Notify) ->\n\tbindArguments($scope, arguments)\n\t$rootScope.frontend_loading = true\n\n\t$scope.addDays = (date, days) ->\n\t\tmoment(date).add({day : days})\n\n\t$scope.pastDate = (date) ->\n\t\tif date and (Date.now() - new Date(date)) >= 0 then true else false\n\n\trefreshCounts = ->\n\t\t$timeout ->\n\t\t\t$('.selectpicker option').each (index, el) ->\n\t\t\t\t$(el).data 'subtext', $(el).attr 'data-subtext'\n\t\t\t\t$(el).data 'content', $(el).attr 'data-content'\n\t\t\t$('.selectpicker').selectpicker 'refresh'\n\t\t, 100\n\n\t$scope.filter = ->\n\t\t$.cookie(\"notifications\", JSON.stringify($scope.search), { expires: 365, path: '/' });\n\t\t$scope.current_page = 1\n\t\t$scope.pageChanged()\n\n\t$scope.changeState = (state_id) ->\n\t\t$rootScope.frontend_loading = true\n\t\t$scope.attachments = []\n\t\t$scope.current_page = 1\n\t\tloadAttachments($scope.current_page)\n\t\twindow.history.pushState(state_id, '', 'notifications/' + state_id.toLowerCase())\n\n\t$scope.needsCall = (attachment) ->\n\t\treturn false if AttachmentService.getState(attachment) isnt 'new'\n\t\ttoday = moment().format(\"YYYY-MM-DD\")\n\t\tif attachment.notification_id\n\t\t\tattachment.notification_approved is 0 and attachment.notification_date <= today\n\t\telse\n \t\t\t$scope.addDays(attachment.original_date, 2).format('YYYY-MM-DD') <= today\n\n\n\t$timeout ->\n\t\t$scope.search = if $.cookie(\"notifications\") then JSON.parse($.cookie(\"notifications\")) else {}\n\t\tloadAttachments $scope.page\n\t\t$scope.current_page = $scope.page\n\n\t$scope.pageChanged = ->\n\t\t$rootScope.frontend_loading = true\n\t\t$rootScope.attachments = []\n\t\tloadAttachments $scope.current_page\n\t\tpaginate('notifications', $scope.current_page)\n\n\tloadAttachments = (page) ->\n\t\tparams = '?page=' + page\n\n\t\t$http.get \"api/notifications/get#{ params }\"\n\t\t.then (response) ->\n\t\t\t$scope.data = response.data.data\n\t\t\t$scope.attachments = response.data.data.data\n\t\t\t$scope.counts = response.data.counts\n\t\t\t$rootScope.frontend_loading = false\n\t\t\trefreshCounts()\n","angular\n    .module 'Egerep'\n\n    .controller 'PeriodsIndex', ($scope, $timeout, $rootScope, $http, PaymentMethods, DebtTypes) ->\n        bindArguments($scope, arguments)\n\n        $rootScope.frontend_loading = true\n\n        $timeout ->\n            load $scope.page\n            $scope.current_page = $scope.page\n\n        getCommission = (val) ->\n            if val.indexOf('/') isnt -1\n                val = val.split('/')[1]\n                return if val then parseInt(val) else 0\n            else\n                return Math.round(parseInt(val) * .25)\n\n        $scope.totalCommission = (account) ->\n            total_commission = 0\n            $.each account.data, (index, account_data) ->\n                $.each account_data, (index, val) ->\n                    total_commission += getCommission(val) if val isnt ''\n            total_commission\n\n        $scope.pageChanged = ->\n            load $scope.current_page\n            paginate('periods', $scope.current_page)\n\n        load = (page) ->\n            params = '?page=' + page\n\n            $http.get \"api/periods#{ params }\"\n            .then (response) ->\n                $rootScope.frontendStop()\n                $scope.data = response.data\n                $scope.periods = $scope.data.data\n","angular\n    .module 'Egerep'\n    .controller 'RequestsIndex', ($rootScope, $scope, $timeout, $http, Request, RequestStates, Comment, PhoneService, UserService, Grades, Subjects, PusherService) ->\n        bindArguments($scope, arguments)\n        _.extend RequestStates, { all : 'все' }\n        $rootScope.frontend_loading = true\n\n        $scope.user_id = localStorage.getItem('requests_index_user_id')\n\n        PusherService.bind 'RequestUserChanged', (data) ->\n            if request = findById($scope.requests, data.request_id)\n                request.user_id = data.new_user_id\n                $scope.$apply()\n\n        $scope.howLongAgo = (created_at) ->\n            now = moment(Date.now())\n            created_at = moment(new Date(created_at).getTime())\n            days = now.diff(created_at, 'days')\n            hours = now.diff(created_at, 'hours') - (days * 24)\n            {days: days, hours: hours}\n\n        $scope.changeList = (state_id) ->\n            $scope.chosen_state_id = state_id\n            $scope.current_page = 1\n            $rootScope.loaded_comments = 0\n            $rootScope.frontend_loading = true\n\n            ajaxStart()\n            loadRequests 1\n            ajaxEnd()\n\n            window.history.pushState('requests/' + state_id.toLowerCase(), '', 'requests/' + state_id.toLowerCase());\n\n        extendRequestStates = ->\n            $scope.RequestStatesForTabLabel = angular.copy $scope.RequestStates\n            _.extend $scope.RequestStatesForTabLabel, { all : 'все' }\n\n        $timeout ->\n            extendRequestStates()\n            loadRequests $scope.page\n            $scope.current_page = $scope.page\n\n        $scope.pageChanged = ->\n            $rootScope.frontend_loading = true\n            $rootScope.loaded_comments = 0\n            loadRequests $scope.current_page\n            paginate('requests/' + $scope.chosen_state_id, $scope.current_page)\n\n        loadRequests = (page) ->\n            $scope.chosen_state_id = 'all' if not $scope.chosen_state_id\n\n            params = '?page=' + page\n            params += '&state=' + $scope.chosen_state_id\n            params += \"&user_id=#{ $scope.user_id }\" if $scope.user_id isnt ''\n\n\n            $http.get \"api/requests#{ params }\"\n            .then (response) ->\n                $scope.data = response.data\n                $scope.requests = $scope.data.data\n\n                # сортировка станций маркеров по близоcти\n                $scope.requests.forEach (request) ->\n                    request.client.markers.forEach (marker) ->\n                        marker.metros = _.sortBy marker.metros, (s) ->\n                            s.minutes\n\n                $rootScope.frontend_loading = false\n\n            $http.post \"api/requests/counts\",\n                state: $scope.chosen_state_id\n                user_id: $scope.user_id\n            .then (response) ->\n                $scope.request_state_counts = response.data.request_state_counts\n                $scope.user_counts          = response.data.user_counts\n                console.log 'counts updated'\n                $timeout ->\n                    $('#change-state option, #change-user option').each (index, el) ->\n                        $(el).data 'subtext', $(el).attr 'data-subtext'\n                        $(el).data 'content', $(el).attr 'data-content'\n                    $('#change-state, #change-user').selectpicker 'refresh'\n\n        $scope.hasBannedUsers = ->\n            _.filter(UserService.getBannedUsers(), (u) ->\n                $scope.user_counts and $scope.user_counts[u.id] isnt undefined and $scope.user_counts[u.id] > 0\n            ).length\n\n        $scope.changeState = ->\n            localStorage.setItem('requests_index_state', $scope.state)\n            $scope.changeList($scope.state)\n\n        $scope.changeUser = ->\n            localStorage.setItem('requests_index_user_id', $scope.user_id)\n            $scope.changeList($scope.chosen_state_id)\n            # $scope.changeList($scope.state)\n\n        # $scope.bannedUsersHaveRequests = ->\n        #     banned_users_have_requests = false\n        #     UserService.getBannedUsers().forEach (user) ->\n        #         if $scope.user_counts[user.id]\n        #             banned_users_have_requests = true\n        #             return\n        #     banned_users_have_requests\n\n        # @todo использовать $rootScope.toggleEnumServer\n        $scope.toggleState = (request) ->\n            request_cpy = angular.copy request\n            $rootScope.toggleEnum request_cpy, 'state', RequestStates\n\n            $scope.Request.update\n                id: request_cpy.id\n                state: request_cpy.state\n            , (response) ->\n                $rootScope.toggleEnum request, 'state', RequestStates\n    .controller 'RequestsForm', ($scope) ->\n        console.log 'here'\n","angular\n    .module 'Egerep'\n    .controller 'ReviewsIndex', ($rootScope, $scope, $timeout, $http, Existance, ReviewStates, Presence, ReviewScores, UserService, ReviewErrors) ->\n        bindArguments($scope, arguments)\n        $rootScope.frontend_loading = true\n\n        $scope.recalcReviewErrors = ->\n            $scope.review_errors_updating = true\n            $http.post 'api/command/model-errors', {model: 'reviews'}\n\n        refreshCounts = ->\n            $timeout ->\n                $('.selectpicker option').each (index, el) ->\n                    $(el).data 'subtext', $(el).attr 'data-subtext'\n                    $(el).data 'content', $(el).attr 'data-content'\n                $('.selectpicker').selectpicker 'refresh'\n            , 100\n\n        $scope.filter = ->\n            $.cookie(\"reviews\", JSON.stringify($scope.search), { expires: 365, path: '/' });\n            $scope.current_page = 1\n            $scope.pageChanged()\n\n        $timeout ->\n            $scope.search = if $.cookie(\"reviews\") then JSON.parse($.cookie(\"reviews\")) else {}\n            load $scope.page\n            $scope.current_page = $scope.page\n\n        $scope.pageChanged = ->\n            $rootScope.frontend_loading = true\n            load $scope.current_page\n            paginate('reviews', $scope.current_page)\n\n        load = (page) ->\n            params = '?page=' + page\n\n            $http.get \"api/reviews#{ params }\"\n            .then (response) ->\n                console.log response\n                $scope.counts = response.data.counts\n                $scope.data = response.data.data\n                $scope.attachments = response.data.data.data\n                $rootScope.frontend_loading = false\n                refreshCounts()\n"],"sourceRoot":"/source/"}