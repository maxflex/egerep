{"version":3,"sources":["app.coffee","controllers/_template.coffee","controllers/accounts.coffee","controllers/clients.coffee","controllers/login.coffee","controllers/requests.coffee","controllers/tutors.coffee","directives/comments.coffee","directives/email.coffee","directives/metro-list.coffee","directives/phones.coffee","directives/selectpicker.coffee","directives/sms.coffee","factory/factory.coffee","resources/resources.coffee","services/api.coffee","services/svgmap.coffee"],"names":[],"mappings":"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B,EACwB,EADxB,EAC4B,EAD5B,EACgC,EADhC,EACoC,EADpC,EACwC,EADxC,EAC4C,EAD5C,EACgD,EADhD,EACoD,EADpD,EACwD,EADxD,EAC4D,EAD5D,EACgE,EADhE,EACoE,EADpE,EACwE,EADxE,EAC4E,EAD5E,EACgF,EADhF,EACoF,EADpF,EACwF,EADxF,EAC4F,GAD5F,EACiG,GADjG,EACsG,GADtG,EAC2G,GAD3G,EACgH,GADhH,EACqH,GADrH,EAC0H,GAD1H,EAC+H,GAD/H,EACoI,GADpI,EACyI,GADzI,EAC8I,GAD9I,EACmJ,GADnJ,EACwJ,GADxJ,EAC6J,GAD7J,EACkK,GADlK,EACuK,GADvK,EAC4K,GAD5K,EACiL,GADjL,EACsL,GADtL,EAC2L,GAD3L,EACgM,GADhM,EACqM,GADrM,EAC0M,GAD1M,EAC+M,GAD/M,EACoN,GADpN,EACyN,GADzN,EAC8N,GAD9N,EACmO,GADnO,EACwO,GADxO,EAC6O,GAD7O,CAHd;SADJ,EAQI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,GADE,EACG,GADH,EACQ,GADR,EACa,GADb,CAHd;SARJ,EAeI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,YAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,GADE,EACG,GADH,EACQ,GADR,EACa,GADb,EACkB,GADlB,EACuB,GADvB,EAC4B,GAD5B,CAHd;SAfJ,EAsBI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,GADT,EACc,GADd,CAHd;SAtBJ,EA6BI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,YAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,EADjB,EACqB,GADrB,EAC0B,GAD1B,EAC+B,GAD/B,EACoC,GADpC,CAHd;SA7BJ,EAoCI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,aAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,GADtB,EAC2B,GAD3B,EACgC,GADhC,EACqC,GADrC,CAHd;SApCJ,EA2CI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,cAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,CAHd;SA3CJ,EAkDI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,SAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,CAHd;SAlDJ,EAyDI;UACI,IAAA,EAAM,GADV;UAEI,OAAA,EAAS,iBAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,GADb,EACkB,GADlB,CAHd;SAzDJ,EAgEI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,cAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,EADjB,EACqB,GADrB,EAC0B,GAD1B,EAC+B,GAD/B,EACoC,GADpC,CAHd;SAhEJ,EAuEI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,kBAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,GADF,EACO,GADP,EACY,GADZ,EACiB,GADjB,EACsB,GADtB,EAC2B,GAD3B,CAHd;SAvEJ,EA8EI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,eAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,EAC8B,GAD9B,EACmC,GADnC,CAHd;SA9EJ,EAqFI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,QAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,GADL,EACU,GADV,EACe,GADf,EACoB,GADpB,CAHd;SArFJ,EA4FI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,aAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,GADjB,EACsB,GADtB,CAHd;SA5FJ,EAmGI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,UAFb;UAGI,QAAA,EAAU,CACN,CADM,EACH,EADG,EACC,EADD,EACK,EADL,EACS,EADT,EACa,EADb,EACiB,GADjB,EACsB,GADtB,EAC2B,GAD3B,EACgC,GADhC,EACqC,GADrC,EAC0C,GAD1C,EAC+C,GAD/C,CAHd;SAnGJ,EA0GI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,gBAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,EADV,EACc,EADd,EACkB,EADlB,EACsB,EADtB,EAC0B,EAD1B,EAC8B,GAD9B,EACmC,GADnC,EACwC,GADxC,EAC6C,GAD7C,EACkD,GADlD,EACuD,GADvD,CAHd;SA1GJ,EAiHI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,WAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,EADN,EACU,GADV,EACe,GADf,EACoB,GADpB,EACyB,GADzB,EAC8B,GAD9B,CAHd;SAjHJ,EAwHI;UACI,IAAA,EAAM,IADV;UAEI,OAAA,EAAS,WAFb;UAGI,QAAA,EAAU,CACN,EADM,EACF,EADE,EACE,EADF,EACM,GADN,EACW,GADX,CAHd;SAxHJ;OAJR;KADW;IAsIf,IAAI,CAAC,IAAL,GAAY,SAAC,MAAD;AACR,UAAA;MAAA,CAAA,CAAE,YAAF,CAAe,CAAC,KAAhB,CAAsB,MAAtB;MACA,GAAA,GAAM,IAAI,CAAC;MACX,GAAG,CAAC,IAAJ,CAAA;MACA,GAAG,CAAC,QAAJ,GAAe;MACf,GAAG,CAAC,WAAJ,CAAA;MACA,GAAG,CAAC,MAAJ,CAAW,MAAX;MACA,CAAA,CAAE,WAAF,CAAc,CAAC,MAAf,CAAsB,OAAtB;aACA,CAAA,CAAE,WAAF,CAAc,CAAC,EAAf,CAAkB,OAAlB,EAA2B,SAAA;AACvB,YAAA;QAAA,EAAA,GAAK,CAAA,CAAE,IAAF,CAAO,CAAC,IAAR,CAAa,UAAb;eACL,GAAG,CAAC,WAAJ,CAAgB,EAAhB;MAFuB,CAA3B;IARQ;IAYZ,IAAI,CAAC,IAAL,GAAY,SAAA;MACR,CAAA,CAAE,YAAF,CAAe,CAAC,KAAhB,CAAsB,MAAtB;aACA,IAAI,CAAC,GAAG,CAAC,IAAT,CAAA;IAFQ;WAIZ;EAvJuC,CAA3C;AAAA","file":"app.js","sourcesContent":["angular.module(\"Egerep\", ['ngSanitize', 'ngResource', 'ngMaterial', 'ngMap', 'ngAnimate', 'ui.sortable'])\n    .config [\n        '$compileProvider'\n        ($compileProvider) ->\n            $compileProvider.aHrefSanitizationWhitelist /^\\s*(https?|ftp|mailto|chrome-extension|sip):/\n\t]\n    .run ($rootScope, $q) ->\n        $rootScope.laroute = laroute\n\n        # отвечает за загрузку данных\n        $rootScope.dataLoaded = $q.defer()\n        # конец анимации front-end загрузки и rebind маск\n        $rootScope.frontendStop = (rebind_masks = true) ->\n            $rootScope.frontend_loading = false\n            $rootScope.dataLoaded.resolve(true)\n            rebindMasks() if rebind_masks\n\n        $rootScope.range = (min, max, step) ->\n          step = step or 1\n          input = []\n          i = min\n          while i <= max\n            input.push i\n            i += step\n          input\n\n        $rootScope.toggleEnum = (ngModel, status, ngEnum) ->\n            statuses = Object.keys(ngEnum)\n            status_id = statuses.indexOf ngModel[status].toString()\n            status_id++\n            status_id = 0 if status_id > (statuses.length - 1)\n            ngModel[status] = statuses[status_id]\n\n        $rootScope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $rootScope.formatDate = (date, full_year = false) ->\n            moment(date).format \"DD.MM.YY\" + (if full_year then \"YY\" else \"\")\n\n        $rootScope.dialog = (id) ->\n            $(\"##{id}\").modal 'show'\n            return\n\n        $rootScope.closeDialog = (id) ->\n            $(\"##{id}\").modal 'hide'\n            return\n\n        $rootScope.ajaxStart = ->\n            ajaxStart()\n            $rootScope.saving = true\n\n        $rootScope.ajaxEnd = ->\n            ajaxEnd()\n            $rootScope.saving = false\n","angular\n    .module 'Egerep'\n\n    .factory 'Model', ($resource) ->\n        $resource 'api/models/:id', {},\n            update:\n                method: 'PUT'\n\n\n\n    #\n    #   LIST CONTROLLER\n    #\n    .controller \"ModelsIndex\", ($scope, $timeout, Model) ->\n        $scope.models = Model.query()\n\n\n\n    #\n    #   ADD/EDIT CONTROLLER\n    #\n    .controller \"ModelsForm\", ($scope, $timeout, $interval, Model) ->\n        # get teacher\n        $timeout ->\n            $scope.model = Model.get {id: $scope.id} if $scope.id > 0\n","angular.module('Egerep')\n    .controller 'AccountsCtrl', ($scope, Account, PaymentMethods, DebtTypes) ->\n        $scope.PaymentMethods = PaymentMethods\n        $scope.DebtTypes = DebtTypes\n        $scope.current_scope = $scope\n\n        getAccountStartDate = (index) ->\n            if index > 0\n                moment($scope.tutor.accounts[index - 1].date_end).add(1, 'days').toDate()\n            else\n                new Date $scope.first_attachment_date\n\n        getAccountEndDate = (index) ->\n            if (index + 1) is $scope.tutor.accounts.length\n                ''\n            else\n                moment($scope.tutor.accounts[index + 1].date_end).subtract(1, 'days').toDate()\n\n        $scope.changeDateDialog = (index) ->\n            $('#date-end-change').datepicker('destroy')\n            $('#date-end-change').datepicker\n                language\t: 'ru'\n                autoclose\t: true\n                orientation\t: 'bottom auto'\n                startDate   : getAccountStartDate(index)\n                endDate     : getAccountEndDate(index)\n\n            $scope.selected_account = $scope.tutor.accounts[index]\n            $scope.change_date_end = $scope.formatDate($scope.selected_account.date_end, true)\n            $scope.dialog 'change-account-date'\n\n        $scope.changeDate = ->\n            $scope.selected_account.date_end = convertDate($scope.change_date_end)\n            Account.update\n                id: $scope.selected_account.id\n                date_end: $scope.selected_account.date_end\n            # , (response) ->\n            #     $scope.selected_account = response\n            $scope.closeDialog 'change-account-date'\n\n        $scope.remove = (account) ->\n            bootbox.confirm 'Удалить встречу?', (result) ->\n                if result is true\n                    Account.delete {id: account.id}, ->\n                        $scope.tutor.accounts = removeById($scope.tutor.accounts, account.id)\n\n\n        $scope.save = ->\n            $.each $scope.tutor.accounts, (index, account) ->\n                Account.update account\n\n        $scope.getFakeDates = ->\n            dates = []\n            current_date = moment().subtract(10, 'days').format('YYYY-MM-DD')\n            while current_date <= moment().format('YYYY-MM-DD')\n                dates.push current_date\n                current_date = moment(current_date).add(1, 'days').format('YYYY-MM-DD')\n            dates\n\n\n        $scope.getDates = (index) ->\n            dates = []\n            # если нулевой элемент, то отсчитываем от даты первой стыковки (самой ранней стыковки)\n            # иначе отсчитываем от даты конца предыдущего периода\n            if not index\n                current_date = moment($scope.first_attachment_date).format('YYYY-MM-DD')\n            else\n                current_date = moment($scope.tutor.accounts[index - 1].date_end).add(1, 'days').format('YYYY-MM-DD')\n\n            while (current_date <= $scope.tutor.accounts[index].date_end)\n                dates.push current_date\n                current_date = moment(current_date).add(1, 'days').format('YYYY-MM-DD')\n            dates\n\n        # откуда можно выбирать дату в календаре\n        getCalendarStartDate = ->\n            if $scope.tutor.accounts.length > 0\n                date_end = $scope.tutor.accounts[$scope.tutor.accounts.length - 1].date_end\n                moment(date_end).add(1, 'days').toDate()\n            else\n                new Date $scope.first_attachment_date\n\n        $scope.addAccountDialog = ->\n            $scope.new_account_date_end = ''\n            # @todo: узнать, как делается refresh\n            $('#date-end').datepicker('destroy')\n            $('#date-end').datepicker\n                language\t: 'ru'\n                startDate   : getCalendarStartDate()\n                autoclose\t: true\n                orientation\t: 'bottom auto'\n\n            $scope.dialog 'add-account'\n\n        $scope.addAccount = ->\n            Account.save\n                date_end: convertDate($scope.new_account_date_end)\n                tutor_id: $scope.tutor.id\n            , (new_account) ->\n                $scope.tutor.accounts.push(new_account)\n                $scope.closeDialog 'add-account'\n","angular\n    .module 'Egerep'\n\n\n\n    #\n    #   LIST CONTROLLER\n    #\n    .controller \"ClientsIndex\", ($scope, $timeout, Client) ->\n        $scope.clients = Client.query()\n\n\n\n    #\n    #   ADD/EDIT CONTROLLER\n    #\n    .controller \"ClientsForm\", ($scope, $rootScope, $timeout, $interval, $http, Client, Request, RequestList, User, RequestStates, Subjects, Grades, Attachment, ReviewStates, ArchiveStates, ReviewScores, Archive, Review, ApiService) ->\n        $scope.RequestStates = RequestStates\n        $scope.Subjects = Subjects\n        $scope.Grades = Grades\n        $scope.ReviewStates = ReviewStates\n        $scope.ReviewScores = ReviewScores\n        $scope.ArchiveStates = ArchiveStates\n        $rootScope.frontend_loading = true\n\n        # @todo: доделать позиционирование\n        $scope.is_dragging_teacher = false\n        $scope.sortableOptions =\n            tolerance: 'pointer'\n            activeClass: 'drag-active'\n            helper: 'clone'\n            appendTo: 'body'\n            # drag: (event, ui) ->\n            #     ui.helper.offset(ui.position)\n            start: (e, ui) ->\n                $scope.is_dragging_teacher = true\n                $scope.$apply()\n            stop: (e, ui) ->\n                $scope.is_dragging_teacher = false\n                $scope.$apply()\n                saveSelectedList()\n\n        # @cost\n        $scope.fake_user =\n            id: 0\n            login: 'system'\n\n        # Save everything\n        $scope.edit = ->\n            $scope.ajaxStart()\n            filterMarkers()\n            $scope.client.$update()\n                .then (response) ->\n                    $scope.ajaxEnd()\n\n\n        # get teacher\n        $timeout ->\n            $('.teacher-remove-droppable').droppable\n                tolerance: 'pointer'\n                hoverClass: 'drop-hover'\n                drop: (e, ui) ->\n                    tutor_id = $(ui.draggable).data 'id'\n                    $timeout ->\n                        $scope.selected_list.tutor_ids = _.without($scope.selected_list.tutor_ids, tutor_id.toString())\n                        saveSelectedList()\n\n            $scope.users = User.query()\n\n            $http.get 'api/tutors/list'\n                .success (tutors) ->\n                    $scope.tutors = tutors\n\n            if $scope.id > 0\n                $scope.client = Client.get {id: $scope.id}, (client) ->\n                    $scope.selected_request = if $scope.request_id then _.findWhere(client.requests, {id: $scope.request_id}) else client.requests[0]\n                    sp 'list-subjects', 'выберите предмет'\n                    $scope.parseHash()\n                    $rootScope.frontendStop()\n\n        saveSelectedList = ->\n            RequestList.update $scope.selected_list\n\n        # Если в ссылке указан хэш, то это #id_списка#id_стыковки\n        $scope.parseHash = ->\n            values = window.location.hash.split('#')\n            values.shift()\n            if values[0]\n                $scope.selected_list = findById($scope.selected_request.lists, values[0])\n            if values[1] and $scope.selected_list\n                $scope.selected_attachment = findById($scope.selected_list.attachments, values[1])\n\n        $scope.toggleArchive = ->\n            if $scope.selected_attachment.archive\n                Archive.delete $scope.selected_attachment.archive, ->\n                    delete $scope.selected_attachment.archive\n            else\n                Archive.save\n                    attachment_id: $scope.selected_attachment.id\n                , (response) ->\n                    $scope.selected_attachment.archive = response\n\n        $scope.toggleReview = ->\n            if $scope.selected_attachment.review\n                Review.delete $scope.selected_attachment.review, ->\n                    delete $scope.selected_attachment.review\n            else\n                Review.save\n                    attachment_id: $scope.selected_attachment.id\n                , (response) ->\n                    $scope.selected_attachment.review = response\n\n\n        $scope.attachmentExists = (tutor_id) ->\n            attachment_exists = false\n            $.each $scope.client.requests, (index, request) ->\n                return if attachment_exists\n                $.each request.lists, (index, list) ->\n                    $.each list.attachments, (index, attachment) ->\n                        attachment_exists = true if parseInt(attachment.tutor_id) is parseInt(tutor_id)\n            attachment_exists\n\n        $scope.selectAttachment = (attachment) ->\n            $scope.selected_attachment = attachment\n\n        $scope.addList = ->\n            $scope.dialog('add-subject')\n\n        $scope.setList = (list) ->\n            $scope.selected_list = list\n            delete $scope.selected_attachment\n\n        $scope.listExists = (subject_id) ->\n            _.findWhere($scope.selected_request.lists, {subject_id: parseInt(subject_id)}) isnt undefined\n\n        $scope.selectRequest = (request) ->\n            $scope.selected_request = request\n            delete $scope.selected_list\n\n        $scope.toggleUser = ->\n            # @костыль\n            if not $scope.selected_request.user\n                $scope.selected_request.user = $scope.fake_user\n\n            new_user = _.find $scope.users, (user) ->\n                user.id > $scope.selected_request.user.id\n            # if toggeled to the last user, start the loop over | SYSTEM USER INSTEAD\n            # new_user = $scope.users[0] if new_user is undefined\n            $scope.selected_request.user = new_user\n            $scope.selected_request.user_id = new_user.id\n\n        $scope.getUser = (user_id) ->\n            _.findWhere $scope.users,\n                id: parseInt(user_id)\n\n        $scope.addListSubject = ->\n            RequestList.save\n                request_id: $scope.selected_request.id\n                subjects: $scope.list_subjects\n            , (data) ->\n                $scope.selected_request.lists.push data\n                $scope.selected_list = data\n\n            delete $scope.list_subjects\n            spRefresh 'list-subjects'\n            $('#add-subject').modal 'hide'\n            return\n\n        $scope.addListTutor = ->\n            $scope.selected_list.tutor_ids.push $scope.list_tutor_id\n            RequestList.update\n                id: $scope.selected_list.id\n                tutor_ids: $scope.selected_list.tutor_ids\n            , ->\n            # $scope.client.lists[$scope.selected_list_id].push $scope.list_tutor_id\n                delete $scope.list_tutor_id\n                $('#add-tutor').modal 'hide'\n\n        $scope.newAttachment = (tutor_id) ->\n            Attachment.save\n                grade: $scope.client.grade\n                tutor_id: tutor_id\n                subjects: $scope.selected_list.subjects\n                request_list_id: $scope.selected_list.id\n            , (new_attachment) ->\n                $scope.selected_attachment = new_attachment\n                $scope.selected_list.attachments.push new_attachment\n\n        $scope.addRequest = ->\n            new_request = new Request\n                client_id: $scope.id\n\n            new_request.$save()\n                .then (data) ->\n                    $scope.client.requests.push(data)\n                    $scope.selected_request = data\n                    unsetSelected(false, true, true)\n\n        $scope.removeRequest = ->\n            bootbox.confirm 'Вы уверены, что хотите удалить заявку?', (response) ->\n                if response is true\n                    Request.delete {id: $scope.selected_request.id}, ->\n                        $scope.client.requests = removeById $scope.client.requests, $scope.selected_request.id\n                        unsetSelected(true, true, true)\n\n        # Снять выбор с выбранной комбинации\n        unsetSelected = (request = false, list = false, attachment = false) ->\n            $scope.selected_request = null if request\n            $scope.selected_list = null if list\n            $scope.selected_attachment = null if attachment\n\n        $scope.removeList = ->\n            bootbox.confirm 'Вы уверены, что хотите удалить список?', (response) ->\n                if response is true\n                    RequestList.delete {id: $scope.selected_list.id}, ->\n                        $scope.selected_request.lists = removeById $scope.selected_request.lists, $scope.selected_list.id\n                        delete $scope.selected_list\n                        unsetSelected(false, true, true)\n\n        $scope.removeAttachment = ->\n            bootbox.confirm 'Вы уверены, что хотите удалить стыковку?', (response) ->\n                if response is true\n                    Attachment.delete {id: $scope.selected_attachment.id}, ->\n                        $scope.selected_list.attachments = removeById $scope.selected_list.attachments, $scope.selected_attachment.id\n                        delete $scope.selected_attachment\n                        unsetSelected(false, false, true)\n\n        # parse textarea for tutor IDS\n        $scope.$watch 'selected_request.comment', (newVal, oldVal) ->\n            return if newVal is undefined and oldVal is undefined\n            newVal = oldVal if newVal is undefined\n            $scope.tutor_ids = []\n            matches = newVal.match /Репетитор [\\d]+/gi\n            $.each matches, (index, match) ->\n                tutor_id = match.match /[\\d]+/gi\n                $scope.tutor_ids.push parseInt(tutor_id)\n\n        # refresh selectpicker on $selected_attachment update\n        $scope.$watch 'selected_attachment', (newVal, oldVal) ->\n            return if newVal is undefined\n            sp 'attachment-subjects', 'выберите предмет' if oldVal is undefined\n            spRefresh 'attachment-subjects' if oldVal isnt undefined\n            rebindMasks()\n\n\n        #\n        # ПОСЛЕ ЗАГРУЗКИ КАРТЫ\n        #\n        $scope.marker_id = 1\n\n        filterMarkers = ->\n            new_markers = []\n            $.each $scope.client.markers, (index, marker) ->\n                new_markers.push _.pick(marker, 'lat', 'lng', 'type', 'metros')\n            $scope.client.markers = new_markers\n\n        $scope.$on 'mapInitialized', (event, map) ->\n            # Запоминаем карту после инициалицации\n            $scope.gmap = map\n            # Добавляем существующие метки\n            $scope.loadMarkers()\n            # generate recommended search bounds\n            INIT_COORDS =\n                lat: 55.7387\n                lng: 37.6032\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\n            $scope.geocoder = new (google.maps.Geocoder)\n            # События добавления меток\n            google.maps.event.addListener map, 'click', (event) ->\n                $scope.gmapAddMarker event\n\n        # Показать карту\n        $scope.showMap = ->\n            $('#gmap-modal').modal 'show'\n            # Показываем карту\n            google.maps.event.trigger $scope.gmap, 'resize'\n\n            # Зум и центр карты по умолчанию\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n            $scope.gmap.setZoom 11\n\n            # Обнуляем значение поиска\n            $('#map-search').val ''\n\n            # Удаляем все маркеры поиска\n            if $scope.search_markers and $scope.search_markers.length\n                $.each $scope.search_markers, (i, marker) ->\n                    marker.setMap null\n                $scope.search_markers = []\n\n            # Если уже есть добавленные маркеры\n            if $scope.client.markers.length\n                # отображать только метки с выбранным типом\n                bounds = new (google.maps.LatLngBounds)\n                # есть отображаемые маркеры\n                markers_count = 0\n                # отображаем маркеры по одному\n                $.each $scope.client.markers, (index, marker) ->\n                    markers_count++\n                    # отображаемые маркеры есть\n                    # marker.setVisible true\n                    bounds.extend marker.position\n                # если отображаемые маркеры есть, делаем зум на них\n                if markers_count > 0\n                    $scope.gmap.fitBounds bounds\n                    $scope.gmap.panToBounds bounds\n                    $scope.gmap.setZoom 11\n\n        $scope.gmapAddMarker = (event) ->\n            # Создаем маркер\n            # var marker = newMarker($scope.marker_id++, $scope.marker_type, event.latLng)\n            marker = newMarker($scope.marker_id++, event.latLng, $scope.map)\n\n            # Добавляем маркер в маркеры\n            $scope.client.markers.push(marker)\n\n            # Добавляем маркер на карту\n            marker.setMap($scope.gmap)\n\n            # Ищем ближайшие станции метро к маркеру\n            ApiService.exec 'metro',\n                lat: marker.lat\n                lng: marker.lng\n            .then (response) ->\n                marker.metros = response.data\n\n            # Добавляем ивент удаления маркера\n            $scope.bindMarkerDelete(marker)\n            $scope.bindMarkerChangeType(marker)\n\n        # Добавляем ивент удаления маркера\n        $scope.bindMarkerDelete = (marker) ->\n            google.maps.event.addListener marker, 'dblclick', (event) ->\n                t = this\n                # удаляем маркер с карты\n                t.setMap null\n                # удаляем маркер из коллекции\n                $.each $scope.client.markers, (index, m) ->\n                    console.log 'id', t.id, m.id\n                    if m isnt undefined and t.id == m.id\n                        $scope.client.markers.splice index, 1\n\n        $scope.bindMarkerChangeType = (marker) ->\n            google.maps.event.addListener marker, 'click', (event) ->\n                if @type == 'green'\n                    @type = 'red'\n                    @setIcon ICON_RED\n                else if @type == 'red'\n                    @type = 'blue'\n                    @setIcon ICON_BLUE\n                else\n                    @type = 'green'\n                    @setIcon ICON_GREEN\n\n        # Поиск по карте\n        $scope.searchMap = (address) ->\n            $scope.geocoder.geocode {\n                address: address + ', московская область'\n                bounds: $scope.RECOM_BOUNDS\n            }, (results, status) ->\n                if status == google.maps.GeocoderStatus.OK\n                    # максимальное кол-во результатов\n                    max_results = 3\n                    # масштаб поиска\n                    search_result_bounds = new (google.maps.LatLngBounds)\n                    $.each results, (i, result) ->\n                        return if i >= max_results\n\n                        search_result_bounds.extend result.geometry.location\n                        # границы карты в зависимости от поставленных меток\n                        search_marker = new (google.maps.Marker)(\n                            map: $scope.map\n                            position: result.geometry.location\n                            icon: ICON_SEARCH)\n\n                        google.maps.event.addListener search_marker, 'click', (event) ->\n                            @setMap null\n                            $scope.gmapAddMarker event\n                        $scope.search_markers = initIfNotSet($scope.search_markers)\n                        $scope.search_markers.push search_marker\n\n                    # если отображаемые маркеры есть, делаем зум на них\n                    if results.length > 0\n                        $scope.gmap.fitBounds search_result_bounds\n                        $scope.gmap.panToBounds search_result_bounds\n                        if results.length == 1\n                            $scope.gmap.setZoom 12\n                    else\n                        $('#map-search').addClass('has-error').focus()\n\n        # Запуск поиска по карте\n        $scope.gmapsSearch = ($event) ->\n            if $event.keyCode == 13 or $event.type == 'click'\n                # prevent empty\n                if $('#map-search').val() == ''\n                    $('#map-search').addClass('has-error').focus()\n                else\n                    $('#map-search').removeClass 'has-error'\n                $scope.searchMap $('#map-search').val()\n\n        # Загрузить метки\n        $scope.loadMarkers = ->\n            $rootScope.dataLoaded.promise.then ->\n                markers = []\n                $.each $scope.client.markers, (index, marker) ->\n                    # Создаем маркер\n                    # @todo: сделать так, чтобы type и metros и еще дургие можно было передавать массивом в последнем параметре\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\n                    new_marker.metros = marker.metros\n\n                    # Добавляем маркер на карту\n                    new_marker.setMap($scope.map)\n\n                    # Добавляем ивент удаления маркера\n                    $scope.bindMarkerDelete(new_marker)\n                    $scope.bindMarkerChangeType(new_marker)\n                    markers.push new_marker\n                $scope.client.markers = markers\n\n        # Сохранить метки\n        $scope.saveMarkers = ->\n            $('#gmap-modal').modal 'hide'\n","angular\n    .module 'Egerep'\n    .controller 'LoginCtrl', ($scope, $http) ->\n        $scope.checkFields = ->\n            $http.post 'login',\n                login: $scope.login\n                password: $scope.password\n            .then (response) ->\n                if response.data is true\n                    location.reload()\n","angular\n    .module 'Egerep'\n    .factory 'Request', ($resource) ->\n        $resource 'api/requests/:id', {},\n            update:\n                method: 'PUT'\n    .controller 'RequestsIndex', ($scope, Request) ->\n        $scope.requests = Request.query()\n\n    .controller 'RequestsForm', ($scope) ->\n        console.log 'here'\n","angular\n    .module 'Egerep'\n    .run ($rootScope) ->\n        $rootScope.genders =\n            male: 'Мужской'\n            female: 'Женский'\n\n\n\n    #\n    #   LIST CONTROLLER\n    #\n    .controller \"TutorsIndex\", ($scope, $rootScope, $timeout, Tutor) ->\n        $rootScope.frontend_loading = true\n\n        $scope.tutors = Tutor.query ->\n            $rootScope.frontendStop()\n\n\n\n    #\n    #   ADD/EDIT CONTROLLER\n    #\n    .controller \"TutorsForm\", ($scope, $rootScope, $timeout, $interval, Tutor, SvgMap, Subjects, Grades, ApiService) ->\n        $scope.SvgMap   = SvgMap\n        $scope.Subjects = Subjects\n        $scope.Grades   = Grades\n        $rootScope.frontend_loading = true\n\n        # get tutor\n        $timeout ->\n            if $scope.id > 0\n                $scope.tutor = Tutor.get {id: $scope.id}, ->\n                    $rootScope.frontendStop()\n\n        # @todo: ЗАМЕНИТЬ НА ДИРЕКТИВУ <ng-select> (уже сделано, но глючная. надо доделать)\n        # refresh selectpicker on update\n        $scope.$watch 'tutor.subjects', (newVal, oldVal) ->\n            return if newVal is undefined\n            sp 'tutor-subjects', 'предмет' if oldVal is undefined\n            spRefresh 'tutor-subjects' if oldVal isnt undefined\n\n        # refresh selectpicker on update\n        $scope.$watch 'tutor.grades', (newVal, oldVal) ->\n            return if newVal is undefined\n            sp 'tutor-grades', 'классы' if oldVal is undefined\n            spRefresh 'tutor-grades' if oldVal isnt undefined\n\n        $scope.svgSave = ->\n            $scope.tutor.svg_map = SvgMap.save()\n\n        $scope.yearDifference = (year) ->\n            moment().format(\"YYYY\") - year\n\n        $scope.add = ->\n            $scope.saving = true\n            Tutor.save $scope.tutor, (tutor) ->\n                window.location = laroute.route 'tutors.edit',\n                    tutors: tutor.id\n\n        $scope.edit = ->\n            $scope.saving = true\n            filterMarkers()\n\n            $scope.tutor.$update()\n                .then (response) ->\n                    $scope.saving = false\n\n\n\n\n\n\n\n\n\n        #\n        # ПОСЛЕ ЗАГРУЗКИ КАРТЫ\n        #\n        $scope.marker_id = 1\n\n        filterMarkers = ->\n            new_markers = []\n            $.each $scope.tutor.markers, (index, marker) ->\n                new_markers.push _.pick(marker, 'lat', 'lng', 'type', 'metros')\n            $scope.tutor.markers = new_markers\n\n        $scope.$on 'mapInitialized', (event, map) ->\n            # Запоминаем карту после инициалицации\n            $scope.gmap = map\n            # Добавляем существующие метки\n            $scope.loadMarkers()\n            # generate recommended search bounds\n            INIT_COORDS =\n                lat: 55.7387\n                lng: 37.6032\n            $scope.RECOM_BOUNDS = new (google.maps.LatLngBounds)(new (google.maps.LatLng)(INIT_COORDS.lat - 0.5, INIT_COORDS.lng - 0.5), new (google.maps.LatLng)(INIT_COORDS.lat + 0.5, INIT_COORDS.lng + 0.5))\n            $scope.geocoder = new (google.maps.Geocoder)\n            # События добавления меток\n            google.maps.event.addListener map, 'click', (event) ->\n                $scope.gmapAddMarker event\n\n        # Показать карту\n        $scope.showMap = ->\n            $('#gmap-modal').modal 'show'\n            # Показываем карту\n            google.maps.event.trigger $scope.gmap, 'resize'\n\n            # Зум и центр карты по умолчанию\n            $scope.gmap.setCenter new (google.maps.LatLng)(55.7387, 37.6032)\n            $scope.gmap.setZoom 11\n\n            # Обнуляем значение поиска\n            $('#map-search').val ''\n\n            # Удаляем все маркеры поиска\n            if $scope.search_markers and $scope.search_markers.length\n                $.each $scope.search_markers, (i, marker) ->\n                    marker.setMap null\n                $scope.search_markers = []\n\n            # Если уже есть добавленные маркеры\n            if $scope.tutor.markers.length\n                # отображать только метки с выбранным типом\n                bounds = new (google.maps.LatLngBounds)\n                # есть отображаемые маркеры\n                markers_count = 0\n                # отображаем маркеры по одному\n                $.each $scope.tutor.markers, (index, marker) ->\n                    markers_count++\n                    # отображаемые маркеры есть\n                    # marker.setVisible true\n                    bounds.extend marker.position\n                # если отображаемые маркеры есть, делаем зум на них\n                if markers_count > 0\n                    $scope.gmap.fitBounds bounds\n                    $scope.gmap.panToBounds bounds\n                    $scope.gmap.setZoom 11\n\n        $scope.gmapAddMarker = (event) ->\n            # Создаем маркер\n            # var marker = newMarker($scope.marker_id++, $scope.marker_type, event.latLng)\n            marker = newMarker($scope.marker_id++, event.latLng, $scope.map)\n\n            # Добавляем маркер в маркеры\n            $scope.tutor.markers.push(marker)\n\n            # Добавляем маркер на карту\n            marker.setMap($scope.gmap)\n\n            # Ищем ближайшие станции метро к маркеру\n            ApiService.exec 'metro',\n                lat: marker.lat\n                lng: marker.lng\n            .then (response) ->\n                marker.metros = response.data\n\n            # Добавляем ивент удаления маркера\n            $scope.bindMarkerDelete(marker)\n            $scope.bindMarkerChangeType(marker)\n\n        # Добавляем ивент удаления маркера\n        $scope.bindMarkerDelete = (marker) ->\n            google.maps.event.addListener marker, 'dblclick', (event) ->\n                t = this\n                # удаляем маркер с карты\n                t.setMap null\n                # удаляем маркер из коллекции\n                $.each $scope.tutor.markers, (index, m) ->\n                    console.log 'id', t.id, m.id\n                    if m isnt undefined and t.id == m.id\n                        $scope.tutor.markers.splice index, 1\n\n        $scope.bindMarkerChangeType = (marker) ->\n            google.maps.event.addListener marker, 'click', (event) ->\n                if @type == 'green'\n                    @type = 'red'\n                    @setIcon ICON_RED\n                else\n                    @type = 'green'\n                    @setIcon ICON_GREEN\n\n        # Поиск по карте\n        $scope.searchMap = (address) ->\n            $scope.geocoder.geocode {\n                address: address + ', московская область'\n                bounds: $scope.RECOM_BOUNDS\n            }, (results, status) ->\n                if status == google.maps.GeocoderStatus.OK\n                    # максимальное кол-во результатов\n                    max_results = 3\n                    # масштаб поиска\n                    search_result_bounds = new (google.maps.LatLngBounds)\n                    $.each results, (i, result) ->\n                        return if i >= max_results\n\n                        search_result_bounds.extend result.geometry.location\n                        # границы карты в зависимости от поставленных меток\n                        search_marker = new (google.maps.Marker)(\n                            map: $scope.map\n                            position: result.geometry.location\n                            icon: ICON_SEARCH)\n\n                        google.maps.event.addListener search_marker, 'click', (event) ->\n                            @setMap null\n                            $scope.gmapAddMarker event\n                        $scope.search_markers = initIfNotSet($scope.search_markers)\n                        $scope.search_markers.push search_marker\n\n                    # если отображаемые маркеры есть, делаем зум на них\n                    if results.length > 0\n                        $scope.gmap.fitBounds search_result_bounds\n                        $scope.gmap.panToBounds search_result_bounds\n                        if results.length == 1\n                            $scope.gmap.setZoom 12\n                    else\n                        $('#map-search').addClass('has-error').focus()\n\n        # Запуск поиска по карте\n        $scope.gmapsSearch = ($event) ->\n            if $event.keyCode == 13 or $event.type == 'click'\n                # prevent empty\n                if $('#map-search').val() == ''\n                    $('#map-search').addClass('has-error').focus()\n                else\n                    $('#map-search').removeClass 'has-error'\n                $scope.searchMap $('#map-search').val()\n\n        # Загрузить метки\n        $scope.loadMarkers = ->\n            $rootScope.dataLoaded.promise.then ->\n                markers = []\n                $.each $scope.tutor.markers, (index, marker) ->\n                    # Создаем маркер\n                    # @todo: сделать так, чтобы type и metros и еще дургие можно было передавать массивом в последнем параметре\n                    new_marker = newMarker($scope.marker_id++, new google.maps.LatLng(marker.lat, marker.lng), $scope.map, marker.type)\n                    new_marker.metros = marker.metros\n\n                    # Добавляем маркер на карту\n                    new_marker.setMap($scope.map)\n\n                    # Добавляем ивент удаления маркера\n                    $scope.bindMarkerDelete(new_marker)\n                    $scope.bindMarkerChangeType(new_marker)\n                    markers.push new_marker\n                $scope.tutor.markers = markers\n\n        # Сохранить метки\n        $scope.saveMarkers = ->\n            $('#gmap-modal').modal 'hide'\n","angular.module('Egerep').directive 'comments', ->\n    restrict: 'E'\n    templateUrl: 'directives/comments'\n    scope:\n        user: '='\n        entityId: '='\n        entityType: '@'\n    controller: ($scope, $timeout, Comment) ->\n        \n        # перезагружаем комменты, если меняется entity_id\n        $scope.$watch 'entityId', (newVal, oldVal) ->\n            $scope.comments = Comment.query\n                entity_type: $scope.entityType\n                entity_id: newVal\n\n        $scope.formatDateTime = (date) ->\n            moment(date).format \"DD.MM.YY в HH:mm\"\n\n        $scope.startCommenting = (event) ->\n            $scope.start_commenting = true\n            $timeout ->\n                $(event.target).parent().find('input').focus()\n\n        $scope.endCommenting = ->\n            $scope.comment = ''\n            $scope.start_commenting = false\n\n        $scope.remove = (comment) ->\n            $scope.comments = _.without($scope.comments, _.findWhere($scope.comments, {id: comment.id}))\n            comment.$remove()\n\n        $scope.edit = (comment, event) ->\n            old_text    = comment.comment\n            element     = $(event.target)\n\n            element.unbind('keydown').unbind('blur')\n\n            element.attr('contenteditable', 'true').focus()\n                .on 'keydown', (e) ->\n                    console.log old_text\n                    if e.keyCode is 13\n                        $(@).removeAttr('contenteditable').blur()\n                        comment.comment = $(@).text()\n                        comment.$update()\n                    if e.keyCode is 27\n                        $(@).blur()\n\n                .on 'blur', (e) ->\n                    if element.attr 'contenteditable'\n                        console.log old_text\n                        element.removeAttr('contenteditable').html old_text\n            return\n            # setEndOfContenteditable(event.target)\n\n        $scope.submitComment = (event) ->\n            if event.keyCode is 13\n                new_comment = new Comment\n                    comment: $scope.comment\n                    user_id: $scope.user.id\n                    entity_id: $scope.entityId\n                    entity_type: $scope.entityType\n                new_comment.$save()\n                    .then (response)->\n                        console.log response\n                        new_comment.user = $scope.user\n                        new_comment.id = response.id\n                        $scope.comments.push new_comment\n                $scope.endCommenting()\n\n            if event.keyCode is 27\n                $(event.target).blur()\n","angular.module('Egerep').directive 'email', ->\n    restrict: 'E'\n    templateUrl: 'directives/email'\n    scope:\n        address: '='\n    controller: ($scope) ->\n        $scope.send = ->\n            $('#email-modal').modal 'show'\n    # controller: ($scope, $timeout, Email) ->\n    #     # массовая отправка?\n    #     $scope.mass = false\n    #\n    #     # подсчитать СМС\n    #     $scope.smsCount = ->\n    #         SmsCounter.count($scope.message || '').messages\n    #\n    #     # отправить\n    #     $scope.send = ->\n    #         if $scope.message\n    #             sms = new Sms\n    #                 message: $scope.message\n    #                 to: $scope.number\n    #                 mass: $scope.mass\n    #             sms.$save()\n    #\n    #     # подгружаем историю, если номер телефона меняется\n    #     $scope.$watch 'number', (newVal, oldVal) ->\n    #         console.log $scope.$parent.formatDateTime($scope.created_at)\n    #         $scope.history = Sms.query({number: newVal}) if newVal\n","angular.module('Egerep').directive 'metroList', ->\n    restrict: 'E'\n    templateUrl: 'directives/metro-list'\n    scope:\n        markers: '='\n    controller: ($scope) ->\n        $scope.short = (title) ->\n            title.slice(0,3).toUpperCase()\n\n        $scope.minutes = (minutes) ->\n            Math.round minutes\n","angular.module('Egerep').directive 'phones', ->\n    restrict: 'E'\n    templateUrl: 'directives/phones'\n    scope:\n        entity: '='\n    controller: ($scope, $timeout, $rootScope) ->\n        # level depth on + (phone1, phone2, phone3)\n        $rootScope.dataLoaded.promise.then (data) ->\n            $scope.level = if $scope.entity.phone3 then 3 else if $scope.entity.phone2 then 2 else 1\n        # $timeout ->\n        #     $scope.level = if $scope.entity.phone3 then 3 else if $scope.entity.phone2 then 2 else 1\n        # , 100\n\n        $scope.nextLevel = ->\n            $scope.level++\n\n        $scope.phoneMaskControl = (event) ->\n            el = $(event.target)\n            # grabs string phone_2 from object model.phone2\n            # so it can be accessible by key\n            phone_id = el.attr('ng-model').split('.')[1]\n            $scope.entity[phone_id] = $(event.target).val()\n\n        $scope.isFull = (number) ->\n            return false if number is undefined or number is \"\"\n            !number.match(/_/)\n\n        $scope.isMobile = (number) ->\n            parseInt(number[4]) is 9 or parseInt(number[1]) is 9\n\n        # отправить смс\n        $scope.sms = (number) ->\n            $('#sms-modal').modal 'show'\n            $scope.$parent.sms_number = number\n\n        # позвонить\n        $scope.call = (number) ->\n            location.href = \"sip:\" + number.replace(/[^0-9]/g, '')\n","angular.module 'Egerep'\n    .directive 'ngSelect', ->\n        restrict: 'E'\n        replace: true\n        scope:\n            object: '='\n            model: '='\n            title: '@'\n        templateUrl: 'directives/ngselect'\n        controller: ($scope, $element, $attrs, $timeout) ->\n            $scope.title = $attrs.title\n            $scope.multiple = $attrs.hasOwnProperty('multiple')\n            # $timeout ->\n            #     $($element).selectpicker\n            #         noneSelectedText: $scope.title\n\n            # refresh selectpicker on update\n            $scope.$watch 'model', (newVal, oldVal) ->\n                console.log newVal, oldVal\n                return if newVal is undefined\n                spe $element, 'предмет' if oldVal is undefined\n                spRefresh $element if oldVal isnt undefined\n\n        # link: (scope, element, attrs) ->\n        #     angular.element(document).ready ->\n        #         console.log scope.multiple, typeof scope.multiple\n        #         if scope.multiple\n        #             console.log 'in TRUE'\n        #             # $(element).attr('multiple', true).selectpicker({noneSelectedText: scope.hint})\n        #         else\n        #             console.log 'in FALSE'\n        #             $(element).removeAttr('multiple').selectpicker()\n","angular.module('Egerep').directive 'sms', ->\n    restrict: 'E'\n    templateUrl: 'directives/sms'\n    scope:\n        number: '='\n    controller: ($scope, $timeout, Sms) ->\n        # массовая отправка?\n        $scope.mass = false\n\n        # подсчитать СМС\n        $scope.smsCount = ->\n            SmsCounter.count($scope.message || '').messages\n\n        # отправить\n        $scope.send = ->\n            if $scope.message\n                sms = new Sms\n                    message: $scope.message\n                    to: $scope.number\n                    mass: $scope.mass\n                sms.$save()\n\n        # подгружаем историю, если номер телефона меняется\n        $scope.$watch 'number', (newVal, oldVal) ->\n            console.log $scope.$parent.formatDateTime($scope.created_at)\n            $scope.history = Sms.query({number: newVal}) if newVal\n","angular.module('Egerep')\n    .value 'DebtTypes',\n        0: 'не доплатил'\n        1: 'переплатил'\n    .value 'PaymentMethods',\n        0: 'не установлено'\n        1: 'стандартный расчет'\n        2: 'яндекс.деньги'\n        3: 'перевод на сотовый'\n        4: 'перевод на карту'\n\n    .value 'RequestStates',\n        new: 'невыполненные'\n        awaiting: 'в ожидании'\n        finished: 'выполненные'\n        deny: 'отказы'\n\n    .value 'ArchiveStates',\n        impossible: 'невозможно'\n        possible: 'возможно'\n\n    .value 'ReviewStates',\n        unpublished: 'не опубликован'\n        published: 'опубликован'\n\n    .value 'ReviewScores',\n        1: 1\n        2: 2\n        3: 3\n        4: 4\n        5: 5\n        6: 6\n        7: 7\n        8: 8\n        9: 9\n        10: 10\n        11: 'не берет'\n        12: 'не помнит'\n        13: 'недоступен'\n        14: 'позвонить позже'\n\n    .value 'Grades',\n        1: '1 класс'\n        2: '2 класс'\n        3: '3 класс'\n        4: '4 класс'\n        5: '5 класс'\n        6: '6 класс'\n        7: '7 класс'\n        8: '8 класс'\n        9: '9 класс'\n        10: '10 класс'\n        11: '11 класс'\n        12: 'студенты'\n        13: 'остальные'\n\n    .value 'Subjects',\n        all:\n            1: 'математика',\n            2: 'физика',\n            3: 'химия',\n            4: 'биология',\n            5: 'информатика'\n            6: 'русский',\n            7: 'литература',\n            8: 'обществознание',\n            9: 'история',\n            10: 'английский',\n        ,\n        full:\n            1: 'Математика'\n            2: 'Физика'\n            3: 'Химия'\n            4: 'Биология'\n            5: 'Информатика'\n            6: 'Русский язык'\n            7: 'Литература'\n            8: 'Обществознание'\n            9: 'История'\n            10: 'Английский язык'\n        dative:\n            1: 'математике'\n            2: 'физике'\n            3: 'химии'\n            4: 'биологии'\n            5: 'информатике'\n            6: 'русскому языку'\n            7: 'литературе'\n            8: 'обществознанию'\n            9: 'истории'\n            10: 'английскому языку'\n        short:          ['М', 'Ф', 'Р', 'Л', 'А', 'Ис', 'О', 'Х', 'Б', 'Ин'],\n        three_letters:  ['МАТ', 'ФИЗ', 'РУС', 'ЛИТ', 'АНГ', 'ИСТ', 'ОБЩ', 'ХИМ', 'БИО', 'ИНФ'],\n        short_eng:      ['math', 'phys', 'rus', 'lit', 'eng', 'his', 'soc', 'chem', 'bio', 'inf'],\n","angular.module('Egerep')\n    .factory 'Account', ($resource) ->\n        $resource apiPath('accounts'), {id: '@id'}, updateMethod()\n\n    .factory 'Review', ($resource) ->\n        $resource apiPath('reviews'), {id: '@id'}, updateMethod()\n\n    .factory 'Archive', ($resource) ->\n        $resource apiPath('archives'), {id: '@id'}, updateMethod()\n\n    .factory 'Attachment', ($resource) ->\n        $resource apiPath('attachments'), {id: '@id'}, updateMethod()\n\n    .factory 'RequestList', ($resource) ->\n        $resource apiPath('lists'), {id: '@id'}, updateMethod()\n\n    .factory 'Request', ($resource) ->\n        $resource apiPath('requests'), {id: '@id'}, updateMethod()\n\n    .factory 'Sms', ($resource) ->\n        $resource apiPath('sms'), {id: '@id'}, updateMethod()\n\n    .factory 'Comment', ($resource) ->\n        $resource apiPath('comments'), {id: '@id'}, updateMethod()\n\n    .factory 'Client', ($resource) ->\n        $resource apiPath('clients'), {id: '@id'}, updateMethod()\n\n    .factory 'User', ($resource) ->\n        $resource apiPath('users'), {id: '@id'}, updateMethod()\n\n    .factory 'Tutor', ($resource) ->\n        $resource apiPath('tutors'), {id: '@id'}, updateMethod()\n\napiPath = (entity) ->\n    \"api/#{entity}/:id\"\n\nupdateMethod = ->\n    update:\n        method: 'PUT'\n","angular.module('Egerep')\n    .service 'ApiService', ($http) ->\n        this.exec = (fun, data) ->\n            $http.post \"api/external/#{fun}\", data\n        this\n","angular.module('Egerep').service 'SvgMap', ->\n    this.map = new SVGMap\n        iframeId: 'map',\n        clicable: true,\n        places: [],\n        placesHash: [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 180, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211]\n        groups: [\n                    {\n                        \"id\": \"1\",\n                        \"title\": \"внутри кольца\",\n                        \"points\": [\n                            4, 8, 12, 15, 18, 19, 38, 47, 48, 51, 54, 56, 58, 60, 63, 66, 68, 71, 74, 82, 83, 86, 90, 91, 92, 102, 104, 109, 111, 120, 122, 126, 129, 131, 132, 133, 137, 138, 140, 153, 156, 157, 158, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199\n                        ]\n                    },\n                    {\n                        \"id\": \"2\",\n                        \"title\": \"красная север\",\n                        \"points\": [\n                            55, 106, 124, 145, 154\n                        ]\n                    },\n                    {\n                        \"id\": \"3\",\n                        \"title\": \"красная юг\",\n                        \"points\": [\n                            33, 108, 125, 148, 151, 164, 209, 210\n                        ]\n                    },\n                    {\n                        \"id\": \"4\",\n                        \"title\": \"зеленая север\",\n                        \"points\": [\n                            9, 28, 29, 36, 112, 123\n                        ]\n                    },\n                    {\n                        \"id\": \"5\",\n                        \"title\": \"зеленая юг\",\n                        \"points\": [\n                            2, 39, 44, 46, 50, 53, 88, 152, 197, 202, 204\n                        ]\n                    },\n                    {\n                        \"id\": \"6\",\n                        \"title\": \"синяя запад\",\n                        \"points\": [\n                            32, 59, 62, 75, 76, 77, 93, 121, 127, 186, 203\n                        ]\n                    },\n                    {\n                        \"id\": \"7\",\n                        \"title\": \"синяя восток\",\n                        \"points\": [\n                            13, 42, 94, 95, 119, 161, 163\n                        ]\n                    },\n                    {\n                        \"id\": \"8\",\n                        \"title\": \"голубая\",\n                        \"points\": [\n                            11, 62, 64, 99, 128, 149, 150, 186\n                        ]\n                    },\n                    {\n                        \"id\": \"9\",\n                        \"title\": \"оранжевая север\",\n                        \"points\": [\n                            5, 10, 20, 26, 72, 113, 117\n                        ]\n                    },\n                    {\n                        \"id\": \"10\",\n                        \"title\": \"оранжевая юг\",\n                        \"points\": [\n                            3, 16, 43, 52, 65, 84, 85, 110, 135, 159, 166\n                        ]\n                    },\n                    {\n                        \"id\": \"11\",\n                        \"title\": \"фиолетовая север\",\n                        \"points\": [\n                            14, 87, 100, 103, 130, 141, 142, 162\n                        ]\n                    },\n                    {\n                        \"id\": \"12\",\n                        \"title\": \"фиолетовая юг\",\n                        \"points\": [\n                            30, 35, 57, 61, 107, 115, 134, 205, 206, 211\n                        ]\n                    },\n                    {\n                        \"id\": \"13\",\n                        \"title\": \"желтая\",\n                        \"points\": [\n                            1, 81, 96, 101, 114, 160, 180\n                        ]\n                    },\n                    {\n                        \"id\": \"14\",\n                        \"title\": \"серая север\",\n                        \"points\": [\n                            6, 17, 27, 37, 89, 97, 116, 136\n                        ]\n                    },\n                    {\n                        \"id\": \"15\",\n                        \"title\": \"серая юг\",\n                        \"points\": [\n                            7, 23, 45, 78, 79, 80, 105, 118, 139, 143, 147, 155, 165\n                        ]\n                    },\n                    {\n                        \"id\": \"16\",\n                        \"title\": \"светло-зеленая\",\n                        \"points\": [\n                            21, 31, 41, 49, 53, 57, 67, 70, 98, 101, 107, 114, 200, 201, 202\n                        ]\n                    },\n                    {\n                        \"id\": \"17\",\n                        \"title\": \"бутовская\",\n                        \"points\": [\n                            22, 23, 24, 84, 144, 146, 147, 207, 208\n                        ]\n                    },\n                    {\n                        \"id\": \"18\",\n                        \"title\": \"каховская\",\n                        \"points\": [\n                            25, 45, 46, 118, 197\n                        ]\n                    }\n                ]\n\n    this.show = (points) ->\n        $('#svg-modal').modal('show')\n        map = this.map\n        map.init()\n        map.selected = {}\n        map.deselectAll()\n        map.select(points)\n        $(\".legend a\").unbind 'click'\n        $(\".legend a\").on 'click', ->\n            id = $(this).attr(\"data-rel\")\n            map.toggleGroup(id)\n\n    this.save = ->\n        $('#svg-modal').modal('hide')\n        this.map.save()\n\n    this\n"],"sourceRoot":"/source/"}